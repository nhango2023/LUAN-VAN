Log created at 20250701_072438 for file: Giáo Trình Trí Tuệ Nhân Tạo - Nguyễn Quang Hoan-pages-2.pdf
use gpt  to grade doc
use gpt to generate qa
use gpt to grade qs
Number of paragraphs: 161


doan van-[0]: ['analyze', 'understand', 'apply', 'remember']
doan van-[1]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[2]: ['analyze', 'understand', 'apply', 'remember']
doan van-[3]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[4]: ['analyze', 'understand', 'apply', 'remember']
doan van-[5]: ['analyze', 'understand', 'apply', 'remember']
doan van-[6]: ['analyze', 'understand', 'apply', 'remember']
doan van-[7]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[8]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[9]: ['analyze', 'understand', 'remember']
doan van-[10]: ['analyze', 'understand', 'evaluate', 'remember']
doan van-[11]: ['analyze', 'understand', 'evaluate', 'remember']
doan van-[12]: ['analyze', 'apply', 'understand']
doan van-[13]: ['analyze', 'evaluate', 'understand']
doan van-[14]: ['analyze', 'apply', 'understand']
doan van-[15]: ['analyze', 'understand', 'apply', 'remember']
doan van-[16]: ['analyze', 'apply', 'understand']
doan van-[17]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[18]: ['analyze', 'apply', 'understand']
doan van-[19]: ['analyze', 'apply', 'evaluate', 'understand']
doan van-[20]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[21]: ['analyze', 'evaluate', 'understand']
doan van-[22]: ['analyze', 'apply', 'understand']
doan van-[23]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[24]: ['analyze', 'evaluate', 'understand']
doan van-[25]: ['analyze', 'apply', 'understand']
doan van-[26]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[27]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[28]: ['analyze', 'apply', 'understand']
doan van-[29]: ['analyze', 'apply', 'understand']
doan van-[30]: ['create', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[31]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[32]: ['analyze', 'apply', 'understand']
doan van-[33]: ['create', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[34]: ['analyze', 'evaluate', 'understand']
doan van-[35]: ['analyze', 'apply', 'understand']
doan van-[36]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[37]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[38]: ['create', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[39]: ['analyze', 'understand', 'apply', 'remember']
doan van-[40]: ['analyze', 'understand', 'apply', 'remember']
doan van-[41]: ['analyze', 'understand', 'apply', 'remember']
doan van-[42]: ['analyze', 'understand', 'apply', 'remember']
doan van-[43]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[44]: ['analyze', 'understand', 'apply', 'remember']
doan van-[45]: ['analyze', 'understand', 'apply', 'remember']
doan van-[46]: ['analyze', 'understand', 'apply', 'remember']
doan van-[47]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[48]: ['analyze', 'understand', 'apply', 'remember']
doan van-[49]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[50]: ['analyze', 'apply', 'understand']
doan van-[51]: ['analyze', 'understand', 'apply', 'remember']
doan van-[52]: ['analyze', 'understand', 'apply', 'remember']
doan van-[53]: ['analyze', 'understand', 'apply', 'remember']
doan van-[54]: ['analyze', 'understand', 'apply', 'remember']
doan van-[55]: ['analyze', 'understand', 'apply', 'remember']
doan van-[56]: ['analyze', 'apply', 'understand']
doan van-[57]: ['analyze', 'understand', 'apply', 'remember']
doan van-[58]: ['analyze', 'apply', 'understand']
doan van-[59]: ['analyze', 'create', 'apply', 'understand']
doan van-[60]: ['analyze', 'understand', 'apply', 'remember']
doan van-[61]: ['analyze', 'understand', 'apply', 'remember']
doan van-[62]: ['create', 'remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[63]: ['analyze', 'apply', 'understand']
doan van-[64]: ['analyze', 'apply', 'understand']
doan van-[65]: ['analyze', 'understand', 'apply', 'remember']
doan van-[66]: ['analyze', 'understand', 'apply', 'remember']
doan van-[67]: ['analyze', 'apply', 'understand']
doan van-[68]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[69]: ['analyze', 'understand', 'apply', 'remember']
doan van-[70]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[71]: ['analyze', 'understand', 'apply', 'remember']
doan van-[72]: ['analyze', 'understand', 'apply', 'remember']
doan van-[73]: ['analyze', 'understand', 'apply', 'remember']
doan van-[74]: ['analyze', 'understand', 'apply', 'remember']
doan van-[75]: ['analyze', 'understand', 'apply', 'remember']
doan van-[76]: ['analyze', 'evaluate', 'understand']
doan van-[77]: ['analyze', 'apply', 'understand']
doan van-[78]: ['analyze', 'apply', 'understand']
doan van-[79]: ['analyze', 'understand', 'apply', 'remember']
doan van-[80]: ['analyze', 'understand', 'remember']
doan van-[81]: ['analyze', 'understand', 'apply', 'remember']
doan van-[82]: ['analyze', 'understand', 'apply', 'remember']
doan van-[83]: ['analyze', 'understand', 'apply', 'remember']
doan van-[84]: ['analyze', 'understand', 'apply', 'remember']
doan van-[85]: ['analyze', 'understand', 'apply', 'remember']
doan van-[86]: ['analyze', 'understand', 'apply', 'remember']
doan van-[87]: ['analyze', 'create', 'apply']
doan van-[88]: ['analyze', 'understand']
doan van-[89]: ['analyze', 'understand', 'apply', 'remember']
doan van-[90]: ['analyze', 'evaluate', 'understand']
doan van-[91]: ['analyze', 'understand']
doan van-[92]: ['analyze', 'apply', 'understand']
doan van-[93]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[94]: ['analyze', 'apply', 'understand']
doan van-[95]: ['analyze', 'evaluate', 'understand']
doan van-[96]: ['analyze', 'apply', 'understand']
doan van-[97]: ['analyze', 'understand', 'apply', 'remember']
doan van-[98]: ['analyze', 'apply', 'understand']
doan van-[99]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[100]: ['analyze', 'understand', 'apply', 'remember']
doan van-[101]: ['analyze', 'understand', 'apply', 'remember']
doan van-[102]: ['analyze', 'apply', 'understand']
doan van-[103]: ['analyze', 'understand', 'apply', 'remember']
doan van-[104]: ['analyze', 'understand', 'apply', 'remember']
doan van-[105]: ['analyze', 'apply', 'understand']
doan van-[106]: ['analyze', 'understand', 'apply', 'remember']
doan van-[107]: ['analyze', 'apply', 'understand']
doan van-[108]: ['analyze', 'apply', 'understand']
doan van-[109]: ['analyze', 'apply', 'understand']
doan van-[110]: ['analyze', 'apply', 'understand']
doan van-[111]: ['analyze', 'understand', 'apply', 'remember']
doan van-[112]: ['analyze', 'apply', 'remember']
doan van-[113]: ['analyze', 'understand', 'apply', 'remember']
doan van-[114]: ['analyze', 'understand', 'apply', 'remember']
doan van-[115]: ['analyze', 'understand', 'apply', 'remember']
doan van-[116]: ['analyze', 'understand', 'apply', 'remember']
doan van-[117]: ['analyze', 'understand', 'apply', 'remember']
doan van-[118]: ['analyze', 'understand', 'apply', 'remember']
doan van-[119]: ['analyze', 'understand', 'apply', 'remember']
doan van-[120]: ['analyze', 'understand', 'apply', 'remember']
doan van-[121]: ['analyze', 'understand', 'apply', 'remember']
doan van-[122]: ['analyze', 'apply', 'understand']
doan van-[123]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[124]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[125]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[126]: ['analyze', 'apply', 'understand']
doan van-[127]: ['analyze', 'understand', 'apply', 'remember']
doan van-[128]: ['create', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[129]: ['analyze', 'understand', 'apply', 'remember']
doan van-[130]: ['analyze', 'understand', 'apply', 'remember']
doan van-[131]: ['analyze', 'apply', 'understand']
doan van-[132]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[133]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[134]: ['analyze', 'apply', 'understand']
doan van-[135]: ['analyze', 'understand', 'apply', 'remember']
doan van-[136]: ['analyze', 'understand', 'apply', 'remember']
doan van-[137]: ['analyze', 'understand', 'apply', 'remember']
doan van-[138]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[139]: ['analyze', 'evaluate', 'understand']
doan van-[140]: ['analyze', 'understand', 'apply', 'remember']
doan van-[141]: ['analyze', 'apply', 'understand']
doan van-[142]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[143]: ['remember', 'evaluate', 'understand', 'analyze', 'apply']
doan van-[144]: ['analyze', 'evaluate', 'understand']
doan van-[145]: ['analyze', 'apply', 'understand']
doan van-[146]: ['understand', 'remember']
doan van-[147]: ['analyze', 'understand']
doan van-[148]: ['analyze', 'apply', 'understand']
doan van-[149]: ['analyze', 'apply', 'understand']
doan van-[150]: ['analyze', 'apply', 'understand']
doan van-[151]: ['analyze', 'evaluate', 'apply', 'understand']
doan van-[152]: ['analyze', 'apply', 'understand']
doan van-[153]: ['analyze', 'apply', 'understand']
doan van-[154]: ['analyze', 'understand', 'apply', 'remember']
doan van-[155]: ['analyze', 'apply', 'understand']
doan van-[156]: ['analyze', 'understand']
doan van-[157]: ['analyze', 'understand']
doan van-[158]: ['analyze', 'apply', 'understand']
doan van-[159]: ['analyze', 'understand', 'apply', 'remember']
doan van-[160]: ['analyze', 'understand', 'apply', 'remember']
Check there are levels not detected in paragraphs
index of splited docs following its level
remember: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 60, 61, 62, 65, 66, 68, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 89, 93, 97, 99, 100, 101, 103, 104, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 127, 129, 130, 135, 136, 137, 140, 143, 146, 154, 159, 160]
understand: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160]
apply: [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160]
analyze: []
evaluate: []
create: []

the number of paragraphs>number of required questions


the number of paragraphs>number of required questions


the number of paragraphs>number of required questions


number of questions for each paragraph arranged in order of paragraph's index 

level: remember
idx: [130, 112, 2, 55, 1, 0, 66, 121, 99, 75, 118, 54, 119, 93, 114, 73, 47, 61, 129, 36, 140, 62, 97, 111, 79, 44, 104, 86, 65, 137, 51, 82, 37, 4, 84, 125, 89, 143, 9, 8, 71, 80, 85, 11, 101, 160, 40, 46, 83, 100]
number questions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
level: understand
idx: [101, 152, 5, 61, 85, 154, 30, 33, 83, 120, 143, 18, 36, 99, 109, 2, 157, 142, 51, 14, 16, 148, 45, 71, 98, 75, 115, 17, 43, 132]
number questions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
level: apply
idx: [113, 126, 28, 31, 81, 25, 135, 48, 27, 154, 61, 30, 106, 1, 111, 8, 101, 55, 14, 64]
number questions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
level: analyze
idx: []
number questions: []
level: evaluate
idx: []
number questions: []
level: create
idx: []
number questions: []





tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định miền tin cậy của tập mờ F dựa trên định nghĩa đã cho.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[định nghĩa]
Option 1: T = {x∈ M; μf(x) = 1}
Option 2: T = {x∈ M; μf(x) > 0}
Option 3: T = {x∈ M; μf(x) < 1}
Option 4: T = {x∈ M; μf(x) = 0}
Answer: T = {x∈ M; μf(x) = 1}
Citation: Miền tin cậy của tập mờ F được định nghĩa là tập con của M thoả mãn điều kiện μf(x) = 1, theo nội dung đã cung cấp.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định miền tin cậy của tập mờ F dựa trên định nghĩa đã cho trong tài liệu. Câu trả lời được gợi ý là T = {x∈ M; μf(x) = 1}, đúng với định nghĩa trong tài liệu. Ngoài ra, các đáp án khác cũng được cung cấp, trong đó chỉ có đáp án gợi ý là chính xác, còn các đáp án khác không đúng với định nghĩa miền tin cậy. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Xác định miền tin cậy của tập mờ F dựa trên định nghĩa đã cho.' options=['T = {x∈ M; μf(x) = 1}', 'T = {x∈ M; μf(x) > 0}', 'T = {x∈ M; μf(x) < 1}', 'T = {x∈ M; μf(x) = 0}'] answer='T = {x∈ M; μf(x) = 1}' citation='133\nVí dụ: tập mờ F bao gồm các số thực lớn hơn 3 và nhỏ hơn 9 có hàm liên thuộc gần đúng là hình \nthang như Hình 5.3.3 Từ hàm liên thuộc ta xác định được độ phụ thuộc (liên thuộc) của các số \ntrong tập này: \n5,0\n)\n4\n(\nf\n=\nμ\n; \n75\n,0\n)\n5,4\n(\nf\n=\nμ\n; \n1\n)\n5\n(\nf\n=\nμ\n; \n1\n)\n6\n(\nf\n=\nμ\n; \n5,0\n)\n8\n(\nf\n=\nμ\n. \nc. Độ cao, miền xác định và miền tin cậy \n \nTuy nhiên, không phải bắt buộc các hàm liên thuộc phải có giá trị lớn nhất bằng 1. Ứng \nvới điều đó thì không phải mọi hàm liên thuộc đều có độ cao bằng 1. \nĐộ cao của tập mờ F (định nghĩa trên \ncơ sở M) là giá trị: \n     H = sup μf(x),  x∈M          \nnếu tập mờ có H=1 gọi là chính tắc, H \nluôn <1 là không chính tắc. \nMiền xác định của tập mờ F (định \nnghĩa trên cơ sở M) ký hiệu bằng S, là \ntập con của M thoả mãn \n      S={x∈M; μf(x) >0}          \nMiền tin cậy của tập mờ F (định nghĩa \ntrên cơ sở M), ký hiệu bằng T, là tập \ncon của M thoả mãn  \n            \n                       T = {x∈ M;  μf(x) = 1}   \n \n \n5.3.2. Các phép toán trên tập mờ \n\x1f  \nTập mờ cũng có 3 phép toán cơ bản là phép hợp (tương đương phép OR), phép giao \n(tương đương phép AND) và phép bù (tương đương phép NOT). \na. Phép hợp hai tập mờ:  \n \nHợp của hai tập mờ A và B có cùng cơ sở \nM là một tập mờ cũng xác định trên cơ sở M với \nhàm liên thuộc: \n              μA∪B(x) = MAX{μA(x), μB(x)}            \n    Phép hợp của hai tập mờ thể hiện trên Hình5.12 \n Ngoài công thức trên còn có một số công thức khác để \ntính hàm liên thuộc của phép hợp hai tập mờ như: Phép \nhợp Lukasiewier, tổng Einstein, tổng trực tiếp ...  \n          + Phép hợp Lukasiewier: μA ∪B(x)=min{1, μA(x) + μB(x)                         \n \n+ Tổng Einstein:      \n)\nx\n(\n)\nx\n(\n1\n)\nx\n(\n)\nx\n(\n)\nx\n(\nB\nA\nB\nA\nB\nA\nμ\n+\nμ\n+\nμ\n+\nμ\n=\nμ\n∪\n                              \n \n \n \n                          \n        \n+ Tổng trực tiếp:          μA ∪B(x) = μA(x) + μB(x) - μA(x) μB(x)  \n               \n \nμ \nx \nμA(x) \nμB(x) \nHình 5:12 Phép hợp của hai tập mờ \nMiền tin cậy \nMiền xác định \n Hình 5.11: Miền xác định và miền tin cây của tập mờ \n  x \nμf(x)\n1\n0\nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=131 idx_doc=130
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 1



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Liệt kê các lớp được nhắc đến trong ngữ pháp hình thức?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[liệt kê]
Option 1: Bốn lớp: cú pháp, ngữ nghĩa, ngữ âm, ngữ dụng
Option 2: Ba lớp: cú pháp, ngữ nghĩa, ngữ âm
Option 3: Bốn lớp: ngữ âm, ngữ nghĩa, ngữ dụng, cú pháp
Option 4: Hai lớp: cú pháp, ngữ dụng
Answer: Bốn lớp: cú pháp, ngữ nghĩa, ngữ âm, ngữ dụng
Citation: Câu trả lời đúng là "Bốn lớp: cú pháp, ngữ nghĩa, ngữ âm, ngữ dụng" vì đây là các lớp chính được nhắc đến trong ngữ pháp hình thức trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu liệt kê các lớp trong ngữ pháp hình thức, và câu trả lời được gợi ý đã cung cấp đúng bốn lớp: cú pháp, ngữ nghĩa, ngữ âm, ngữ dụng. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và đầy đủ hơn so với các đáp án khác.
cau hoi dung: question='Liệt kê các lớp được nhắc đến trong ngữ pháp hình thức?' options=['Bốn lớp: cú pháp, ngữ nghĩa, ngữ âm, ngữ dụng', 'Ba lớp: cú pháp, ngữ nghĩa, ngữ âm', 'Bốn lớp: ngữ âm, ngữ nghĩa, ngữ dụng, cú pháp', 'Hai lớp: cú pháp, ngữ dụng'] answer='Bốn lớp: cú pháp, ngữ nghĩa, ngữ âm, ngữ dụng' citation='115\nCÂU HỎI VÀ BÀI TẬP \n \n1.  Không xem lại bài trả lời các câu hỏi sau: bốn lớp được nhắc đến của ngữ pháp hình \nthức? \n2. Thực hiện một phiên bản của giải thuật biểu đồ phân tích cú pháp mà kết quả là một \ncây cho tất cả cạnh mà mở rộng cho toàn bộ đầu vào. \n3. Trình bày phương pháp phát hiện tiếng nói dựa trên năng lượng phổ ngắn hạn  \n4. Trình bày phương pháp tính các hệ số MFCC: phương pháp trích chọn tham số tiếng \nnói được sử dụng rộng rãi bởi tính hiệu quả của nó thông qua phân tích cepstral theo thang đo \nmel.  \n5.Trình bày phương pháp  mã dự đoán tuyến tính LPC \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=113 idx_doc=112
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 2



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mục đích chính của chương trình DENDRAL là gì?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
Option 1: Giải quyết vấn đề có cấu trúc phân tử từ thông tin quang phổ
Option 2: Phát triển các phương pháp nghiên cứu mới cho AI
Option 3: Tạo ra các máy tính có khả năng suy nghĩ như con người
Option 4: Xây dựng các chương trình máy tính để chơi cờ vua
Answer: Giải quyết vấn đề có cấu trúc phân tử từ thông tin quang phổ
Citation: Chương trình DENDRAL được phát triển để giải quyết các vấn đề có cấu trúc phân tử từ những thông tin do máy đo quang phổ cung cấp, như đã nêu trong nội dung.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định ai là người đã phát triển chương trình DENDRAL?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Ed Feigenbaum
Option 2: Bruce Buchanan
Option 3: Joshua Lederberg
Option 4: Herbert Simon
Answer: Ed Feigenbaum
Citation: Câu trả lời đúng là Ed Feigenbaum, người đã phát triển chương trình DENDRAL tại Stanford, nơi ông là sinh viên chính quy của Herbert Simon.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định người phát triển chương trình DENDRAL, và câu trả lời được gợi ý là Ed Feigenbaum, người đã được nhắc đến trong tài liệu là một trong những người phát triển chương trình này. Các đáp án khác cũng được liệt kê trong tài liệu, cho thấy rằng câu trả lời gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Hãy xác định ai là người đã phát triển chương trình DENDRAL?' options=['Ed Feigenbaum', 'Bruce Buchanan', 'Joshua Lederberg', 'Herbert Simon'] answer='Ed Feigenbaum' citation='5\nNăm 1963, McCarthy đã có các nghiên cứu về sử dụng logic để xây dựng chương trình \nngười tư vấ  Chương trình này được phát triển do khám phá của Robinson về phương pháp cải \ncách. Những công việc đầu tiên tạo ra những hệ thống mới của McCulloch và Pitts làm cho chúng \nphát triển. Các phương pháp nghiên cứu của Hebb đã được Widrow ủng hộ (Widrow và Hoff, \n1960; Widrow, 1962). Họ đã đặt tên mang nơ ron là mạng của ông, và cũng được Frank \nRosenblatt (1962) củng cố. Rosenblatt chứng minh rằng thuật toán mà ông nghiên cứu có thể \nthêm vào những khả năng của nhận thức phù hợp với bất cứ dữ liệu đầu vào nào. \n          Những nhà nghiên cứu AI cũng đã dự đoán về những thành công sau này. Herbert Simon đã \nphát biểu (1957): Không phải mục đích của tôi là làm các bạn ngạc nhiên, nhưng cách đơn giản \nnhất để có thể khái quát là hiện nay trên thế giới, máy móc có thể suy nghĩ, có thể học và sáng tạo \nđược. Hơn nữa, khả năng của nó là làm việc với tiến độ cao- trong tương lai rõ ràng – cho đến khi \nvấn đề chúng ta có thể giải được, sẽ cùng tồn tại với tư duy của con người có thể áp dụng được. \nNăm 1958, ông dự đoán trong 10 năm nữa, một máy tính có thể vô địch trong môn cờ vua, và các \nđịnh lý toán học mới sẽ được máy chứng minh.   \n1.2. CÁC TIỀN ĐỀ CƠ BẢN CỦA TTNT \nToàn cảnh về phương pháp giải quyết vấn đề hình thành trong thập kỉ đầu nghiên cứu AI là \nmục đích nghiên cứu nỗ lực liên kết các bước lập luận cơ bản với nhau để tìm ra phương pháp \nhoàn thiện. Các phương pháp này được coi là các phương pháp kém vì sử dụng thông tin kém về \nlĩnh vực. Đối với nhiều lĩnh vực phức tạp, thì các phương pháp thực hiện lại rất kém. Cách duy \nnhất quanh vấn đề là sử dụng kiến thức phù hợp hơn để có bước lặp rộng hơn và để giải quyết các \ntrường hợp nảy sinh nhất định trong các lĩnh vực nhỏ chuyên môn. Chúng ta chắc sẽ nói rằng giải \nquyết các vấn đề khó thì hầu như phải biết trước đáp án. \nChương trình DENDRAL (Buchanan, 1969) là một ví dụ sớm tiếp cận phương pháp này. \nNó được phát triển tại Stanford, đây chính là nơi Ed Feigenbaum (một sinh viên chính qui của \nHerbert Simon). Bruce Buchanan (một triết gia chuyển sang làm nghiên cứu máy tính) và Joshua \nLederberg (nhà nghiên cứu di truyền đoạt giải Nobel) đã hợp nhau lại để cùng suy luận, giải quyết \nvấn đề có cấu trúc phân tử từ những thông tin do máy đo quang phổ cung cấp. Dữ liệu đưa vào \nchương trình gồm các cấu trúc cơ bản của phân tử (Ví dụ C6H12NO2), và rất nhiều dải quang phổ \nđưa ra hàng loạt đoạn phân tử khác nhau khái quát chung khi nó cùng một lúc đưa ra các dòng \nđiện tử. Ví dụ dải quang phổ chứa đựng một điểm nhọn tại m=15 tương ứng với một dải của đoạn \nmethyl (CH3). \nPhiên bản sơ khai của chương trình khái quát được toàn bộ cấu trúc có thể bên trong bằng \nphân tử và sau đó phỏng đoán bằng cách quan sát mỗi dải quang phổ, so sánh nó với quang phổ \nthực tế. Như chúng  ta nghĩ thì điều này trở nên nan giải đối với các phân tử có kích thước đáng \nkể. Các nhà nghiên cứu DENDRAL khuyên các nhà phân tích dược khoa và cho thấy rằng họ \nnghiên cứu bằng cách tìm kiếm các phần bên trên của điểm nhọn trong dải quang phổ, điều đó \nđưa ra gợi ý chung về các cấu trúc nhỏ bên trong phân tử. Ví dụ, qui luật sau đây được sử dụng để \nnhận ra một nhóm nhỏ xeton (C=0)  \nNếu có hai đỉnh x1, x2 như sau: \n(a) x1+x2 = M+28 (M là khối lượng của phân tử) \n(b) x1-28 là một đỉnh \n(c) x2-28 là một đỉnh \n(d) Có ít nhất một đỉnh x1 hoặc x2 là đỉnh cao. Sau đó có một nhóm nhỏ xeton.   \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=3 idx_doc=2
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 3



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định công thức tương đương nào sau đây khi đặt tên lại biến trong công thức G(x)?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: ∀x G(x) ≡ ∀y G(y)
Option 2: ∃x G(x) ≡ ∀y G(y)
Option 3: ∀x G(x) ≡ ∃y G(y)
Option 4: ∃x G(x) ≡ ∃y G(y)
Answer: ∀x G(x) ≡ ∀y G(y)
Citation: Công thức tương đương khi đặt tên lại biến trong công thức G(x) là ∀x G(x) ≡ ∀y G(y), điều này cho thấy rằng việc đổi tên biến không thay đổi tính đúng đắn của công thức.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định công thức tương đương khi đặt tên lại biến trong công thức G(x). Câu trả lời được gợi ý là ∀x G(x) ≡ ∀y G(y), đây là một công thức tương đương đúng theo tài liệu. Các đáp án khác cũng được liệt kê, trong đó có một đáp án đúng (∀x G(x) ≡ ∀y G(y)) và các đáp án sai khác. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với yêu cầu của câu hỏi.
cau hoi dung: question='Hãy xác định công thức tương đương nào sau đây khi đặt tên lại biến trong công thức G(x)?' options=['∀x G(x) ≡ ∀y G(y)', '∃x G(x) ≡ ∀y G(y)', '∀x G(x) ≡ ∃y G(y)', '∃x G(x) ≡ ∃y G(y)'] answer='∀x G(x) ≡ ∀y G(y)' citation='58\nbởi y. Ta nói G(y) là công thức nhận được từ G(x) bằngcách đặt tên lại (biến x được đổi tên lại là \ny). \nCác công thức tương đương: \n1. ∀x G(x) ≡ ∀y G(y) \n        \n ∃x G(x) ≡ ∃y G(y) \nĐặt tên lại biến đi sau lượng tử tồn tại, nhận được công thức tương đương. \n2. ⎤ (∀x G(x)) ≡ ∃x (⎤ G(x)) \n         \n \n \n \n ⎤ (∃x G(x)) ≡ ∀x (⎤ G(x)) \n3. ∀x (G(x) ∧ H(x)) ≡ ∀x G(x) ∧ ∀x H(x) \n           \n \n \n∃x (G(x) ∨ H(x)) ≡ ∃x G(x) ∨ ∃x H(x) \nVí dụ: ∀x Love(x, Husband(x)) ≡ ∀y Love(y, Husband(y)). \n3.5.6.2.  Chuẩn hóa và công thức \nTừ các câu phân tử, bằng cách sử dụng các kết nối logic và các lượng tử, ta có thể tạo ra các câu \nphức hợp có cấu trúc rất phức tạp. Để dễ dàng cho việc lưu trữ các câu trong bộ nhớ, và thuận lợi \ncho việc xây dựng các thủ tục suy diễn, chúng ta cần chuẩn hoá các câu bằng cách đưa chúng về \ndạng chuẩn tắc hội (hội của các câu tuyển). \nTrong mục này chúng ta sẽ trình bày thủ tục chuyển một câu phức hợp thành một câu ở \ndạng chuẩn tắc hội tương đương. \nThủ tục chuẩn hoá các công thức gồm các bước sau: \n• \nLoại bỏ các kéo theo  \nĐể loại bỏ các kéo theo, ta chỉ cần thay công thức P ⇒ Q bởi công thức tương đương ⎤ P ∨ Q \nthay P ⇔ Q bởi (⎤ P ∨ Q) ∧(⎤ P ∨ Q)  \n• \nChuyển các phủ định tới các phân tử  \nĐiều này được thực hiện bằng cách thay công thức ở vế trái bởi công thức ở vế phải trong các \ntương đương sau  \n⎤ (⎤ P) ≡ P \n⎤ (P ∧Q) ≡ ⎤ P ∨ ⎤ Q \n⎤ (P∨ Q) ≡ ⎤ P ∧ ⎤ Q \n⎤ (∀x P) ≡ ∃x (⎤P) \n⎤ (∃x P) ≡ ∀x (⎤P) \n• \nLoại bỏ các lượng tử tồn tại  \nGiả sử P(x,y) là các vị từ có nghĩa: “y lớn hơn x” trong miền các số. Khi đó, công thức∀x (∃y \n(P(x,y)) có nghĩa là “với mọi số x, tồn tại y sao cho số y lớn hơn x”. Ta có thể xem y trong công \nthức đó là hàm của đối số x. Chẳng hạn, loại bỏ lượng tử ∃y, công thức đang xét trở thành ∀\nx(P(x,f(x))). \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=56 idx_doc=55
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 4



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Ai là người đầu tiên hệ thống hoá tư duy chính xác theo phép tam đoạn luận?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
Option 1: Warren McCulloch
Option 2: Aristote
Option 3: Claude Shannon
Option 4: Marvin Minsky
Answer: Aristote
Citation: Aristote là người đầu tiên hệ thống hoá "tư duy chính xác" với phép tam đoạn luận, trong đó kết luận đúng nếu cả tiền đề chính và tiền đề thứ là đúng.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Ai đã định nghĩa ngôn ngữ lập trình bậc cao Lisp cho AI vào năm 1958?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[định nghĩa]
Option 1: Marvin Minsky
Option 2: Walter Pitts
Option 3: John McCarthy
Option 4: Claude Shannon
Answer: John McCarthy
Citation: John McCarthy đã định nghĩa ngôn ngữ lập trình bậc cao Lisp vào năm 1958, và đây trở thành ngôn ngữ lập trình quan trọng cho AI.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu thông tin về người đã định nghĩa ngôn ngữ lập trình bậc cao Lisp cho AI vào năm 1958, và câu trả lời được gợi ý là 'John McCarthy', đúng với thông tin trong tài liệu. Ngoài ra, các đáp án khác cũng có thể tìm thấy trong tài liệu, trong đó có 'John McCarthy', cho thấy câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Ai đã định nghĩa ngôn ngữ lập trình bậc cao Lisp cho AI vào năm 1958?' options=['Marvin Minsky', 'Walter Pitts', 'John McCarthy', 'Claude Shannon'] answer='John McCarthy' citation='4 \nnghiên cứu đương thời (như Wang (1960)) ông quan tâm đến việc có được những giải pháp đúng \nđắn, không quan tâm đến việc con người phải làm như thế nào.  \n1.1.2. Các qui tắc tư duy \nTriết gia Aristote là người đầu tiên hệ thống hoá “tư duy chính xác”. Phép tam đoạn luận của \nông đưa ra kết luận đúng nếu cả tiền đề chính và tiền đề thứ là đúng. Chẳng hạn: “nếu Sô-crát là \ncon người, mọi con người đều chết, như vậy Sô-crát sẽ chết”.  \n Môn tư duy logic phát triển vào cuối thế kỉ XIX đầu XX. Năm 1965 các chương trình cung \ncấp cho chúng ta đủ những thông tin, chi tiết về một vấn đề trong tư duy logic và tìm ra phương \npháp giải. Nếu vẫn còn vấn đề chưa có cách giải thì chương trình sẽ không ngừng tìm kiếm cách \ngiải. Môn logic truyền thống trong AI là điều mong mỏi để có được một chương trình mô tả hệ \nthống trí tuệ. \n1.1.3. Khởi nguồn của AI (1943 - 1956) \nNhững công việc đầu tiên của AI được Warren McCulioch và Walter Pitts (1943) thực hiện. \nHọ đã nghiên cứu ba cơ sở lí thuyết:  triết học cơ bản và chức năng của các nơ ron thần kinh; phân \ntích về các mệnh đề logic là của Russell và whitehead và cuối cùng là thuyết dự đoán của \nTurning. Họ đã đề ra mô hình nơ ron nhân tạo, trong đó mỗi nơ ron được đặc trưng bởi hai trạng \nthái “bật”, “tắt”. McCulloch và Pitts cũng đã phát hiện: mạng nơ ron có khả năng học. Donald \nHebb (1949) sử dụng luật học đơn giản tượng trưng cho việc truyền thông tin giữa các giữa các nơ \nron. \nĐầu những năm 1950, Claude Shannon (1950) và Alan Turning (1953) đã viết chương trình \nđánh cờ theo cách mà Von Newman sáng chế ra máy tính. Cùng lúc đó, hai sinh viên khoa toán \ntrường đại học Princeton, Marvin Minsky và Dean Edmond đã xây dựng hệ thống máy tính nơ ron \nđầu tiên vào năm 1951 được gọi là SNARC. Nó sử dụng khoảng 3000 bóng điện tử chân không và \nthiết bị cơ khí tự động tính giá trị thặng dư từ chùm B-24 để mô phỏng mạng với 40 nơ ron. \nNhóm thạc sĩ của Minsky nghi ngờ rằng liệu đây có được coi là một phần của toán học, nhưng \nNeuman một thành viên của nhóm đã cho biết rằng “nếu bây giờ nó không phải là một phần của \ntoán học thì một ngày nào đó nó sẽ là như thế”. Thật mỉa mai, sau này Minsky lại chính là người \nchứng minh học thuyết này và đã bác bỏ nhiều hệ thống nghiên cứu về mạng nơ ron trong suốt \nnhững năm 1970. \n     \nLòng say mê và tôn trọng lớn ngay từ rất sớm (1952-1969) \n   Năm 1958  McCarthy đã định nghĩa ngôn ngữ bậc cao Lisp, và trở thành ngôn ngữ lập \ntrình cho AI. Lisp là ngôn ngữ lập trình lâu đời thứ hai mà hiện nay vẫn sử dụng. Với Lisp, \nMcCarthy đã có phương tiện ông cần, nhưng để đáp ứng được yêu cầu và tài nguyên tính toán là \nmột vấn đề quan trọng. Cũng vào năm 1958, McCarthy xuất bản bài báo “Các chương trình với \ncách nhìn nhận chung”. Trong bài báo này, ông bàn về chương trình tư vấn, một chương trình giả \nđịnh được coi là hệ thống AI hoàn thiện đầu  tiên. Giống học thuyết logic và cách chứng minh các \nđịnh lý hình học, chương trình của McCarthy được thiết kế nhằm sử dụng kiến thức để nghiên cứu \ncách giải quyết vấn đề. Không như các chương trình khác, chương trình này là một bộ phận kiến \nthức của toàn bộ thế giới quan. Ông chỉ ra rằng làm thế nào để những điều rất đơn giản lại làm \ncho chương trình có thể khái quát được một kế hoạch đến sân bay và lên máy bay. Chương trình \nnày cũng được thiết kế để nó có thể chấp nhận vài chân lý mới về quá trình thực hiện bình thường. \nChính vì vậy, chương trình này có được những khả năng thực hiện trong các chương trình mới mà \nkhông cần lập trình lại.  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=2 idx_doc=1
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 5



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả lịch sử hình thành của trí tuệ nhân tạo theo nội dung đã cung cấp?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Trí tuệ nhân tạo bắt đầu vào năm 1956 và đã phát triển mạnh mẽ từ đó.
Option 2: Trí tuệ nhân tạo được phát triển từ những năm 2000 và không có nguồn gốc rõ ràng.
Option 3: Trí tuệ nhân tạo được hình thành từ các nghiên cứu về di truyền học hiện đại.
Option 4: Trí tuệ nhân tạo đã tồn tại từ thời kỳ cổ đại và không có sự phát triển nào đáng kể.
Answer: Trí tuệ nhân tạo bắt đầu vào năm 1956 và đã phát triển mạnh mẽ từ đó.
Citation: Theo nội dung, trí tuệ nhân tạo chính thức được bắt đầu vào năm 1956, mặc dù việc này đã bắt đầu từ 5 năm trước.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả lịch sử hình thành của trí tuệ nhân tạo, và câu trả lời được gợi ý đã nêu rõ thời điểm bắt đầu của trí tuệ nhân tạo vào năm 1956, điều này hoàn toàn phù hợp với nội dung tài liệu. Các đáp án khác cũng liên quan đến lịch sử hình thành của trí tuệ nhân tạo, trong đó có một đáp án đúng và một số đáp án sai, cho thấy sự đa dạng trong thông tin. Do đó, câu trả lời được gợi ý là chính xác và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Mô tả lịch sử hình thành của trí tuệ nhân tạo theo nội dung đã cung cấp?' options=['Trí tuệ nhân tạo bắt đầu vào năm 1956 và đã phát triển mạnh mẽ từ đó.', 'Trí tuệ nhân tạo được phát triển từ những năm 2000 và không có nguồn gốc rõ ràng.', 'Trí tuệ nhân tạo được hình thành từ các nghiên cứu về di truyền học hiện đại.', 'Trí tuệ nhân tạo đã tồn tại từ thời kỳ cổ đại và không có sự phát triển nào đáng kể.'] answer='Trí tuệ nhân tạo bắt đầu vào năm 1956 và đã phát triển mạnh mẽ từ đó.' citation='3\nCHƯƠNG 1:  KHOA HỌC TRÍ TUỆ NHÂN TẠO: TỔNG QUAN \n \nHọc xong phần này sinh viên có thể nắm được: \n \n1.   Ý nghĩa, mục đích môn học; lịch sử hình thành và phát triể. Các tiền đề cơ bản của Trí \ntuệ nhân tạo (TTNT) \n2.   Các khái niệm cơ bản, định nghĩa của TTNT. \n3.   Các lĩnh vực nghiên cứu và ứng dụng cơ bản. Những vấn đè chưa được giải quyết trong \nTTNT \n1.1  LỊCH SỬ HÌNH THÀNH VÀ PHÁT TRIỂN \nTrong phần này chúng tôi nỗ lực giải thích tại sao chúng tôi coi trí tuệ nhân tạo là một bộ \nmôn đáng nghiên cứu nhất; và nỗ lực của chúng tôi nhằm giải thích trí tuệ nhân tạo là gì. Đây có \nphải là bộ môn hấp dẫn khi nghiên cứu không. \nTrí tuệ nhân tạo hay AI (Artificial Intelligence)  là một trong những ngành  tiên tiến nhất. \nNó chính thức được bắt đầu vào năm 1956, mặc dù việc này đã bắt đầu từ 5 năm trước. Cùng với \nngành di truyền học hiện đại, đây là môn học được nhiều nhà khoa học đánh giá: “là lĩnh vực tôi \nthích nghiên cứu nhất trong số những môn tôi muốn theo đuổi”. Một sinh viên vật lý đã có lý khi \nnói rằng: tất cả các ý tưởng hay đã được Galileo, Newton, Einstein tìm rồi; một số ý tưởng khác \nlại mất rất nhiều năm nghiên cứu trước khi có vai trò thực tiễn. AI vẫn là vấn đề để trống từ thời \nEinstein. \nQua hơn 2000 năm, các triết gia đã cố gắng để hiểu cách nhìn, học, nhớ và lập luận được \nhình thành như thế nào. Sự kiện những chiếc máy tính có thể sử dụng được vào đầu những năm \n50 của thế kỉ XX đã làm các nhà tri thức thay đổi hướng suy nghĩ. Rất nhiều người cho rằng: \n“những trí tuệ siêu  điện tử” mới này đã cho ta dự đoán được tiềm năng của trí tuệ. AI thực sự khó \nhơn rất nhiều so với ban đầu mọi người nghĩ. \nHiện nay AI đã chuyển hướng sang nhiều lĩnh vực nhỏ, từ các lĩnh vực có mục đích chung \nchung như nhận thức, lập luận, tư duy logic đến những công việc cụ thể như đánh cờ, cung cấp \nđịnh lý toán học, làm thơ và chuẩn đoán bệnh. Thường, các nhà khoa học trong các lĩnh vực khác \ncũng nghiêng về trí tuệ nhân tạo. Trong lĩnh vực này họ thấy các phương tiện làm việc, vốn từ \nvựng được hệ thống hoá, tự động hoá: các nhiệm vụ trí tuệ là công việc mà họ sẽ có thể cống hiến \ncả đời. Đây thực sự là một ngành rất phổ biến.     \n1.1.1. Tư duy như con người: phương pháp nhận thức \nNếu muốn một chương trình máy tính có khả năng suy nghĩ như con người, chúng ta phải \ntìm hiểu con người đã tư duy như thế nào? Có một số tiêu chí xác định như thế nào là suy nghĩ \nkiểu con người. Chúng ta cần xem công việc bên trong của bộ óc con người. Có hai phương pháp \nđể thực hiện điều này: thứ nhất là thông qua tư duy bên trong - phải nắm bắt được suy nghĩ của \ncon người khi làm việc - thứ hai thông qua thí nghiệm tâm lý. Khi chúng ta đã có được đầy đủ lý \nthuyết về tư duy thì chúng ta có thể chương trình hoá nó trên máy tính. Nếu đầu vào/ra của \nchương trình và thời gian làm việc phù hợp với con người thì những chương trình tự động này có \nthể hoạt động theo con người. Ví dụ, Newell và Simon đã phát triển phương pháp giải quyết vấn \nđề GPS- General Problem Solver (Newell and Simon 1961). Đây là phương pháp đối lập với các \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=1 idx_doc=0
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 6



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách biểu diễn danh sách [spring, summer, autumn, winter] bằng cấu trúc cây như thế nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Cây được biểu diễn bởi hạng thức: list (spring, list(summer, list (autumn, list (winter,[ ]))))
Option 2: Cây biểu diễn danh sách này không có cấu trúc rõ ràng.
Option 3: Danh sách này được biểu diễn bằng một cây đơn giản mà không có hạng thức.
Option 4: Cây này chỉ chứa các đối số là kí hiệu hằng mà không có cây con.
Answer: Cây được biểu diễn bởi hạng thức: list (spring, list(summer, list (autumn, list (winter,[ ]))))
Citation: Câu trả lời đúng là "Cây được biểu diễn bởi hạng thức: list (spring, list(summer, list (autumn, list (winter,[ ]))))" vì nó chính xác mô tả cách mà danh sách này được biểu diễn dưới dạng hạng thức và cấu trúc cây trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách biểu diễn danh sách [spring, summer, autumn, winter] bằng cấu trúc cây, và câu trả lời được gợi ý đã cung cấp chính xác hạng thức biểu diễn danh sách này. Hạng thức được đưa ra là đúng và có thể tìm thấy trong tài liệu. Các đáp án khác cũng liên quan đến câu hỏi, nhưng chỉ có hạng thức là chính xác và phù hợp nhất.
cau hoi dung: question='Mô tả cách biểu diễn danh sách [spring, summer, autumn, winter] bằng cấu trúc cây như thế nào?' options=['Cây được biểu diễn bởi hạng thức: list (spring, list(summer, list (autumn, list (winter,[ ]))))', 'Cây biểu diễn danh sách này không có cấu trúc rõ ràng.', 'Danh sách này được biểu diễn bằng một cây đơn giản mà không có hạng thức.', 'Cây này chỉ chứa các đối số là kí hiệu hằng mà không có cây con.'] answer='Cây được biểu diễn bởi hạng thức: list (spring, list(summer, list (autumn, list (winter,[ ]))))' citation='69\n \nTriangle (point(3, 2), point(6, 4), point(8, 1)) \nCác hạng thức trên được biểu diễn bởi các cấu trúc cây trong hình 3.4 \nMột cách tổng quát, các hạng thức được biểu diễn bởi các cây (chẳng hạn, các cây trong \nhình 3.4), trong đó gốc của cây là các kí hiệu hàm. Nếu các đối số này không phải là kí hiệu hằng, \nhoặc kí hiệu biến thì chúng là các cây con của gốc được tạo thành theo quy tắc trên. \nBây giờ chúng ta xem xét các đối tượng danh sách được biểu diễn bởi cấu trúc cây như \nthế nào. Nhớ lại rằng, danh sách [spring, summer, autumn, winter] \nđược biểu diễn bởi hạng thức: list (spring, list(summer, list (autumn, list (winter,[ ])))) \nHạng thức này được biểu diễn bởi cây trong hình 3.5 \n \n \n \n \n \n \n \n \n \n \n \n \nHình 3.5 Cây biểu diễn danh sách [spring, summer, autumn, winter] \nMột cách tương tự, bằng cách chuyển sang dạng hạng thức, ta có thể biểu diễn danh sách: \n[a,b], c, [ [a, e], d ] ] bởi cây trong hình 3.6 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nHình 3.6 Cây biểu diễn danh sách [ [a,b], c, [[a,e],d] ] \nList\nList\nSpring \nList\nSummer\nAutumn\n[ ] \nWinter\nList \n[] \nList\na\n[]\nb \nList \nList\nc\nd \ne\na\nList\n[] \nList\nList\nList\nList \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=67 idx_doc=66
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 7



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định luật học nào được sử dụng trong mạng Adaline để xấp xỉ một hàm tuyến tính?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Luật học Hebb
Option 2: Luật học Adaline
Option 3: Luật học RBF
Option 4: Luật học Kohonen
Answer: Luật học Adaline
Citation: Luật học Adaline sử dụng phương pháp bình phương cực tiểu truy hồi để xấp xỉ một hàm tuyến tính, như được nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định luật học được sử dụng trong mạng Adaline để xấp xỉ một hàm tuyến tính, và câu trả lời được gợi ý là 'Luật học Adaline', điều này hoàn toàn chính xác và phù hợp với nội dung tài liệu. Ngoài ra, các đáp án khác cũng được liệt kê, trong đó có 'Luật học Adaline', cho thấy câu trả lời gợi ý là một trong những lựa chọn đúng. Do đó, câu trả lời được đánh giá là đúng.
cau hoi dung: question='Xác định luật học nào được sử dụng trong mạng Adaline để xấp xỉ một hàm tuyến tính?' options=['Luật học Hebb', 'Luật học Adaline', 'Luật học RBF', 'Luật học Kohonen'] answer='Luật học Adaline' citation='124\nnhững luật học quan trọng nhất của mạng nơron nhân tạo. Trong luật học của Hebb, tín hiệu học \nthay đổi theo: \n                               r ≡ f(Wi\nT X) = f(yi) ;    \n                        ΔWi= α f(Wi\nTX) Xj= α yiXj;   i=1,2..,n ;  j=1,2..,m;  r ≡ di - yi \nTrong một mạng cụ thể nào đó, luật Hebb có dạng:                           \n                           ΔWij=α [di - Sign(Wi\nT X)]Xj         .           \n \n                                  (5.14) \n \nMạng Adaline một lớp (Windrov, 1960) \nAdaline (Adaplive Linear Element): là một nơron với đặc thù hàm tích hợp (tổng các đầu vào) \ntuyến tính và hàm kích hoạt (hàm đầu ra) dốc. Phương trình mô tả cấu trúc như sau: \n∑\n=\n≡\n=\nm\n1\nj\nj\nj\nd\nx\nw\ny\n \nhoặc           \nd\nX\nW\ny\nT\n≡\n=\n                          (5.15) \n \nLuật học: Luật học Adaline sử dụng phương pháp bình phương cực tiểu truy hồi. \nWindrow và Hoff đề ra luật học dựa trên phương pháp gradient dùng một Adaline để xấp xỉ một \nhàm tuyến tính (m-1) biến nhờ một tập hợp gồm p mẫu. Đầu tiên chọn tuỳ ý véctơ trọng ban đầu \nW(1), sau đó ta từng bước hiệu chỉnh lại W(k) theo các mẫu {x(k) , d(k)}, k=1,...,p, sao cho tổng \nbình phương sai số đạt cực tiểu: \n           \n∑\n∑\n∑\n∑\n=\n=\n=\n=\n−\n=\n−\n=\n−\n=\np\n1\nk\nm\n1\nj\n2\nj\nj\n)\nk\n(\np\n1\nk\np\n1\nk\n2\n)\nk\n(\nT\n)\nk\n(\n2\n)\nk\n(\n)\nk\n(\n)\nx\nw\nd\n(\n2\n1\n)\nx\nw\nd\n(\n2\n1\n)\ny\nd\n(\n2\n1\n)\nw\n(\nE\n  \n   (5.16) \n               \n∑\n=\n−\nη\n=\n∂\n∂\nη\n=\nΔ\np\n1\nk\nj\n)\nk\n(\n)\nk\n(\nT\n)\nk\n(\nj\nj\nx\n)\nx\nW\nd\n(\nW\nE\nW\n  \n \n  (5.17) \n  \nHọc được tiến hành lần lượt theo các mẫu, nên ΔWj có thể tính tuần tự: \n                               \n)\nk\n(\nj\n)\nk\n(\nT\n)\nk\n(\nj\nx\n)\nx\nW\nd\n(\nW\n−\nη\n=\nΔ\n \n             \n  (5.18) \nE(W) có dạng bình phương, là một siêu Parabol trong không gian các trọng Rm, có một \nđiểm cực tiểu duy nhất. Do đó, nếu chọn η đủ nhỏ theo phương pháp gradient ở trên thì có thể tìm \nđược véc tơ trọng tối ưu sau số lần lặp đủ lớn. \nMạng nơron RBF (Radial Basis Function) \nMạng RBF được Moody và Darker đề xuất năm 1989 dựa trên sự tương đồng giữa khai \ntriển RBF với mạng nơron một lớp ẩn. Khả năng xấp xỉ của các hàm phi tuyến của mạng có thể \nthừa nhận từ hai lý do. Một là, nó là một kiểu khai triển RBF. Hai là, nó tương đương với hệ \nthống mờ và là một công cụ xấp xỉ vạn năng. Đặc biệt mạng RBF Gauss sẽ là một kiểu mạng “có \nmột số người thắng”, nên có thể áp dụng luật học không giám sát của Kohonen mở rộng. Điều này \ncó thể giải thích từ cách suy diễn kiểu NẾU-THÌ  của hệ thống mờ tương đương. \nCấu trúc mạng nơron RBF \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=122 idx_doc=121
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 8



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả quy trình đào tạo mẫu tiếng nói trong hệ thống nhận dạng tiếng nói như thế nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Quy trình bao gồm việc sử dụng tập mẫu tiếng nói để đào tạo và đối sánh mẫu.
Option 2: Quy trình chỉ cần một bước là đối sánh mẫu tiếng nói.
Option 3: Quy trình không cần sử dụng tập mẫu tiếng nói để đào tạo.
Option 4: Quy trình chỉ tập trung vào việc phân loại mẫu mà không cần đào tạo. 
Answer: Quy trình bao gồm việc sử dụng tập mẫu tiếng nói để đào tạo và đối sánh mẫu.
Citation: Quy trình đào tạo mẫu tiếng nói trong hệ thống nhận dạng tiếng nói bao gồm việc sử dụng tập mẫu tiếng nói để đào tạo các mẫu tiếng nói đặc trưng và sau đó đối sánh mẫu tiếng nói từ ngoài với các mẫu đặc trưng để ra quyết định.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả quy trình đào tạo mẫu tiếng nói trong hệ thống nhận dạng tiếng nói, và câu trả lời được gợi ý đã nêu rõ hai bước chính trong quy trình này: sử dụng tập mẫu tiếng nói để đào tạo và đối sánh mẫu. Điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng liên quan đến quy trình nhưng không chính xác hoặc không đầy đủ như đáp án gợi ý. Do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Mô tả quy trình đào tạo mẫu tiếng nói trong hệ thống nhận dạng tiếng nói như thế nào?' options=['Quy trình bao gồm việc sử dụng tập mẫu tiếng nói để đào tạo và đối sánh mẫu.', 'Quy trình chỉ cần một bước là đối sánh mẫu tiếng nói.', 'Quy trình không cần sử dụng tập mẫu tiếng nói để đào tạo.', 'Quy trình chỉ tập trung vào việc phân loại mẫu mà không cần đào tạo. '] answer='Quy trình bao gồm việc sử dụng tập mẫu tiếng nói để đào tạo và đối sánh mẫu.' citation='102\nBước 1: Sử dụng tập mẫu tiếng nói (cơ sở dữ liệu mẫu tiếng nói) để đào tạo các mẫu tiếng \nnói đặc trưng (mẫu tham chiếu) hoặc các tham số hệ thống. \nBước 2: Đối sánh mẫu tiếng nói từ ngoài với các mẫu đặc trưng để ra quyết định.   \nTrong phương pháp này, nếu cơ sở dữ liệu tiếng nói cho đào tạo có đủ các phiên bản mẫu \ncấn nhận dạng thì quá trình đào tạo có thể xác định chính xác các đặc tính âm học của mẫu (các \nmẫu ở đây có thể là âm vị, từ, cụm từ…). Hiện nay, một số kỹ thuật nhận dạng mẫu được áp dụng \nthành công trong nhận dạng tiếng nói là lượng tử hóa vector, so sánh thời gian động (DTW), mô \nhình Markov ẩn (HMM), mạng nơron nhân tạo (ANN). \nHệ thống bao gồm các hoạt động sau: \nTrích chọn đặc trung: Tín hiệu tiếng nói được phân tích thành chuỗi các số đo để xác định \nmẫu nhận dạng. Các số đo đặc trưng là kết quả xử lý của các kỹ thuật phân tích phổ như: lọc \nthông dải, phân tích mã hóa dự đoán tuyến tính (LPC), biến đổi Fourier rời rạc (DFT).    \nHuấn luyện mẫu: Nhiều mẫu tiếng nói ứng với các đơn vị âm thanh cùng loại dùng để đào \ntạo các mẫu hoặc các mô hình đại diện, được gọi là mẫu tham chiếu hay mẫu chuẩn.    \nNhận dạng: Các mẫu tiếng nói được đưa tới khối phân loại mẫu. Khối này đối sánh mẫu \nđầu vào với các mẫu tham chiếu. Kối nhận dạng căn cứ vào các tiêu chuẩn đánh giá để quyết định \nmẫu tham chiếu nào giống mẫu đầu vào.    \nMột số đặc điểm của phương pháp nhận dạng mẫu: \n• \nHiệu năng của hệ phụ thuộc vào số mẫu đưa vào. Nếu số lượng mẫu càng nhiều thì độ \nchính xác của hệ càng cao; tuy nhiên, dung lượng nhớ và thời gian luyện mẫu tăng.     \n• \nCác mẫu tham chiếu phụ thuộc vào môi trường thu âm và môi trường truyền dẫn.  \n• \nKhông đòi hỏi kiến thức sâu về ngôn ngữ.  \n• \nPhương pháp ứng dụng trí tuệ nhân tạo   \nPhương pháp ứng dụng trí tuệ nhân tạo kết hợp các phương pháp trên nhằm tận dụng tối \nđa các ưu điểm của chúng, đồng thời bắt chước các khả năng của con người trong phân tích và \ncảm nhận các sự kiện bên ngoài để áp dụng vào nhận dạng tiếng nói. Sơ đồ khối của phương pháp \ntrí tuệ nhân tạo theo mô hình từ dưới lên (bottom-up) (Hình 4.4). \n \nĐặc điểm của các hệ thống nhận dạng theo phương pháp này là: \nSử dụng hệ chuyên gia để phân đoạn, gán nhãn ngữ âm. Điều này làm đơn giản hóa hệ \nthống so với phương pháp nhận dạng ngữ âm. \nSử dụng mạng nơron nhân tạo để học mối quan hệ giữa các ngữ âm, sau đó dùng nó để \nnhận dạng tiếng nói. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=100 idx_doc=99
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 9



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các điều kiện nào mà Ki phải thỏa mãn để suy ra rằng Ki là báo Châu Phi?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Ki là loài thú ăn thịt, có màu lông vàng hung và có đốm sẫm.
Option 2: Ki là loài có vú, có màu lông trắng và có đốm đen.
Option 3: Ki là loài thú ăn cỏ, có màu lông nâu và không có đốm.
Option 4: Ki là loài động vật hoang dã, có màu lông vàng và có đốm lớn.
Answer: Ki là loài thú ăn thịt, có màu lông vàng hung và có đốm sẫm.
Citation: Đáp án đúng là "Ki là loài thú ăn thịt, có màu lông vàng hung và có đốm sẫm" vì đây là các điều kiện được nêu rõ trong nội dung để suy ra rằng Ki là báo Châu Phi.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các điều kiện mà Ki phải thỏa mãn để suy ra rằng Ki là báo Châu Phi. Câu trả lời được gợi ý đã nêu đúng các điều kiện cần thiết: Ki là loài thú ăn thịt, có màu lông vàng hung và có đốm sẫm, điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng được liệt kê, trong đó có một đáp án đúng trùng khớp với câu trả lời gợi ý, cho thấy câu trả lời này là chính xác và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Xác định các điều kiện nào mà Ki phải thỏa mãn để suy ra rằng Ki là báo Châu Phi?' options=['Ki là loài thú ăn thịt, có màu lông vàng hung và có đốm sẫm.', 'Ki là loài có vú, có màu lông trắng và có đốm đen.', 'Ki là loài thú ăn cỏ, có màu lông nâu và không có đốm.', 'Ki là loài động vật hoang dã, có màu lông vàng và có đốm lớn.'] answer='Ki là loài thú ăn thịt, có màu lông vàng hung và có đốm sẫm.' citation='78\nCả hai sự kiện này đều có trong bộ nhớ làm việc, do đó từ luật 4 ta suy ra “Ki là thú ăn \nthịt”. Sự kiện mới này lại được thêm vào bộ nhớ làm việc. Ta xét tiếp luật 6, thế biến “động vật” \nbởi Ki, các điều kiện của luật trở thành: \nKi là loài thú ăn thịt, và \nKi có màu lông vàng hung, và \nKi có đốm sẫm \nTất cả các điều kiện này đều đúng, do đó từ luật 6, ta suy ra “Ki là báo Châu Phi”. Như \nvậy từ các sự kiện đã biết về Ki, lập luận tiến đã suy ra các sự kiện mới sau \nKi là loài có vú. \nKi là thú ăn thịt. \nKi là báo Châu Phi. \n3.6.3 Lập luận lùi \nTrong các hệ dựa trên luật, chúng ta còn có thể sử dụng phương pháp lập luận lùi \n(backward chaining hoặc backward reasoning). \nTrong lập luận lùi, người ta đưa ra các giả thuyết cần được đánh giá. Sử dụng lập luận lùi, giả \nthuyết đưa ra hoặc là được chứng minh, hoặc là bị bác bỏ (bởi các sự kiện trong bộ nhớ làm việc). \nCần lưu ý rằng, chúng ta nói giả thuyết được chứng minh, hoặc bị bác bỏ là muốn nói tới nó được \nchứng minh, hoặc bác bỏ bởi tình trạng hiện thời của bộ nhớ làm việc. Khi mà bộ nhớ làm việc \nthay đổi (chúng ta thêm vào hoặc loại bỏ một số sự kiện) thì một giả thuyết đã được chứng minh \ncó thể trở thành bị bác bỏ và ngược lại. \nQuá trình lập luận lùi diễn ra như sau: Ta đối sánh giả thuyết đưa ra với các sự kiện trong \nbộ nhớ làm việc. Nếu có một sự kiện khớp với giả thuyết, (ở đây “khớp” được hiểu là hai câu mô \ntả sự kiện và giả thuyết trùng nhau qua một phép thế nào đó), thì ta xem như giả thuyết là đúng. \nNếu không cớ sự kiện nào khớp với giả thuyết, thì ta đối sánh giả thuyết với phần kết luận của các \nluật. Với mỗi luật mà kết luận của luật khớp với giả thuyết, ta đi lùi lại phần điều kiện của luật. \nCác điều kiện này của luật được xem như các giả thuyết mới. Với giả thuyết mới, ta lập lại quá \ntrình trên. \nNếu tất cả các giả thuyết được sinh ra trong quá trình phát triển các giả thuyết bởi các luật \nđược chọn thích hợp đều được thoả mãn (đều có trong bộ nhớ làm việc) thì giả thuyết đã đưa ra \nđược xem là đúng. Ngược lại, dù ta áp dụng luật nào để phát triển các giả thuyết cũng dẫn tới các \ngiả thuyết không có trong bộ nhớ làm việc và không thể quy giả thuyết này về các giả thuyết mới \nkhác, thì giả thuyết đã đưa ra được xem là sai. \nVí dụ lập luận lùi. Để làm sáng tỏ tư tưởng của lập luận lùi,  xét với dụ sau.Giả sử bộ nhớ \nlàm việc chứa các sự kiện sau. \nBibi có lông vũ \nBibi có chân dài \nBibi có cổ dài \nBibi không biết bay \nTa đưa ra giả thuyết sau đây \nBibi là đà điểu \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=76 idx_doc=75
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 10



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định cấu trúc của mạng nơron truyền thẳng một lớp dựa trên thông tin đã cho.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Mỗi nơron có nhiều đầu vào và một đầu ra
Option 2: Mạng có nhiều lớp nơron khác nhau
Option 3: Mỗi tín hiệu vào chỉ được đưa vào một nơron
Option 4: Nơron chỉ có một đầu vào và nhiều đầu ra
Answer: Mỗi nơron có nhiều đầu vào và một đầu ra
Citation: Cấu trúc của mạng nơron truyền thẳng một lớp được mô tả là mỗi nơron có nhiều đầu vào và một đầu ra, cho phép tất cả các tín hiệu vào được đưa vào cho tất cả các nơron của lớp.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định cấu trúc của mạng nơron truyền thẳng một lớp, và câu trả lời được gợi ý "Mỗi nơron có nhiều đầu vào và một đầu ra" là chính xác và phù hợp với thông tin trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là đúng nhất và cụ thể cho câu hỏi.
cau hoi dung: question='Xác định cấu trúc của mạng nơron truyền thẳng một lớp dựa trên thông tin đã cho.' options=['Mỗi nơron có nhiều đầu vào và một đầu ra', 'Mạng có nhiều lớp nơron khác nhau', 'Mỗi tín hiệu vào chỉ được đưa vào một nơron', 'Nơron chỉ có một đầu vào và nhiều đầu ra'] answer='Mỗi nơron có nhiều đầu vào và một đầu ra' citation='121\n*Một kiểu phân loại điển hình được biểu diễn trên Hình 5.2 \n \nMột số dạng hàm mũ, logarit \ncũng được sử dụng trong khâu đầu ra \nphi tuyến mặc dù cơ sở sinh vật của \nnhững hàm đó chưa được đặt ra. Đầu ra \ny(t) trong trường hợp tổng quát có thể là \nliên tục hoặc rời rạc.  \nCũng như nơron sinh vật, các \nnơron nhân tạo có thể liên kết với nhau \nđể tạo thành mạng. Có nhiều cách kết \nhợp các nơron nhân tạo thành mạng, \nmỗi cách kết hợp tạo thành một loại lớp \nmạng khác nhau. \n \n5.2.3. Các cấu trúc mạng điển hình \nMạng nơron truyền thẳng một lớp \nLà mạng mà các nơron tạo thành một lớp, trong đó mỗi một tín hiệu vào có thể được đưa \nvào cho tất cả các nơron của lớp và mỗi nơron có nhiều các đầu vào và một đầu ra trên mỗi nơ ron \nđó (Hình 5.3). Xét trường hợp các nơron không phải là động học (tức H(s) =1) khi đó xi(t) = vi(t). \nPhương trình mạng được mô tả như sau:  \n                                 x t\nb u\nt\nI\ni\nik\nk\nk\nm\ni\n( )\n( )\n=\n+\n=∑\n1\n \n \n \n                  yi = g(xi(t)),                                                                 (5.4) \nHình 5.3 Mạng nơron truyền thẳng một lớp \ng(.) \ny1 \nb11 \nx1 \nu1 \ng(.) \ny2 \n \nx2 \nu2 \ng(.) \nyn \nbnm \nxn \num \n# \n#\nI1 \nI2 \nIn \nBack \nPropa- \nration \nMẠNG NƠRON NHÂN TẠO \nTruyền thẳng \nTự tổ chức \nPhản hồi \nNhiều \nlớp \nMột \nlớp \nBrain \nState-in \nBox \nMáy \nBoltz- \nmann \nHop- \nfield \nánh xạ \nđặc trưng \n \nART \nMc \nCulloch\nPitts \nCohen \nGross- \nberg \nPerce\nptron \nAda- \nline \n        Hình 5.2: Một cách Phân loại mạng nơron nhân tạo \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=119 idx_doc=118
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 11



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định ngữ nghĩa của câu ∀x Student(x) trong miền đối tượng gồm {Lan, An, Hoa} là gì?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Ngữ nghĩa của câu là Student(Lan) ∧ Student(An) ∧ Student(Hoa)
Option 2: Ngữ nghĩa của câu là Student(Lan) ∨ Student(An) ∨ Student(Hoa)
Option 3: Ngữ nghĩa của câu là Student(Lan) ∧ Student(An)
Option 4: Ngữ nghĩa của câu là Student(Lan) hoặc Student(An) hoặc Student(Hoa)
Answer: Ngữ nghĩa của câu là Student(Lan) ∧ Student(An) ∧ Student(Hoa)
Citation: Ngữ nghĩa của câu ∀x G được xác định như là ngữ nghĩa của công thức là hội của tất cả các công thức nhận được từ công thức G bằng cách thay x bởi một đối tượng trong miền đối tượng. Trong trường hợp này, miền đối tượng gồm ba người {Lan, An, Hoa}, do đó ngữ nghĩa của câu ∀x Student(x) là Student(Lan) ∧ Student(An) ∧ Student(Hoa).
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định ngữ nghĩa của câu ∀x Student(x) trong miền đối tượng {Lan, An, Hoa}. Câu trả lời được gợi ý là Student(Lan) ∧ Student(An) ∧ Student(Hoa), đúng với nội dung tài liệu, vì nó phản ánh chính xác ngữ nghĩa của câu ∀x Student(x) theo định nghĩa trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng chỉ có đáp án gợi ý là đúng. Do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Xác định ngữ nghĩa của câu ∀x Student(x) trong miền đối tượng gồm {Lan, An, Hoa} là gì?' options=['Ngữ nghĩa của câu là Student(Lan) ∧ Student(An) ∧ Student(Hoa)', 'Ngữ nghĩa của câu là Student(Lan) ∨ Student(An) ∨ Student(Hoa)', 'Ngữ nghĩa của câu là Student(Lan) ∧ Student(An)', 'Ngữ nghĩa của câu là Student(Lan) hoặc Student(An) hoặc Student(Hoa)'] answer='Ngữ nghĩa của câu là Student(Lan) ∧ Student(An) ∧ Student(Hoa)' citation='57\ncâu Student (Lan) có giá trị chân lý là True hoặc False tuỳ thuộc trong thực tế Lan có phải là sinh \nviên hay không. \nNgữ nghĩa của các câu phức hợp. \nKhi đã xác định được ngữ nghĩa của các câu đơn, ta có thể xác định được ngữ nghĩa của các câu \nphức hợp (được tạo thành từ các câu đơn bằng các liên kết các câu đơn bởi các kết nối logic) như \ntrong logic mệnh đề. \nVí dụ: Câu Student(Lan) ∧ Student(An) nhận giá trị True nếu cả hai câu Student(Lan) và \nStudent(An) đều có giá trị True, tức là cả Lan và An đều là sinh viên. \nCâu Like(Lan, Rose) ∨ Like(An, Tulip) là đúng nếu câu Like(Lan, Rose) là đúng hoặc câu \nLike(An, Tulip) là đúng. \nNgữ nghĩa của các câu chứa các lượng tử \nNgữ nghĩa của các câu ∀x G, trong đó G là một công thức nào đó, được xác định như là ngữ \nnghĩa của công thức là hội của tất cả các công thức nhận được từ công thức G bằng cách thay x \nbởi một đối tượng trong miền đối tượng. Chẳng hạn, nếu miền đối tượng gồm ba người {Lan, An, \nHoa} thì ngữ nghĩa của câu ∀x Student(x) được xác định là ngữ nghĩa của câu Student(Lan) ∧ \nStudent(An) ∧ Student(Hoa). Câu này đúng khi và chỉ khi cả ba câu thành phần đều đúng, tức là \ncả Lan, An, Hoa đều là sinh viên. \nNhư vậy, công thức ∀x G là đúng nếu và chỉ nếu mọi công thức nhận được từ G bằng cách thay x \nbởi một đối tượng trong miền đối tượng đều đúng, tức là G đúng cho tất cả các đối tượng x trong \nmiền đối tượng. \nNgữ nghĩa của công thức ∃x G được xác định như là ngữ nghĩa của công thức là tuyển của tất cả \ncác công thức nhận được từ G bằng cách thay x bởi một đối tượng trong miền đối tượng. Chẳng \nhạn, nếu ngữ nghĩa của câu Younger(x,20) là “x trẻ hơn 20 tuổi “và miền đối tượng gồm ba người \n{Lan, An, Hoa} thì ngữ nghĩa của câu ∃x Yourger(x,20) là ngữ nghĩa của câu Yourger(Lan,20) ∨ \nYourger(An,20) ∨ Yourger(Hoa,20). Câu này nhận giá trị True nếu và chỉ nếu ít nhất một trong \nba người Lan, An, Hoa trẻ hơn 20 tuổi. \nNhư vậy công thức ∃x G là đúng nếu và chỉ nếu một trong các công thức nhận được từ G \nbằng cách thay x bằng một đối tượng trong miền đối tượng là đúng. \nBằng các phương pháp đã trình bày ở trên, ta có thể xác định được giá trị chân lý (True, False) \ncủa một công thức bất kỳ trong một minh hoạ. (Lưu ý rằng, ta chỉ quan tâm tới các công thức \nđóng). \nSau khi đã xác định khái niệm minh hoạ và giá trị chân lý của một công thức trong một \nminh hoạ, chúng ta có thể đưa ra các khái niệm công thức vững chắc (thoả được, không thoả \nđược), mô hình của công thức giống như trong logic mệnh đề. \nCác công thức tương đương \nCũng như trong logic mệnh đề, ta nói hai công thức G và H tương đương (viết là G ≡ H) \nnếu chúng cùng đúng hoặc cùng sai trong mọi minh hoạ. Ngoài các tương đương đã biết trong \nlogic mệnh đề, trong logic vị từ cấp một còn có các tương đương khác liên quan tới các lượng tử. \nGiả sử G là một công thức, cách viết G(x) nói rằng công thức G có chứa các xuất hiện của biến x. \nKhi đó công thức G(y) là công thức nhận được từ G(x) bằng cách thay tất cả các xuất hiện của x \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=55 idx_doc=54
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 12



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mạng nơron truyền thẳng nhiều lớp có khả năng ánh xạ phi tuyến giữa các đầu vào và đầu ra như thế nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
Option 1: Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi.
Option 2: Mạng ba lớp không thể mô tả được mọi hàm phi tuyến.
Option 3: Mạng một lớp không thể ánh xạ phi tuyến.
Option 4: Mạng nơron không có khả năng phân tích.
Answer: Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi.
Citation: Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi, điều này được nêu rõ trong nội dung mô tả về mạng nơron truyền thẳng nhiều lớp.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mạng nơron truyền thẳng nhiều lớp có thể mô tả khả năng ánh xạ phi tuyến giữa các đầu vào và đầu ra như thế nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi.
Option 2: Mạng ba lớp không thể mô tả mọi hàm phi tuyến.
Option 3: Mạng một lớp không có khả năng ánh xạ phi tuyến.
Option 4: Mạng nơron không có khả năng ánh xạ giữa đầu vào và đầu ra.
Answer: Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi.
Citation: Theo nội dung, mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi, điều này cho thấy tính khả thi của mạng nơron trong việc xử lý các đầu vào và đầu ra phi tuyến.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến khả năng ánh xạ phi tuyến của mạng nơron truyền thẳng nhiều lớp, và câu trả lời được gợi ý đúng với nội dung trong tài liệu, cụ thể là mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi. Các đáp án khác cũng đúng và có thể tìm thấy trong tài liệu, do đó câu trả lời được gợi ý là chính xác.
cau hoi dung: question='Mạng nơron truyền thẳng nhiều lớp có thể mô tả khả năng ánh xạ phi tuyến giữa các đầu vào và đầu ra như thế nào?' options=['Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi.', 'Mạng ba lớp không thể mô tả mọi hàm phi tuyến.', 'Mạng một lớp không có khả năng ánh xạ phi tuyến.', 'Mạng nơron không có khả năng ánh xạ giữa đầu vào và đầu ra.'] answer='Mạng hai lớp có khả năng ánh xạ các hàm trong vùng lồi.' citation='122\ntrong đó: xi(t) là các trạng thái của nơ ron,  i =1,..., n; ui(t) là các đầu vào ngoài; bik là trọng liên \nkết, k = 1,..., m; yi(t) là đầu ra; n là số nơron; m là số tín hiệu ngoài đưa vào. \nCó thể mô tả phương trình (1.4) dưới dạng phương trình ma trận véc tơ: \n \n       \n \n                  x(t) = Bu(t) + I \n \n \n \n                   y(t) = g(x(t)) \n \n                                      (5.5) \ntrong đó: x = [x1, x2,..., xn]T là véc tơ trạng thái; i = 1,...,n; y = [y1, y2,..., yn]T là véc tơ đầu \nra; B=[bik] là ma trận trọng n×m chiều; I = [I1, I2,..., In]T  là véc tơ hằng. \n \nNếu mỗi nơron có đặc tính động học bậc nhất H(s)=1/(Ts+1) thì tập hợp của các nơron có \nthể được viết dưới dạng phương trình trạng thái: \n \n \n                \nI\nt\nBu\nt\nx\ndt\ndx\nT\n+\n=\n+\n)\n(\n)\n(\n   \n \n \n                           y(t) = g(x(t))  \n \n \n                              (5.6) \n \nHệ phương trình (1.6) có thể cho ở dạng rời rạc:  \n \n \n               Tx(t + 1) + (1-T)x(t) =  Bu(t) + I  \n \n \n                            y(t) = g(x(t))  \n                    \n                               (5.7) \n \nĐặc tính mạng phụ thuộc vào ma trận liên kết B và dạng động học H(s). \n \nMạng truyền thẳng nhiều lớp \n      Liên kết một lớp cho khả \nnăng ánh xạ phi tuyến giữa các \nđầu vào và các đầu ra. Mạng hai \nlớp có khả năng ánh xạ các hàm \ntrong vùng lồi. Mạng một hoặc \nhai lớp nói chung dễ phân tích. \nMạng ba lớp hoặc nhiều lớp có \nkhả năng mô tả được mọi hàm \nphi tuyến. Theo Cybenco thì bất \nkỳ hàm phi tuyến nào cũng có thể \nxấp xỉ tuỳ ý trên một tập compact \nbằng mạng nơron truyền thẳng \ngồm hai lớp ẩn với độ phi tuyến \ncố định. Như vậy, khi xây dựng mạng nơ ron trong xử lý, mạng hai lớp ẩn đủ khả năng xấp xỉ một \nhàm tùy chọn mà có thể không dùng nhiều lớp hơn phức tạp cho tính toán. \n        Xét mạng tĩnh (H(s)=1) truyền thẳng nhiều lớp có phương trình mô tả như sau: \n \n \n          \nq\ni\nm\n1\nk\nk\nik\nn\n1\nj\n1\nq\nj\nq\nij\nq\ni\nI\n)t(\nu\nb\n)t(\ny\nw\n)t(\nx\nq\n+\n+\n=\n∑\n∑\n=\n=\n−\n \n \n \n \n                       \n))\nt(\nx\n(\ng\ny\nq\ni\nq\nq\ni =\n  \n                           (5.8) \n  Hình 5.4: Mạng truyền thẳng nhiều lớp \nu1 \nu2 \num \n1\n1\ny\nLớp  vào \nLớp  ẩn \nLớp  ra \n1\n2\ny\n1\nm\ny\nQ\n1\ny\nQ\n2\ny\nQ\nm\ny\n# \n#\n#\n#\n# \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=120 idx_doc=119
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 13



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách mà các hệ thống hiện đại chuyển từ kiểu logic sang kiểu không gian vector trong thu thập thông tin?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Các hệ thống hiện đại sử dụng từ điển đồng nghĩa để tăng cường từ trong câu hỏi
Option 2: Các hệ thống hiện đại so sánh vector với tập hợp các vector khác
Option 3: Các hệ thống hiện đại chỉ sử dụng từ khóa để tìm kiếm tài liệu
Option 4: Các hệ thống hiện đại không sử dụng bất kỳ phương pháp nào để thu thập thông tin
Answer: Các hệ thống hiện đại so sánh vector với tập hợp các vector khác
Citation: Trong nội dung, có đề cập rằng các hệ thống hiện đại chuyển từ kiểu logic sang kiểu không gian vector, trong đó danh sách các từ được coi như một vector và việc tìm các tài liệu chính là việc so sánh vector này với tập hợp các vector khác.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách mà các hệ thống hiện đại chuyển từ kiểu logic sang kiểu không gian vector trong thu thập thông tin, và câu trả lời được gợi ý đã nêu rõ rằng các hệ thống hiện đại so sánh vector với tập hợp các vector khác, điều này hoàn toàn phù hợp với nội dung trong tài liệu. Hơn nữa, các đáp án khác cũng liên quan đến các phương pháp mà hệ thống hiện đại sử dụng trong thu thập thông tin, cho thấy sự đa dạng trong các cách tiếp cận. Do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Mô tả cách mà các hệ thống hiện đại chuyển từ kiểu logic sang kiểu không gian vector trong thu thập thông tin?' options=['Các hệ thống hiện đại sử dụng từ điển đồng nghĩa để tăng cường từ trong câu hỏi', 'Các hệ thống hiện đại so sánh vector với tập hợp các vector khác', 'Các hệ thống hiện đại chỉ sử dụng từ khóa để tìm kiếm tài liệu', 'Các hệ thống hiện đại không sử dụng bất kỳ phương pháp nào để thu thập thông tin'] answer='Các hệ thống hiện đại so sánh vector với tập hợp các vector khác' citation='96\ndụng sẽ hỏi một dãy các câu hỏi mà ở đó có một số câu hỏi lại liên quan đến các câu hỏi hoặc trả \nlời truớc đó. Ví dụ: \nWhat countries are north of the equator? \nHow about south? \nShow only the ones outside Australasia? \nWhat is their total area? \nMột số hệ thống coi vấn đề đó như giới hạn.  \nTrong những năm 1990, nhiều công ty như Natural Language Inc. và Symatec vẫn bán các \ncông cụ truy cập dữ liệu sử dụng ngôn ngữ tự nhiên, nhưng những khách hàng không thích mua \nsản phẩm dựa trên ngôn ngữ tự nhiên hơn là các giao diện đồ hoạ. Ngôn ngữ tự nhiên không phải \nlà con đường tự nhiên nhất (ví dụ chuột và click). \n4.2.2 Thu thập thông tin \nThu thập thông tin là lấy từ một văn bản ra một số dữ liệu phù hợp với một câu hỏi. Một \nsố tài liệu được miêu tả bởi đại diện, như tiêu đề, danh sách từ khoá, hoặc tóm tắt. Hiện nay có \nquá nhiều thông tin trực tuyến, tốt nhất là sử dụng toàn bộ văn bản, có thể chia thành các đoạn, \nmỗi đoạn coi như một tài liệu riêng biệt cho việc mục đích thu thập thông tin. Các câu hỏi thường \nlà danh sách các từ khoá. Trong các hệ thống thu thập thông tin ban đầu, các câu hỏi là sự kết hợp \nlogic các từ khoá. Khi một câu hỏi không tìm thấy tài liệu, ví dụ, nó không đủ rộng để tìm được \nmột vài tài liệu. Chuyển một “and” thành một “or” là một khả năng; thêm vào một ngăn cách là \nmột khả năng nữa, nhưng có khi lại tìm thấy quá nhiều và không đủ hướng dẫn. \nHầu hết các hệ thống hiện đại đều chuyển từ kiểu logic sang kiểu không gian vector, trong \nđó danh sách các từ (cả trong tài liệu, trong câu hỏi) đều được coi như một vettor trong không \ngian n-chiều, ở đó n là số dấu hiệu phân biệt của tập hợp tài liệu. Nó sẽ được coi như một vector. \nKhi đó việc tìm các tài liệu chính là việc so sánh vector này với tập hợp các vector khác và đưa ra \nnhững véc tơ gần nhất với nó. Kiểu véctơ linh động hơn kiểu logic bởi vì có thể sắp xếp các tài \nliệu bởi khoảng cách tới câu hỏi, và tài liệu nào gần nhất được báo cáo trước. \nKiểu này có nhiều dạng. Một vài hệ thống cho phép các câu hỏi phát biểu rằng hai từ phải \nxuất hiện gần nhau mới được đếm như một lần, một vài hệ thống khác sử dụng từ điển đồng nghĩa \nlàm tăng thêm các từ trong câu hỏi bằng các từ đồng nghĩa với nó. Chỉ những hệ thống tồi nhất \nmới đếm tất cả các số hạng trong vector tương đương. Nhiều hệ thống đánh giá trọng lượng các số \nhạng khác nhau. Cách tốt nhất là cho số hạng trọng lượng lớn nếu nó là từ đặc trưng: nếu nó xuất \nhiện trong một số ít các văn bản hơn là trong nhiều văn bản. \n4.2.3 Phân loại văn bản \nKỹ thuật xử lý ngôn ngữ tự nhiên (NLP: Natural Language Processing) đã thành công \ntrong một công việc liên quan: sắp xếp văn bản theo các chủ đề xác định. Một số hệ thống thương \nmại truy cập thông tin của các bức điện báo theo cách này. Một người thuê bao có thể hỏi tất cả \ncác thông tin trong các lĩnh vực công nghiệp, thương mại, hoặc địa lí. Các nhà cung cấp đã sử \ndụng kiến thức của các chuyên gia để xác định các lớp. Trong vài năm gần đây, các hệ thống NLP \nđã được chứng minh tính đúng đắn, phân lớp chính xác trên 90% các thông tin thời sự. Chúng \ncũng nhanh hơn và thích hợp hơn, và đã có sự chuyển đổi từ thủ công sang các hệ thống tự động. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=94 idx_doc=93
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 14



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô hình nơron sinh vật có thể được xác định qua những phần nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Các nhánh và rễ, thân thần kinh, dây thần kinh
Option 2: Chỉ có thân thần kinh và dây thần kinh
Option 3: Các nhánh, thân thần kinh và các ion
Option 4: Chỉ có các nhánh và rễ
Answer: Các nhánh và rễ, thân thần kinh, dây thần kinh
Citation: Mô hình nơron sinh vật được mô tả bao gồm bốn phần cơ bản: các nhánh và rễ, thân thần kinh, và dây thần kinh, cho thấy cấu trúc và nguyên lý hoạt động chung của chúng.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các phần của mô hình nơron sinh vật, và câu trả lời được gợi ý đã liệt kê đúng các phần cơ bản: các nhánh và rễ, thân thần kinh, và dây thần kinh. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và đầy đủ hơn so với các đáp án khác.
cau hoi dung: question='Mô hình nơron sinh vật có thể được xác định qua những phần nào?' options=['Các nhánh và rễ, thân thần kinh, dây thần kinh', 'Chỉ có thân thần kinh và dây thần kinh', 'Các nhánh, thân thần kinh và các ion', 'Chỉ có các nhánh và rễ'] answer='Các nhánh và rễ, thân thần kinh, dây thần kinh' citation='117\nGiai đoạn hai có thể tính từ sau thế chiến thứ hai. Đặc biệt, vào những năm  cuả thập niên \n60 gần như đồng thời xuất hiện một loạt mô hình mạng nơ ron hoàn hảo hơn được đưa ra như: \nPerceptron cuả Rosenblatt, phần tử nơ ron tuyến tính Adaline (ADAptive LINear Element) cuả \nWindrow, Ma trận học cuả Steinbuck. Perceptron rất được chú trọng vì nguyên lý giản đơn, \nnhưng nó cũng hạn chế vì như Minsky và Papert đã chứng minh nó không dùng được cho các hàm \nlogic phức. Bản chất cuả Adaline là tuyến tính, tự chỉnh và được dùng rộng rãi cho những bài toán \ntự thích nghi, tách nhiễu và vẫn phát triển cho đến ngày nay. \nGiai đoạn thứ ba có thể tính từ đầu những năm 80 đến nay. Những đóng góp to lớn cho \nmạng nơ ron ở giai đoạn này phải kể đến Grossberg, Kohonen, Rumelhart và Hopfield. Đóng góp \nchính cuả Hopfield là hai mô hình mạng phản hồi: mạng rời rạc năm 1982 và mạng liên tục năm \n1984. Đặc biệt, ông dự kiến nhiều khả năng tính toán lớn cuả mạng mà một nơ ron đơn không thể \ncó được. \nGiai đoạn thứ tư, từ năm 1990 đến nay. Các Hội nghị, Tạp chí khoa học và chuyên đề đặc \nbiệt về mạng nơ ron liên tục được tổ chức ví dụ như IJCNN (International Joint Conference on \nNeural Networks). Hàng loạt các lĩnh vực khác nhau như: kỹ thuật tính toán, tính toán tối ưu, ứng \ndụng mạng nơ ron trong tin học, viễn thông, sinh-y-học, dự báo, thống kê... đã đi vào áp dụng và \nđem lại nhiều kết quả đáng khích lệ. \n5.2.2 Cơ sở của mạng nơron nhân tạo và một số khái niệm \nĐầu tiên, chúng ta tìm hiểu nguồn gốc của mạng nơ ron, bắt đầu từ một phần tử nơ ron \nđơn giản. Mô hình nơron nhân tạo có nguồn gốc từ mô hình tế bào thần kinh (hay còn gọi là \nnơron) sinh vật. Mục đích của phần này không mô tả và nghiên cứu nơ ron sinh học (việc đó có \nchuyên ngành nơ ron sinh vật nghiên cứu) mà muốn chỉ ra rằng: từ những nguyên lý cơ bản nhất \ncủa nơ ron sinh học, người ta đã bắt chước mô hình đó cho nơ ron nhân tạo [20]. \na) Mô hình nơron sinh vật \nCác nơron sinh vật có nhiều dạng khác nhau như dạng hình tháp ở đại não, dạng tổ ong ở \ntiểu não, dạng rễ cây ở cột sống. Tuy nhiên, chúng có cấu trúc và nguyên lý hoạt động chung. Từ \nmô hình chung nhất, người ta có thể mô tả chúng như một nơron chuẩn. Một tế bào nơron chuẩn \ngồm bốn phần cơ bản là [20]:  \n+ Các nhánh và rễ: là các bộ phận nhận thông tin. Các đầu nhạy hoặc các đầu ra của các \nnơ ron khác bám vào rễ hoặc nhánh của một nơ ron. Khi các đầu vào từ ngoài này có sự chênh \nlệch về nồng độ K+, Na+ hay Cl- so với nồng độ bên trong của của nơ ron thì xảy ra hiện tượng \nthấm (hoặc hiện tượng bơm) từ ngoài vào trong thông qua một cơ chế màng thấm đặc biệt. Hiện \ntượng thẩm thấu như vậy tạo nên một cơ chế truyền đạt thông tin với hàng nghìn hàng vạn lối vào \ntrên một nơ ron sinh vật, ứng với hàng nghìn hàng vạn liên kết khác nhau. Mức độ thẩm thấu \nđược đặc trưng bởi cơ chế màng tượng trưng bằng một tỷ lệ. Tỷ lệ đó được gọi là tỷ trọng hay đơn \ngiản gọi là trọng (weight) \n \n+ Thân thần kinh (soma) chứa các nhân và cơ quan tổng hợp prôtêin. Các ion vào được \ntổng hợp và biến đổi. Khi nồng độ các ion đạt đến một giá trị nhất định, xẩy ra quá trình phát \nxung (hay kích thích). Xung đó được phát ở các đầu ra của nơ ron. Dây dẫn đầu ra xung được gọi \nlà dây thần kinh (axon).  \n \n \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=115 idx_doc=114
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 15



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả quá trình lập luận tiến trong các hệ dựa trên luật?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Quá trình lập luận tiến là quá trình xem xét các luật và suy ra sự kiện mới từ các sự kiện trong bộ nhớ làm việc.
Option 2: Quá trình lập luận tiến chỉ là việc tìm ra câu trả lời cho một câu hỏi cụ thể.
Option 3: Quá trình lập luận tiến không liên quan đến việc áp dụng các luật trong cơ sở luật.
Option 4: Quá trình lập luận tiến là một phương pháp giải quyết vấn đề cụ thể trong lập luận.
Answer: Quá trình lập luận tiến là quá trình xem xét các luật và suy ra sự kiện mới từ các sự kiện trong bộ nhớ làm việc.
Citation: Quá trình lập luận tiến được mô tả là việc xem xét các luật và từ đó suy ra các sự kiện mới nếu tất cả các điều kiện của luật đều được thỏa mãn.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả quá trình lập luận tiến trong các hệ dựa trên luật, và câu trả lời được gợi ý đã nêu đúng bản chất của quá trình này. Câu trả lời đúng với nội dung trong tài liệu, trong đó mô tả rằng lập luận tiến là quá trình xem xét các luật và suy ra sự kiện mới từ các sự kiện trong bộ nhớ làm việc. Các đáp án khác cũng có liên quan, nhưng chỉ có một số đáp án là đúng, như câu trả lời được gợi ý. Do đó, câu trả lời được gợi ý đạt yêu cầu.
cau hoi dung: question='Mô tả quá trình lập luận tiến trong các hệ dựa trên luật?' options=['Quá trình lập luận tiến là quá trình xem xét các luật và suy ra sự kiện mới từ các sự kiện trong bộ nhớ làm việc.', 'Quá trình lập luận tiến chỉ là việc tìm ra câu trả lời cho một câu hỏi cụ thể.', 'Quá trình lập luận tiến không liên quan đến việc áp dụng các luật trong cơ sở luật.', 'Quá trình lập luận tiến là một phương pháp giải quyết vấn đề cụ thể trong lập luận.'] answer='Quá trình lập luận tiến là quá trình xem xét các luật và suy ra sự kiện mới từ các sự kiện trong bộ nhớ làm việc.' citation='76\n3.6  CƠ CHẾ SUY DIỄN \n3.6.1 Khái niêm về suy diễn và lập luận \nSuy diễn (inference) và lập luận (reasoning) là hai khái niệm được dùng chung để chỉ một tiến \ntrình đưa đến kết luận từ các giả thiết cho ở dạng cơ sở tri thức (sự kiện, quy luật) \nCác hệ tri thức mà cơ sở tri thức bao gồm các luật sẽ được gọi là các hệ dựa trên luật (rule - \nbased system). Trong các mục còn lại của chương này chúng ta sẽ nghiên cứu các thủ tục suy diễn \ntrong các hệ dựa trên luật. \nMột khi chúng ta đã lưu trữ một cơ sở tri thức, chúng ta cần có thủ tục lập luận để rút ra các \nkết luận từ cơ sở tri thức. Trong các hệ dựa luật, có hai phương pháp luận lập luận cơ bản: \n• \nLập luận tiến và  \n• \nlập luận lùi \nChúng ta sẽ phân chia cơ sở tri thức thành hai bộ phận: cơ sở luật và cơ sở sự kiện (hoặc bộ \nnhớ làm việc). Cơ sở luật bao gồm các luật có ít nhất một điều kiện, biểu diễn các tri thức chung \nvề lĩnh vực áp dụng. Còn cơ sở luật bao gồm các câu phần tử (các luật không điều kiện) mô tả các \nsự kiện mà chúng ta biết về các đối tượng trong lĩnh vực áp dụng. \n3.6.2 Lập luận tiến \nTư tưởng cơ bản của lập luận tiến là áp dụng luật suy diễn Modus Ponens tổng quát). \nTrong mỗi bước của thủ tục lập luận tiến, người ta xét một luật trong cơ sở luật. Đối sánh mỗi \nđiều kiện của luật với các sự kiện trong cơ sở sự kiện, nếu tất cả các điều kiện của luật đều được \nthoả mãn thì sự kiện trong phần kết luận của luật được xem là sự kiện được suy ra. Nếu sự kiện \nnày là sự kiện mới (không có trong bộ nhớ làm việc), thì nó được đặt vào bộ nhớ làm việc. Quá \ntrình trên được lặp lại cho tới khi nào không có luật nào sinh ra các sự kiện mới. \nNhư vậy quá trình lập luận tiến là quá trình xem xét các luật. Với mỗi luật, ta đi từ phần \nđiều kiện tới phần kết luận của luật, khi mà tất cả các điều kiện của luật đều được làm thoả mãn \n(bởi các sự kiện trong cơ sở sự kiện), thì ta suy ra sự kiện trong phần kết luận của luật. Chính vì lẽ \nđó mà có tên lập luận tiến (forward chaining hoặc forward reasoning). \nQuá trình lập luận tiến không định hướng tới giải quyết một vấn đề nào cả, không định \nhướng tới tìm ra câu trả lời cho một câu hỏi nào cả. Lập luận tiến chỉ là quá trình suy ra các sự \nkiện mới từ các sự kiện trong bộ nhớ làm việc. Vì vậy lập luận tiến còn được gọi là lập luận điều \nkhiển bởi dữ liệu (data - driven reasioning), hoặc lập luận định hướng dữ liệu (data - directed \nreasioning). \nVí dụ lập luận tiến. Để thấy được quá trình lập luận tiến diễn ra như thế nào, chúng ta xét \nví dụ sau đây. (Ví dụ này là của P. H. Winston xem [17]). \nGiả sử cơ sở luật (cơ sở luật về các động vật trong sở thú) gồm các luật sau \nLuật 1:  nếu   động vật có lông mao \n             thì    động vật là loài có vú \nLuật 2:  nếu   động vật có lông vũ \n             thì    động vật là chim \n \nLuật 3:  nếu   1.  động vật biết bay, và \n       2.  động vật đẻ trứng \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=74 idx_doc=73
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 16



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả luật phân giải trong bối cảnh suy diễn tin cậy như thế nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Luật phân giải cho phép suy ra một kết luận từ hai giả thiết mà một hạng tử trong giả thiết này đối lập với hạng tử trong giả thiết kia.
Option 2: Luật phân giải chỉ áp dụng cho các công thức đơn giản mà không cần đến bảng chân lý.
Option 3: Luật phân giải là một phần của lý thuyết tập hợp mà không liên quan đến suy diễn.
Option 4: Luật phân giải không thể kiểm chứng bằng bảng chân lý trong bất kỳ trường hợp nào.
Answer: Luật phân giải cho phép suy ra một kết luận từ hai giả thiết mà một hạng tử trong giả thiết này đối lập với hạng tử trong giả thiết kia.
Citation: Luật phân giải được mô tả là một luật suy diễn cho phép chúng ta suy ra kết luận từ hai tuyển, trong đó một hạng tử đối lập với một hạng tử trong tuyển kia, dẫn đến kết luận về các hạng tử còn lại.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả luật phân giải trong bối cảnh suy diễn tin cậy, và câu trả lời được gợi ý đã nêu rõ rằng luật phân giải cho phép suy ra một kết luận từ hai giả thiết mà một hạng tử trong giả thiết này đối lập với hạng tử trong giả thiết kia, điều này hoàn toàn đúng với nội dung tài liệu. Các đáp án khác cũng có liên quan, nhưng chỉ có đáp án đầu tiên là chính xác và phù hợp với nội dung tài liệu. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Mô tả luật phân giải trong bối cảnh suy diễn tin cậy như thế nào?' options=['Luật phân giải cho phép suy ra một kết luận từ hai giả thiết mà một hạng tử trong giả thiết này đối lập với hạng tử trong giả thiết kia.', 'Luật phân giải chỉ áp dụng cho các công thức đơn giản mà không cần đến bảng chân lý.', 'Luật phân giải là một phần của lý thuyết tập hợp mà không liên quan đến suy diễn.', 'Luật phân giải không thể kiểm chứng bằng bảng chân lý trong bất kỳ trường hợp nào.'] answer='Luật phân giải cho phép suy ra một kết luận từ hai giả thiết mà một hạng tử trong giả thiết này đối lập với hạng tử trong giả thiết kia.' citation='50\nα1,.......,αi,........αm \nα1 ∧.......∧αi ∧....... ∧αm \nTừ một danh sách các công thức, ta suy ra hội của chúng. \n\x1f Luật đưa vào tuyển  \nαi \nα1∨.......∨ αi. ∨.......∨ αm \nTừ một công thức, ta suy ra một tuyển mà một trong các hạng tử của tuyển là công thức đó. \n\x1f Luật phân giải \n α ∨ β,⎤ β ∨ γ  \n  α ∨ γ \nTừ hai tuyển, một tuyển chứa một hạng tử đối lập với một hạng tử trong tuyển kia, ta suy ra tuyển \ncủa các hạng tử còn lại trong cả hai tuyển.  \nMột luật suy diễn được xem là tin cậy (sound) nếu bất kỳ một mô hình nào của giả thiết của luật \ncũng là mô hình của kết luận của luật. Chúng ta chỉ quan tâm đến các luật suy diễn tin cậy. \nBằng phương pháp bảng chân lý, ta có thể kiểm chứng được các luật suy diễn nêu trên đều là tin \ncậy. Bảng chân lý của luật phân giải được cho trong hình 3.3. Từ bảng này ta thấy rằng, trong bất \nkỳ một minh họa nào mà cả hai giả thiết α ∨ β, ⎤ β ∨ γ đúng thì kết luận α ∨ γ cũng đúng. Do đó \nluật phân giải là luật suy điễn tin cậy. \n \nα \nβ \nγ \nα ∨ β \nlβ ∨ γ \nα ∨ γ \nFalse \nFalse \nFalse \nFalse \nTrue \nFalse \nFalse \nFalse \nTrue \nFalse \nTrue \nTrue \nFalse \nTrue \nFalse \nTrue \nFalse \nFalse \nFalse \nTrue \nTrue \nTrue \nTrue \nTrue \nTrue \nFalse \nFalse \nTrue \nTrue \nTrue \nTrue \nFalse \nTrue \nTrue \nTrue \nTrue \nTrue \nTrue \nFalse \nTrue \nFalse \nTrue \nTrue \nTrue \nTrue \nTrue \nTrue \nTrue \nHình 3.3 Bảng chân lý chứng minh tính tin cậy của luật phân giải. \n \nTa có nhận xét rằng, luật phân giải là một luật suy diễn tổng quát, nó bao gồm luật Modus \nPonens, luật Modus Tollens, luật bắc cầu như các trường hợp riêng. (Bạn đọc dễ dàng chứng minh \nđược điều đó). \nTiên đề, định lý, chứng minh.  \nGiả sử chúng ta có một tập nào đó các công thức. Các luật suy diễn cho phép ta từ các \ncông thức đã có suy ra công thức mới bằng một dãy áp dụng các luật suy diễn. Các công thức đã \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=48 idx_doc=47
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 17



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách xác định quan hệ thành phần trong danh sách bằng vị từ Member(X,L).
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: X là thành phần của danh sách L nếu X là đầu của L hoặc là thành phần của đuôi L
Option 2: X là thành phần của danh sách L nếu L chứa ít nhất một phần tử
Option 3: X là thành phần của danh sách L nếu L là danh sách rỗng
Option 4: X là thành phần của danh sách L nếu L có ít nhất hai phần tử
Answer: X là thành phần của danh sách L nếu X là đầu của L hoặc là thành phần của đuôi L
Citation: Theo nội dung, quan hệ Member(X,L) được xác định bởi hai điều kiện: X là đầu danh sách L hoặc X là thành phần của đuôi danh sách L.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách xác định quan hệ thành phần trong danh sách bằng vị từ Member(X,L). Câu trả lời được gợi ý đúng với nội dung trong tài liệu, nêu rõ điều kiện để X là thành phần của danh sách L. Các đáp án khác cũng liên quan đến khái niệm thành phần trong danh sách, nhưng không chính xác hoặc không đầy đủ như câu trả lời được gợi ý.
cau hoi dung: question='Mô tả cách xác định quan hệ thành phần trong danh sách bằng vị từ Member(X,L).' options=['X là thành phần của danh sách L nếu X là đầu của L hoặc là thành phần của đuôi L', 'X là thành phần của danh sách L nếu L chứa ít nhất một phần tử', 'X là thành phần của danh sách L nếu L là danh sách rỗng', 'X là thành phần của danh sách L nếu L có ít nhất hai phần tử'] answer='X là thành phần của danh sách L nếu X là đầu của L hoặc là thành phần của đuôi L' citation='64\n=[blue, red, white⎪[ yellow ] ] \n=[blue, red, white, yellow⎪[ ] ] \nChúng ta có thể biểu diễn danh sách bởi các hạng thức trong logic vị từ cấp một. Trong logic vị \ntừ, một danh sách được định nghĩa như sau: \nDanh sách hoặc là kí hiệu hằng [ ], hoặc là một hạng thức có dạng list(X,Y), trong đó list là kí \nhiệu hàm của hai biến, đối số X là một hạng thức bất kì và được gọi là đầu danh sách, đối số Y là \nmột danh sách và được gọi là đuôi danh sách. (Trong ngôn ngữ Prolog, người ta sử dụng kí hiệu \n“.” thay cho kí hiệu list; tức là hạng thức list(X,Y) trong Prolog được viết là.(X,Y). \nNhư vậy các cặp biểu diễn sau là tương đương: \nBiểu diễn hạng thức \n \n  \n \nBiểu diễn dấu ngoặc vuông \nlist(X,Y) \n \n \n \n \n[ X⎪Y ] \nlist(X,list(Y,Z)) \n \n \n \n[ X, Y⎪Z ] \nlist(X,list(Y,list(Z, [ ]))) \n \n \n[ X,Y,Z ] \nTrong ngôn ngữ Prolog, ta có thể sử dụng cả hai dạng biểu diễn danh sách. \nCác phép toán cơ bản trên danh sách: \n• \n. Quan hệ thành phần \nQuan hệ “đối tượng X là thành phần của danh sách L”được biểu diễn bởi vị từ: \nMember(X,L)  \nQuan hệ này được xác định như sau: \nX là thành phần của danh sách L nếu: \n(1) hoặc X là đầu danh sách L \n(2) hoặc X là thành phần của đuôi danh sách L \nTức là, vị từ Member(X,L) được xác định bởi công thức: \nMember(X,L) ⇐(L = [X | L1])∨ (L = [Y | L2]∧ Member (X,L2)) \nChẳng hạn, \n        Member(a,[a,b,c]) \n  \n Member([b,c],[a,[b,c],d]) \nlà các quan hệ đúng, còn  \n \n \n Member(b,[a,[b,c],d]) \nlà sai. \n• \nKết nối hai danh sách thành một danh sách  \nPhép toán kết nối 2 danh sách L1 và L2 thành một danh sách L được biểu diễn bởi vị từ  \n \n     Conc(L1,L2,L) \nQuan hệ này được xác định như sau: \nDanh sách L là kết nối của 2 danh sách L1 và L2 nếu: \n(1) hoặc L1=[ ] và L= L2 \n(2) hoặc L1 ≠[ ] và đầu của L là đầu của L1 và đuôi của L là kết nối của đuôi L1 và L2. \nTức là, quan hệ Conc(L1,L2,L) được xác định bởi công thức: \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=62 idx_doc=61
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 18



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định sự khác biệt chính giữa hàm liên thuộc của tập hợp kinh điển và tập mờ?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Hàm liên thuộc của tập hợp kinh điển chỉ nhận giá trị 0 và 1, trong khi tập mờ nhận toàn bộ giá trị từ 0 đến 1.
Option 2: Hàm liên thuộc của tập hợp kinh điển có thể nhận các giá trị từ 0 đến 1.
Option 3: Hàm liên thuộc của tập mờ chỉ nhận giá trị 0 và 1.
Option 4: Hàm liên thuộc của tập hợp kinh điển không liên quan đến tập mờ.
Answer: Hàm liên thuộc của tập hợp kinh điển chỉ nhận giá trị 0 và 1, trong khi tập mờ nhận toàn bộ giá trị từ 0 đến 1.
Citation: Hàm liên thuộc của tập hợp kinh điển A được định nghĩa chỉ có hai giá trị chính xác là 0 và 1, trong khi hàm liên thuộc của tập mờ nhận toàn bộ các giá trị từ 0 đến 1.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định sự khác biệt giữa hàm liên thuộc của tập hợp kinh điển và tập mờ, và câu trả lời được gợi ý đã nêu rõ sự khác biệt này: hàm liên thuộc của tập hợp kinh điển chỉ nhận giá trị 0 và 1, trong khi hàm liên thuộc của tập mờ nhận toàn bộ giá trị từ 0 đến 1. Điều này hoàn toàn chính xác và có thể tìm thấy trong tài liệu. Các đáp án khác cũng liên quan đến sự khác biệt này, nhưng chỉ có một đáp án đúng hơn, đó là câu trả lời được gợi ý. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Xác định sự khác biệt chính giữa hàm liên thuộc của tập hợp kinh điển và tập mờ?' options=['Hàm liên thuộc của tập hợp kinh điển chỉ nhận giá trị 0 và 1, trong khi tập mờ nhận toàn bộ giá trị từ 0 đến 1.', 'Hàm liên thuộc của tập hợp kinh điển có thể nhận các giá trị từ 0 đến 1.', 'Hàm liên thuộc của tập mờ chỉ nhận giá trị 0 và 1.', 'Hàm liên thuộc của tập hợp kinh điển không liên quan đến tập mờ.'] answer='Hàm liên thuộc của tập hợp kinh điển chỉ nhận giá trị 0 và 1, trong khi tập mờ nhận toàn bộ giá trị từ 0 đến 1.' citation='132\nnhững khái niệm và phép tính tương tự. Trước tiên, ta xem xét sự khác nhau giữa tập mờ và tập \nhợp kinh điển thông qua khái niệm hàm liên thuộc. Hàm liên thuộc μA của tập hợp kinh điển A \nđược định nghĩa là: \n   \n( )\n⎩\n⎨\n⎧\n∉\n∈\n=\nA\nx\nnÕu\n0\nA\nx\nnÕu\n1\nx\nA\nμ\n               \n \nNhư vậy, hàm liên thuộc chỉ có hai giá trị chính xác là 0 và 1 như Hình 5.8. Do vậy nếu ta \nđã biết tập hợp A thì cũng xác định được hàm liên thuộc μA(x) của nó và ngược lại. \n \nTrong lôgic mờ, vấn đề này lại khác. Hàm liên thuộc của tập mờ không chỉ nhận 2 giá trị \nlà 0 và 1 mà là toàn bộ các giá trị từ 0 đến 1 tức là \n1\n)\nx\n(\n0\nB\n≤\nμ\n≤\n. Trên Hình 5.9 là hai hàm liên \nthuộc của hai tập mờ B và C. Như vậy ở lôgic mờ không có sự suy luận thuận ngược như với tập \nhợp kinh điển. Vì vậy, trong định nghĩa tập mờ phải nêu thêm về hàm liên thuộc này do vai trò \ncủa nó là làm rõ ra chính tập mờ đó. \nb. Định nghĩa tập mờ \n \nTập mờ F xác định trên tập kinh điển M là một tập mà mỗi phần tử của nó là một cặp các \ngiá trị (x, μf (x)), trong đó x∈M và μf là ánh xạ \n]1,0\n[\nM\n:\nf\n→\nμ\n. Ánh xạ μf được gọi là hàm liên \nthuộc (phụ thuộc) của tập mờ F. Tập \nkinh điển M được gọi là cơ sở của tập \nmờ F. \n \nCác hàm liên thuộc μf(x) có \ndạng trơn như Hình bên gọi là hàm liên \nthuộc kiểu S. Đối với các hàm liên \nthuộc kiểu S, do các công thức biểu \ndiễn \n)\nx\n(\nf\nμ\n có độ phức tạp lớn, nên \nthời gian tính độ phụ thuộc cho một phần tử lâu. Vì vậy, trong kỹ thuật thông thường các hàm liên \nthuộc kiểu S được thay bằng các đoạn thẳng (tuyến tính từng đoạn). \n \nMột hàm liên thuộc có dạng tuyến tính từng đoạn được gọi là hàm liên thuộc có mức \nchuyển đổi tuyến tính (Hình 5.10. Với hàm liên thuộc như Hình2.2b nếu m1 = m2 và \n4\n3\nm\nm =\n \nthì nó chính là hàm liên thuộc của tập kinh điển. \n  x \nμf(x)\n1\n0,5 \n0\n3\n9 \n4 5\n6\n8\nHình 5.10: Hàm liên thuộc có mức chuyển đổi tuyến tính\nHình 5.9: Hàm liên thuộc của tập mờ. \na, \n b, \n  μB(x)  \n  x \n0 \n1 \n  μC()  \n  x \n0\n1\n m1  m2 \n m3 \n m4 \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=130 idx_doc=129
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 19



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hệ thống HITECH đã đạt được thành tựu gì trong lĩnh vực chơi cờ vua?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
Option 1: Đánh bại thần đồng Arnold Denker vào năm 1987
Option 2: Thua đội Olympic Đan Mạch với tỷ số 1-3
Option 3: Đứng thứ 800 trong bảng xếp hạng cờ vua thế giới
Option 4: Sử dụng hàm định giá đơn giản hơn Deep Thought 2
Answer: Đánh bại thần đồng Arnold Denker vào năm 1987
Citation: Hệ thống HITECH đã trở thành vô địch thế giới về máy tính năm 1985 và là chương trình đầu tiên đánh bại thần đồng của nhân loại, Arnold Denker năm 1987.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hệ thống HITECH đã làm gì để trở thành vô địch thế giới về máy tính vào năm 1985?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
Option 1: Tính toán nhanh các hàm định giá phức tạp
Option 2: Sử dụng các mạch tích hợp để cài đặt định giá vị trí
Option 3: Tham gia vào các cuộc thi cờ vua lớn
Option 4: Phát triển các chương trình chơi cờ mới
Answer: Tính toán nhanh các hàm định giá phức tạp
Citation: Hệ thống HITECH được thiết kế để tính toán nhanh các hàm định giá rất phức tạp, điều này đã giúp nó trở thành vô địch thế giới về máy tính năm 1985.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 1

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hệ thống HITECH đã sử dụng phương pháp nào để tính toán các hàm định giá phức tạp?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
Option 1: Sử dụng các mạch tích hợp để cài đặt định giá vị trí
Option 2: Sử dụng hàm định giá đơn giản để kiểm tra vị trí
Option 3: Sử dụng phép tìm kiếm alpha-beta để tối ưu hóa
Option 4: Sử dụng cơ sở dữ liệu giải pháp cho các vị trí 6-quân cờ
Answer: Sử dụng các mạch tích hợp để cài đặt định giá vị trí
Citation: Hệ thống HITECH đã sử dụng các mạch tích hợp để cài đặt các định giá vị trí, giúp nó có thể tính toán nhanh các hàm định giá phức tạp.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 2

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hệ thống HITECH đã đạt được những thành tựu nào trong việc chơi cờ vua mà bạn có thể nêu rõ?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[nêu rõ]
Option 1: Trở thành vô địch thế giới về máy tính năm 1985 và đánh bại Arnold Denker
Option 2: Sử dụng các mạch tích hợp để cài đặt các định giá vị trí
Option 3: Tạo ra khoảng 10 triệu trên mỗi nước đi mà không cần tính toán
Option 4: Đứng trong số 800 người chơi cờ giỏi nhất thế giới mà không có thành tích cụ thể
Answer: Trở thành vô địch thế giới về máy tính năm 1985 và đánh bại Arnold Denker
Citation: Hệ thống HITECH đã trở thành vô địch thế giới về máy tính năm 1985 và là chương trình đầu tiên đánh bại thần đồng của nhân loại, Arnold Denker năm 1987, cho thấy sự phát triển vượt bậc trong lĩnh vực chơi cờ vua.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến tài liệu vì nó yêu cầu thông tin về thành tựu của hệ thống HITECH trong việc chơi cờ vua. Câu trả lời được gợi ý đúng với câu hỏi, nêu rõ thành tựu của HITECH là trở thành vô địch thế giới về máy tính năm 1985 và đánh bại Arnold Denker. Các đáp án khác cũng liên quan đến HITECH và có thể tìm thấy trong tài liệu, do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Hệ thống HITECH đã đạt được những thành tựu nào trong việc chơi cờ vua mà bạn có thể nêu rõ?' options=['Trở thành vô địch thế giới về máy tính năm 1985 và đánh bại Arnold Denker', 'Sử dụng các mạch tích hợp để cài đặt các định giá vị trí', 'Tạo ra khoảng 10 triệu trên mỗi nước đi mà không cần tính toán', 'Đứng trong số 800 người chơi cờ giỏi nhất thế giới mà không có thành tích cụ thể'] answer='Trở thành vô địch thế giới về máy tính năm 1985 và đánh bại Arnold Denker' citation='39\n \n \n \n \n \n \n \n \n \n \n \n \n \nBước nhảy đầu tiên trong việc thực hiện không phải xuất phát từ những giải thuật tốt hơn \nhay các hàm định giá mà là từ phần cứng. Belle, máy tính chuyên dùng cho việc chơi cờ vua đầu \ntiên (Condon và Thomson, 1982) đã sử dụng các mạch tích hợp để cài đặt các định giá vị trí và \ncác thế hệ di chuyển, làm cho nó có thể  tìm kiếm khoảng vài triệu vị trí  chỉ để đi một nước.  \n \n  \n \n \n \nHệ thống HITECH là một máy tính có mục đích đặc biệt được thiết kế bởi người xứng đáng \ncựu vô địch thế giới Hans Berliner và sinh viên của ông Carl Ebeling, có thể tính toán nhanh các \nhàm định giá rất phức tạp. Tạo ra khoảng 10 triệu trên mỗi nước đi và sử dụng việc định giá chính \nxác nhất các vị trí đã được phát triển. HITECH  đã trở thành vô địch thế giới về máy tính năm \n1985 và là chương trình đầu tiên đánh bại thần đồng của nhân loại, Arnold Denker năm 1987. Vào \nthời điểm đó nó đứng trong 800 người chơi cờ giỏi nhất thế giới. \n \nHệ thống tốt nhất hiện thời là Deep Thought 2 được sản xuất bổi IBM. Mặc dù Deep \nThought 2 sử dụng hàm định giá đơn giản, nó kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi, \nđạt đến độ sâu 10 hoặc 11 (nó đã từng tìm được 37 nước chiếu tướng hết cờ).Tháng 2 năm 1993, \nDeep Thought 2  thi đấu với đội Olympic của Đan mạch và thắng 3-1, đánh bại một đại kiện \ntướng và hoà với một đại kiện tướng khác. Hệ số FIDE của nó là 2600, xếp trong số 100 người \nchơi cờ giỏi nhất thế giới. \nCờ đam  \n \nBắt đầu vào năm 1952,  Arthur Samuel của IBM  làm việc trong thời gian rỗi của ông, đã \nxây dựng một chương trình chơi cờ đam (loại cờ gồm 24 quân cờ cho 2 người chơi – ND) mà tự \nhọc hàm định giá của nó bằng cách tự chơi với nó hàng nghìn lần. Chương trình của Samuel bắt \nđầu như mộ người mới học việc, nhưng chỉ sau một vài ngày tự chơi với chính nó đã có thể đấu \ntrong những cuộc thi lớn của loài người. Khi một người thấy rằng công cụ tính toán của Samuel \n(một chiếc máy tính IBM 704) có 10.000 từ  trong bộ nhớ chính, băng từ  để lưu trữ dữ liệu và \nmột chu kỳ thời giankhoảng hầu như một miligiây, điều đó cho thấy đây là một trơng những thành \ntích vĩ đại của AI. \n \nCó rất ít những người khác có thể cố gắng làm được tốt hơn cho đến khi Jonathan Schaeffer \nvà các đồng nghiệp  viết trình Chinook, mà chạy trên một máy tính thông thường sử dụng phép \ntìm kiếm alpha-beta, nhưng sử dụng một số kỹ thuật, bao gồm cơ sở dữ liệu giải pháp tuyệt vời \ncho tất cả các vị trí 6-quân cờ,  và gây ra sự tàn phá  thế trận dẫn đến chấm dứt ván cờ. Chinook  \nđã chiến thắng trong  giải Mỹ mở rộng 1992 và trở thành chương trình đầu tiên mà thử thách một \nHình 2.12   Tỷ lệ của các nhà vô địch cờ vua: con người và máy tính. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=37 idx_doc=36
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 3
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 20



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định tỷ lệ thích nghi của nhiễm sắc thể 2 trong tổng độ thích nghi của tất cả các nhiễm sắc thể?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: 49.2%
Option 2: 14.4%
Option 3: 30.9%
Option 4: 5.5%
Answer: 49.2%
Citation: Tỷ lệ thích nghi của nhiễm sắc thể 2 là 49.2%, chiếm tỷ lệ lớn nhất trong tổng độ thích nghi 1170% của tất cả các nhiễm sắc thể.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định tỷ lệ thích nghi của nhiễm sắc thể 2 trong tổng độ thích nghi, và câu trả lời được gợi ý là 49.2%, đúng với thông tin trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất với câu hỏi.
cau hoi dung: question='Xác định tỷ lệ thích nghi của nhiễm sắc thể 2 trong tổng độ thích nghi của tất cả các nhiễm sắc thể?' options=['49.2%', '14.4%', '30.9%', '5.5%'] answer='49.2%' citation='143\nBảng mô tả các chuỗi nhiễm sắc thể và độ thích nghi tương ứng \nS\x1f th\x1f \nt\x1f \nNhi\x1fm \ns\x1fc \nth\x1f \n\x1f\x1f \nthích \nnghi \nT\x1f l\x1f \n(%) \n1 \n01101 \n169 \n14.4 \n2 \n11000 \n576 \n49.2 \n3 \n01000 \n64 \n5.5 \n4 \n10011 \n316 \n30.9 \nT\x1fng \n \n1170 \n100 \nBánh xe Roulette (Hình 5.15) được đánh trọng số phù hợp. \n \n \n \n \n \n \n \n \n \nHình 5.15. Tỷ lệ thích nghi của các nhiễm sắc thể trên bánh xe Roulette \n \nNgười ta thực hiện việc sinh sản bằng cách quay bánh xe Roulette với số lần bằng số \nnhiễm sắc thể trên bánh xe Roulette. Đối với bài toán này số lần quay bánh xe Roulette là 4. \nNhiễm sắc thể 1 có giá trị thích nghi là 169, tương ứng 14,4 % tổng độ thích nghi. Như vậy, \nnhiễm sắc thể 1 chiếm 14.4% trên bánh xe Roulette. Mỗi lần quay nhiễm sắc thể 1 sẽ chiếm \nkhe với giá trị 0,144.  \n \nKhi yêu cầu sinh ra 1 thế hệ mới, một vòng quay của bánh xe Roulette được đánh \ntrọng số phù hợp sẽ chọn ra một cá thể để sinh sản. Bằng cách này, những nhiễm sắc thể có \nđộ thích nghi cao sẽ có cơ hội được chọn lớn. Như vậy, sẽ có 1 số lượng con cháu lớn  trong \ncác thế  hệ kế tiếp. \nb. Hàm mục tiêu \n \nCứ sau mỗi thế hệ được hình thành, chúng ta cần tính lại độ thích nghi cho từng cá thể \nđể chuẩn bị cho một thế hệ mới. Do số lượng các cá thể tăng lên, độ thích nghi giữa các cá thể \n30,9% \n5,5% \n42,9% \n14,4% \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=141 idx_doc=140
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 21



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định điều kiện nào sau đây đúng để thực hiện phép toán Conc giữa hai danh sách?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: L1 là danh sách con của L2 và L là kết quả nối kết
Option 2: L1 là danh sách rỗng và L là L2
Option 3: L1 chứa ít nhất một phần tử và L là danh sách rỗng
Option 4: L1 và L2 đều chứa các phần tử giống nhau
Answer: L1 là danh sách rỗng và L là L2
Citation: Theo nội dung, phép toán Conc được xác định khi L1 là danh sách rỗng thì L sẽ bằng L2.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định điều kiện đúng để thực hiện phép toán Conc giữa hai danh sách, và câu trả lời được gợi ý là một trong những điều kiện đúng được nêu trong tài liệu. Các đáp án khác cũng liên quan đến điều kiện của phép toán Conc, trong đó có một số đáp án không chính xác nhưng vẫn có thể tìm thấy trong tài liệu. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với nội dung tài liệu.
cau hoi dung: question='Xác định điều kiện nào sau đây đúng để thực hiện phép toán Conc giữa hai danh sách?' options=['L1 là danh sách con của L2 và L là kết quả nối kết', 'L1 là danh sách rỗng và L là L2', 'L1 chứa ít nhất một phần tử và L là danh sách rỗng', 'L1 và L2 đều chứa các phần tử giống nhau'] answer='L1 là danh sách rỗng và L là L2' citation='65\nConc(L1,L2,L) ⇐ (L1=[] ∧ L=L2) ∨ (L1=[X⎪L3] ∧ L= [X⏐L4] ∧ Conc (L3,L2,L4) \nChẳng hạn, \n \n \nConc([a,b],[1,2,3], [a,b,1,2,3]) \n \n \nConc([a,[b,c]],[a,[ ],d],[a,[b,c],a,[ ],d) \nlà các quan hệ đúng, nhưng: \n \n \nConc([a,b],[c,d],[a,b,a,c,d]) \nlà sai. \n• \n.Loại bỏ một thành phần khỏi danh sách \nViệc loại bỏ một thành phần X khỏi danh sách L được xác định bởi quan hệ: \n \n \n \nDelete(X,L,L1) \nQuan hệ này được xác định như sau: \nDanh sách L1 là kết quả loại thành phần X khỏi danh sách L, nếu \n(1) hoặc X là đầu của L và L1 là đuôi của L \n(2) hoặc đầu của L1 là đầu của L và đuôi của L1 là kết quả việc loại  \nX khỏi đuôi của L. \nTức là, \nDelete (X,L,L1) ⇐ (L =[X | L1]) ∨ (L = [Y| L2] ∧ Delete (X,L2,L3) ∧L3 =[Y,L3]) \nChẳng hạn, ta có quan hệ đúng sau: \n     Delete(a,[a,b,a,c],[b,a,c]) \n     Delete(a,[a,b,a,c],[a,b,c]) \n• \n.Quan hệ danh sách con \nQuan hệ Sublist(L1,L) là đúng nếu danh sách L1 là danh sách con của danh sách L, chẳng hạn: \nSublist([c,d,e],[a,b,c,d,e,f]) à quan hệ đúng;  còn  Sublist([b,d],[a,b,c,d,e,f]) là sai. \nĐương nhiên, nếu L1 là danh sách con của L, thì danh sách L có thể phân tách thành các \ndanh sách con. Do đó ta có thể xác định quan hệ này như sau: \nL1 là danh sách con của danh sách L, nếu:  \n(1) L là kết nối của L2 và L3, và  \n(2) L3 là kết nối của L1 và L4 \ntức là, ta có: Sublist(L1,L) <= Conc(L2,L3,L) ^ Conc(L1,L4,L3) \nTrên đây là một số phép toán cơ bản trên danh sách, để dễ dàng cho xử lý danh sách, ta \ncần xác định một số phép toán khác. \nTập hợp là một khái niệm cơ bản trong toán học, ta có thể mô tả rất nhiều vấn đề bằng cách sử \ndụng tập hợp và các phép toán trên tập hợp.Tuy nhiên ta có thể biểu diễn tập hợp bởi danh sách,và \ncác phép toán tập hợp có thể được xác định thông qua các phép toán trên danh sách. \n3.5.6.5. Xây dựng cơ sở tri thức  \nNhư chúng ta đã biết một hệ tri thức bao gồm hai thành phần chính là cơ sở tri thức \n(CSTT)và thủ tục suy diễn. Như vậy để thiết kế một hệ tri thức, chúng ta cần phải xây dựng nên \nCSTT. CSTT bao gồm các câu (trong một ngôn ngữ biểu diễn tri thức nào đó, ở đây là logic vị từ \ncấp một). Các câu này biểu diễn tri thức của chúng ta về một lĩnh vực áp dụng mà chúng ta đang \nquan tâm. Logic vị từ cấp một là một công cụ mạnh để biểu diễn tri thức và lập luận. Song một \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=63 idx_doc=62
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 22



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Liệt kê các phương pháp phổ biến được sử dụng trong nhận dạng tiếng nói hiện nay?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[liệt kê]
Option 1: Phương pháp nhận diện khuôn mặt
Option 2: Phương pháp âm học-ngữ âm học
Option 3: Phương pháp nhận dạng hình ảnh
Option 4: Phương pháp xử lý ngữ nghĩa
Answer: Phương pháp âm học-ngữ âm học
Citation: Trong nội dung đã đề cập rằng có ba phương pháp phổ biến trong nhận dạng tiếng nói hiện nay, bao gồm phương pháp âm học-ngữ âm học, phương pháp nhận dạng mẫu và phương pháp ứng dụng trí tuệ nhân tạo.
Keyword: True
Danh gia cau hoi....
Lien quan: no
Giai thich: Câu trả lời được gợi ý chỉ đề cập đến một phương pháp duy nhất là 'Phương pháp âm học-ngữ âm học', trong khi câu hỏi yêu cầu liệt kê tất cả các phương pháp phổ biến được sử dụng trong nhận dạng tiếng nói hiện nay. Tài liệu đã nêu rõ có ba phương pháp phổ biến: Phương pháp Âm học-Ngữ âm học, Phương pháp nhận dạng mẫu, và Phương pháp ứng dụng trí tuệ nhân tạo. Do đó, câu trả lời không đầy đủ và không đáp ứng yêu cầu của câu hỏi.
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả các bước trong phương pháp Âm học-Ngữ âm học để nhận dạng tiếng nói?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Bước 1: phân đoạn và gán nhãn, Bước 2: nhận dạng
Option 2: Bước 1: thu tín hiệu, Bước 2: mã hóa tín hiệu
Option 3: Bước 1: phân tích âm thanh, Bước 2: truyền tín hiệu
Option 4: Bước 1: nhận diện từ, Bước 2: phân loại từ
Answer: Bước 1: phân đoạn và gán nhãn, Bước 2: nhận dạng
Citation: Trong phương pháp Âm học-Ngữ âm học, các bước nhận dạng bao gồm: Bước 1 là phân đoạn và gán nhãn, chia tín hiệu tiếng thành các đoạn có đặc tính âm học và gán nhãn cho chúng. Bước 2 là nhận dạng, xác định từ hoặc chuỗi từ đúng dựa trên các nhãn ngữ âm.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả các bước trong phương pháp Âm học-Ngữ âm học để nhận dạng tiếng nói, và câu trả lời được gợi ý đã nêu đúng hai bước chính là 'Bước 1: phân đoạn và gán nhãn' và 'Bước 2: nhận dạng'. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng không đúng với nội dung của phương pháp này. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Mô tả các bước trong phương pháp Âm học-Ngữ âm học để nhận dạng tiếng nói?' options=['Bước 1: phân đoạn và gán nhãn, Bước 2: nhận dạng', 'Bước 1: thu tín hiệu, Bước 2: mã hóa tín hiệu', 'Bước 1: phân tích âm thanh, Bước 2: truyền tín hiệu', 'Bước 1: nhận diện từ, Bước 2: phân loại từ'] answer='Bước 1: phân đoạn và gán nhãn, Bước 2: nhận dạng' citation='100\nCác hệ thống nhận dạng tiếng nói có thể được phân loại như sau: \n• \nNhận dạng từ phát âm rời rạc/liên tục; \n• \nNhận dạng tiếng nói phụ thuộc người nói/không phụ thuộc người nói; \n• \nHệ thống nhận dạng từ điển cớ nhỏ (dưới 20 từ)/từ điển cỡ lớn (hàng nghìn từ); \n• \nNhận dạng tiếng nói trong môi trường có nhiễu thấp/cao; \n• \nNhận dạng người nói. \nTrong hệ nhận dạng tiếng nói với cách phát âm rời rạc có khoảng lặng giữa các từ trong \ncâu. Trong hệ nhận dạng tiếng nói liên tục không đòi hỏi điều này. Tùy thuộc vào quy mô và \nphương pháp nhận dạng, ta có các mô hình nhận dạng tiếng nói khác nhau. Hình 4.2 là mô hình \ntổng quát của một hệ nhận dạng tiếng nói điển hình .     \nTín hiệu tiếng nói sau khi thu nhận được lượng tử hóa sẽ biến đổi thành một tập các vector \ntham số đặc trưng với các phân đoạn có độ dài trong khoảng 10-30 ms. Các đặc trưng này được \ndùng cho đối sánh hoặc tìm kiếm các từ gần nhất với một số ràng buộc về âm học, từ vựng và ngữ \npháp. Cơ sở dữ liệu tiếng nói được sử dụng trong quá trình huấn luyện (mô hình hóa/phân lớp) để \nxác định các tham số hệ thống. \nCác phương pháp tiếp cận trong nhận dạng tiếng nói \nCó ba phương pháp phổ biến được sử dụng trong nhận dạng tiếng nói hiện nay là: \n• \nPhương pháp Âm học-Ngữ âm học; \n• \nPhương pháp nhận dạng mẫu; \n• \nPhương pháp ứng dụng trí tuệ nhân tạo. \nCác phương pháp được trình bày tóm tắt như dưới đây.    \nPhương pháp Âm học-Ngữ âm học \n Phương pháp này dựa trên lý thuyết về Âm học-Ngữ âm học. Lý thuyết đó cho biết: tồn \ntại các đơn vị ngữ âm xác định, có tính phân biệt trong lời nói và các đơn vị ngữ âm đó được đặc \ntrưng bởi một tập các tín hiệu tiếng nói. Các bước nhận dang của phương pháp gồm: \nBước 1: phân đoạn và gán nhãn. Bước này chia tín hiệu tiếng nói thành các đoạn có đặc \ntính âm học đặc trưng cho một (hoặc một vài) đơn vị ngữ âm, đồng thời gán cho mỗi đoạn âm \nthanh đó một hay nhiều nhãn ngữ âm phù hợp.  \nBước 2: nhận dạng. Bước này dựa trên một số điều kiện ràng buộc về từ vựng, ngữ pháp \nv.v… để xác định một hoặc một chuỗi từ đúng trong các chuỗi nhãn ngữ âm được tạo ra sau bước \n1. Sơ đồ khối của phương pháp này được biểu diễn ở Hình 4.2. Nguyên lý hoạt động của phương \npháp có thể mô tả như sau: \n Trích chọn đặc trưng. Tín hiệu tiếng sau khi số hóa được đưa tới khối trích chọn đặc \ntrưng  nhằm xác định các phổ tín hiệu. Các kỹ thuật trích chọn đặc trưng tiếng nói phổ biến là sử \ndụng băng lọc (filter bank), mã hóa dự đoán tuyến tính (LPC)… \nTách tín hiệu tiếng nói nhằm biến đổi phổ tín hiệu thành một tập các đặc tính mô tả các \ntính chất âm học của các đơn vị ngữ âm khác nhau. Các đặc tính đó có thể là: tính chất các âm \nmũi, âm xát; vị trí các formant; âm hữu thanh, vô thanh; tỷ số mức năng lượng tín hiệu… \nPhân đoạn và gán nhãn. Ở bước này hệ thống nhận dạng tiếng xác định các vùng âm thanh \nổn định (vùng có đặc tính thay đổi rất ít) và gán cho mỗi vùng này một nhãn phù hợp với đặc tính \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=98 idx_doc=97
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 23



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các phạm trù từ nào được gọi là lớp mở trong ngôn ngữ học?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Đại từ, quán từ, giới từ, liên từ
Option 2: Danh từ, động từ, tính từ, trạng từ
Option 3: Giới từ, liên từ, danh từ, tính từ
Option 4: Đại từ, động từ, danh từ, trạng từ
Answer: Danh từ, động từ, tính từ, trạng từ
Citation: Trong nội dung, các phạm trù được gọi là lớp mở bao gồm danh từ, động từ, tính từ và trạng từ, vì chúng có hàng ngàn thành viên và luôn luôn có từ mới được bổ sung vào.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các phạm trù từ được gọi là lớp mở trong ngôn ngữ học, và câu trả lời được gợi ý đã nêu đúng các phạm trù này là danh từ, động từ, tính từ và trạng từ. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và đầy đủ hơn so với các đáp án khác.
cau hoi dung: question='Xác định các phạm trù từ nào được gọi là lớp mở trong ngôn ngữ học?' options=['Đại từ, quán từ, giới từ, liên từ', 'Danh từ, động từ, tính từ, trạng từ', 'Giới từ, liên từ, danh từ, tính từ', 'Đại từ, động từ, danh từ, trạng từ'] answer='Danh từ, động từ, tính từ, trạng từ' citation='114\nNoun  \n→  \nstench| breeze| glitter| nothing \n \n \n| wumpus| pit| pits| gold| east| … \nVerb   \n→  \n is| see| smell| shoot| feel| stinks \n \n \n| go| grab| carry| kill| turn|… \nAdjective  \n→  \nright| left| east| sound| back| smelly|… \nAdverb \n→  \nhere| there| nearby| ahead \n \n \nRight| left| sound| back| … \nPronoun  \n→  \nme| you| I| it| … \nName  \n→    \nJohn| Mary| Boston| Aristotle|… \nArticle  \n→  \nthe| a| an| … \nPreposition \n→  \nto| in| on| near| … \nConjunction \n→  \nand| or| but| … \nDigit \n→  \n0| 1|2| 3| 4| 5| 6| 7| 8| 9 \n               Hình 4.9. Từ điển ngôn ngữ  \n \nMỗi một phạm trù đều kết thúc để biểu thị rằng có những từ khác ở trong phạm trù này. \nTuy nhiên chú ý rằng có hai lý do khác biệt cho việc mất từ. Đối với danh từ, động từ, tính từ và \ntrạng từ, nó là nguyên tắc cơ bản bất khả thi để hiển thị tất cả chúng. Không những có hàng ngàn \nhoặc hàng chục ngàn thành viên trong mỗi lớp, mà mỗi một loại mới luôn luôn được bổ sung \nthêm vào. Ví dụ, ngày nay “fax” là một danh từ và động từ phổ biến nhưng nó chỉ được đặt ra \ntrong vài nănm trước. Có bốn phạm trù được gọi là lớp mở. Những phạm trù khác (đại từ, quán từ, \ngiới từ, và liên từ) được gọi là lớp đóng. Chúng thường có một số lượng nhỏ các từ (một vài từ \nđến một vài nhóm từ) mà nó có thể được liệt kê theo quy tắc. sự thay đổi lớp đóng diễn ra trong \nhàng thế kỷ , không phải hàng tháng. Ví dụ “thee” và “thou” thường được sử dụng làm đại từ \ntrong thế kỷ XVII, bị suy tàn vào thế kỷ XIX, và ngày nay nó chỉ được thấy trong thơ ca và ngôn \nngữ địa phuơng. \nNgữ pháp  \nBước tiếp theo là phối hợp các từ trong cụm từ. chúng ta vẫn sử dụng năm biểu tượng \nnonterminal để định nghĩa sự khác nhau của cụm từ: câu (S), cụm danh từ (NP), cụm động từ \n(VP), cụm giới từ (PP), và mệnh đề quan hệ (Rel Clause)(4). Hình 4.10 xét một ngữ pháp cho ε0 \nvới một ví dụ cho mỗi một quy luật viết lại. \nS \n→ \n \n | \nNP,VP \nS Conjuntion S \nI +feel a breeze \nI feel a breeze+and+ I smell the \nwumpus \nNP \n→ \n \n | \n \n | \n \n | \n \n | \n \n |  \nPronoun \nNoun \nArticle Noun \nDigit Digit \nNP PP  \nNP Rel Clause \nI \nPits \nThe + wumpus \n3 4 \nthe wumpus+ to the east \nthe wumpus+ that is smell \nVP   → \n \n | \n \n | \n \n | \n \n | \nVerb \nVP NP \nVP adjective \nVP PP \nVP Adverb \nStinks \nFeel+ a breeze \nIs+ smelly \nTurn+ to the east \nGo+ ahead \nPP \n→ \nPriposition NP \nTo+ the east \nRelClause→ \nThat VP \nThat+ is smelly \n       Hình 4.10. Ngữ pháp cho từđiển, với cụm từ ví dụ cho mỗi quy luật \n                                                 \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=112 idx_doc=111
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 24



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định các đặc điểm chính của hệ hỗ trợ ra quyết định được đề xuất bởi Michael S. Scott Morton.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Hệ hỗ trợ ra quyết định bao gồm phần mềm máy tính, chức năng hỗ trợ ra quyết định và dữ liệu giao dịch.
Option 2: Hệ hỗ trợ ra quyết định chỉ tập trung vào thông tin và không có phần mềm máy tính.
Option 3: Hệ hỗ trợ ra quyết định không có tính uyển chuyển và không thích ứng với hoàn cảnh.
Option 4: Hệ hỗ trợ ra quyết định chỉ được sử dụng cho các nhà quản lý cấp thấp.
Answer: Hệ hỗ trợ ra quyết định bao gồm phần mềm máy tính, chức năng hỗ trợ ra quyết định và dữ liệu giao dịch.
Citation: Đáp án đúng là "Hệ hỗ trợ ra quyết định bao gồm phần mềm máy tính, chức năng hỗ trợ ra quyết định và dữ liệu giao dịch" vì đây là thông tin được nêu rõ trong nội dung, mô tả các phần chính của hệ thống hỗ trợ ra quyết định mà Michael S. Scott Morton đã đề xuất.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các đặc điểm chính của hệ hỗ trợ ra quyết định được đề xuất bởi Michael S. Scott Morton, và câu trả lời được gợi ý đã nêu đúng các thành phần chính của hệ thống này, bao gồm phần mềm máy tính, chức năng hỗ trợ ra quyết định và dữ liệu giao dịch. Các đáp án khác cũng liên quan đến nội dung trong tài liệu, nhưng chỉ có câu trả lời được gợi ý là chính xác và đầy đủ nhất.
cau hoi dung: question='Hãy xác định các đặc điểm chính của hệ hỗ trợ ra quyết định được đề xuất bởi Michael S. Scott Morton.' options=['Hệ hỗ trợ ra quyết định bao gồm phần mềm máy tính, chức năng hỗ trợ ra quyết định và dữ liệu giao dịch.', 'Hệ hỗ trợ ra quyết định chỉ tập trung vào thông tin và không có phần mềm máy tính.', 'Hệ hỗ trợ ra quyết định không có tính uyển chuyển và không thích ứng với hoàn cảnh.', 'Hệ hỗ trợ ra quyết định chỉ được sử dụng cho các nhà quản lý cấp thấp.'] answer='Hệ hỗ trợ ra quyết định bao gồm phần mềm máy tính, chức năng hỗ trợ ra quyết định và dữ liệu giao dịch.' citation='82\n• \nSự kiện (1) khớp với điều kiện thứ nhất của luật bởi phép thế [x/Tom], từ luật mẹ ta suy ra \n• \nMother(Tom, y) Λ Fast(y) ⇒ Valuable(Tom) \n• \nSự kiện (5) hợp nhất với điều kiện Mother(Tom/y) bởi phép thế [y/ Bin], ta suy ra \n• \nFast(Bin) ⇒ Valuable(Tom) \n• \nTừ sự kiện (9) và kéo theo trên, ta suy ra Valuable(Tom). \n• \nSự kiện (2) cũng hợp nhất với điều kiện thứ nhất của luật, do đó ta suy ra \n• \nMother(Ken, y) Λ Fast(y) ⇒ Valuable(Ken) \nTới đây ta không suy diễn tiếp được, vì không có sự kiện nào hợp nhất được với điều kiện \nMother(Ken, y). Điều tương tự cũng xảy ra, khi mà biến x trong luật mẹ được thế bởi Kit. \n• \nTừ sự kiện (4) và luật mẹ, ta suy ra \n• \nMother(Bin, y) Λ Fast(y) ⇒ Valuable(Bin) \n• \nSự kiện (7) hợp nhất với điều kiện Mother(Bin, y), từ đó ta suy ra \n• \nFast(Kit) ⇒ Valuable(Bin) \nTừ kéo theo này và sự kiện (8), ta suy ra Valuable(Bin). Như vậy áp dụng thủ tục \nFor_chain cho luật mẹ, chúng ta suy ra được hai sự kiện mới là “Tom có giá” và “Bin có giá”. \n3.7 CÁC HỆ CƠ SỞ TRI THỨC VÀ CÁC HỆ CHUYÊN GIA \nTồn tại nhiều hệ cơ sở tri thức như: các hệ chuyên gia, Hệ hỗ trợ quyết định, Hệ học \n(Learning), Hệ logic mờ; Mạng (lưới) tính toán, Hệ tích hợp cơ sở dữ liệu và cơ sở tri thức \nv.v… Trong phạm vi tài liệu này, chúng ta chỉ có thể xem xét một vài hệ điển hình như: Hệ \nhỗ trợ ra quyết định, Hệ chuên gia Y học MYCIN, hệ dựa luật. Các hệ thống khác co thể tìm \nđọc ở [11, 8]   \n \n3.7.1 Hệ hỗ  trợ ra quyết định và hệ thống thông tin \nHệ hỗ trợ ra quyết định được Michael S. Scô Morton đề xuất vào những năm 1070. Hệ \ngồm một số phần chính như: phần mềm máy tính; chức năng hỗ trợ ra quyết định; dữ liệu giao \ndịch, các mô hình. Có những đặc thù riêng giữa hệ hỗ trợ ra quyết định và hệ thống thông tin. Cụ \nthể như sau:. \n          Hệ thống thông tin có các tính chất. \n• \nTập trung vào thông tin, hướng đến các nhà quản lý cấp điều hành. \n• \nLàm việc với dòng thông tin có cấu trúc \n         Các hệ hỗ trợ quyết định có các tính chất: \n• \nHướng đến các quyết định, các nhà lãnh đạo  \n• \nTính uyển chuyển, thích ứng với hoàn cảnh và phản ứng nhanh \n• \nDo người dùng khởi động và kiểm soát \n• \nHỗ trợ các quyết định các nhân của nhà lãnh đạo \nBảng dưới đây cung cấp một số hệ hỗ trợ ra quyết định đã được xây dựng và ứng dụng: \n \n \n \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=80 idx_doc=79
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 25



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định số dòng trong bảng chân lý cho công thức (P⇒Q) ∧S khi có n biến.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: 2n
Option 2: n^2
Option 3: n+1
Option 4: 2n-1
Answer: 2n
Citation: Theo nội dung, một công thức chứa n biến có số các minh họa là 2n, tức là bảng chân lý có 2n dòng.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định số dòng trong bảng chân lý cho công thức (P⇒Q) ∧S khi có n biến, và câu trả lời được gợi ý là 2n, điều này hoàn toàn chính xác và có thể tìm thấy trong tài liệu. Các đáp án khác như +n^2, +n+1, +2n-1 không đúng với thông tin trong tài liệu, do đó câu trả lời gợi ý là đúng hơn các đáp án khác.
cau hoi dung: question='Xác định số dòng trong bảng chân lý cho công thức (P⇒Q) ∧S khi có n biến.' options=['2n', 'n^2', 'n+1', '2n-1'] answer='2n' citation='47\nP \nQ \nS \nP⇒Q \n(P⇒Q) ∧S \nFalse \nFalse \nFalse \nTrue \nFalse \nFalse \nFalse \nTrue \nTrue \nTrue \nFalse \nTrue \nFalse \nTrue \nFalse \nFalse \nTrue \nTrue \nTrue \nTrue \nTrue \nFalse \nFalse \nFalse \nFalse \nTrue \nFalse \nTrue \nFalse \nFalse \nTrue \nTrue \nFalse \nTrue \nFalse \nTrue \nTrue \nTrue \nTrue \nTrue \nHình 3.2 Bảng chân lý cho công thức (P⇒Q) ∧S \nCần lưu ý rằng, một công thức chứa n biến, thì số các minh họa của nó là 2n, tức là bảng \nchân lý có 2n dòng. Như vậy việc kiểm tra một công thức có thoả được hay không bằng phương \npháp bảng chân lý, đòi hỏi thời gian mũ. Cook (1971) đã chứng minh rằng, vấn đề kiểm tra một \ncông thức trong logic mệnh đề có thoả được hay không là vấn đề NP-đầy đủ. \nChúng ta sẽ nói rằng một tập công thức G = {G1,..,Gm } là vững chắc (thoả được, không \nthoả được) nếu hội của chúng G1∧.......∧Gm là vững chắc (thoả được, không thoả được). Một \nmô hình của tập công thức G là mô hình của công thức G1∧.......∧Gm.. \n3.5.2  Dạng chuẩn tắc  \nTrong mục này chúng ta sẽ xét việc chuẩn hóa các công thức, đưa các công thức về dạng thuận lợi \ncho việc lập luận, suy diễn. Trước hết ta sẽ xét các phép biến đổi tương đương. Sử dụng các phép \nbiển đổi này, ta có thể đưa một công thức bất kỳ về dạng chuẩn tắc. \n3.5.2.1 Sự tương đương của các công thức  \nHai công thức A và B được xem là tương đương nếu chúng có cùng một giá trị chân lý trong mọi \nminh họa. Để chỉ A tương đương với B ta viết A≡ B. Bằng phương pháp bảng chân lý, dễ dàng \nchứng minh được sự tương đương của các công thức sau đây: \nA⇒B   ≡  lA ∨ B \nA ⇔ B  ≡   (A⇒B) ∧ (B⇒A) \nl(lA)  ≡  A \n• \nLuật De Morgan \nl(A ∨ B) ≡ lA ∧ lB \nl(A ∧ B) ≡ lA ∨ lB \n• \nLuật giao hoán  \nA ∨ B    ≡   B ∨ A \nA ∧ B    ≡   B ∧ A \n• \nLuật kết hợp  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=45 idx_doc=44
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 26



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả quy trình phân khung trong việc xử lý tín hiệu tiếng nói như thế nào?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Tín hiệu được chia thành các khung với mỗi khung có N mẫu và hai khung kề lệch nhau M mẫu.
Option 2: Tín hiệu được xử lý bằng cách sử dụng bộ lọc số bậc thấp để giảm thiểu tiếng ồn.
Option 3: Tín hiệu được lấy mẫu liên tục mà không cần phân khung để đơn giản hóa quá trình xử lý.
Option 4: Tín hiệu được phân thành các khung với mỗi khung có M mẫu và không có sự chồng lấp giữa các khung.
Answer: Tín hiệu được chia thành các khung với mỗi khung có N mẫu và hai khung kề lệch nhau M mẫu.
Citation: Câu trả lời này đúng vì nội dung mô tả quy trình phân khung trong khối 2 của sơ đồ tính toán các hệ số MFCC, nêu rõ rằng mỗi khung có N mẫu và hai khung kề lệch nhau M mẫu.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả quy trình phân khung trong xử lý tín hiệu tiếng nói, và câu trả lời được gợi ý đã nêu đúng quy trình này, cụ thể là tín hiệu được chia thành các khung với mỗi khung có N mẫu và hai khung kề lệch nhau M mẫu. Điều này hoàn toàn phù hợp với thông tin trong tài liệu. Các đáp án khác cũng liên quan đến quy trình phân khung, nhưng chỉ có đáp án gợi ý là chính xác và đúng hơn các đáp án khác.
cau hoi dung: question='Mô tả quy trình phân khung trong việc xử lý tín hiệu tiếng nói như thế nào?' options=['Tín hiệu được chia thành các khung với mỗi khung có N mẫu và hai khung kề lệch nhau M mẫu.', 'Tín hiệu được xử lý bằng cách sử dụng bộ lọc số bậc thấp để giảm thiểu tiếng ồn.', 'Tín hiệu được lấy mẫu liên tục mà không cần phân khung để đơn giản hóa quá trình xử lý.', 'Tín hiệu được phân thành các khung với mỗi khung có M mẫu và không có sự chồng lấp giữa các khung.'] answer='Tín hiệu được chia thành các khung với mỗi khung có N mẫu và hai khung kề lệch nhau M mẫu.' citation='107\nhàm logarit ở tần số cao được sử dụng để trích chọn các đặc trưng âm học quan trọng của tiếng \nnói. Mô hình tính toán các hệ số MFCC được mô tả như Hình 4.5.  \n \n \n \n \n \n \n \n \nHình 4.5. Sơ đồ tính toán các hệ số MFCC \n Ý nghĩa và phương pháp xác định tham số ở các khối trong sơ đồ trên mô tả như sau: \nKhối 1: Bộ lọc hiệu chỉnh (Preemphasis) \n \nTín hiệu tiếng nói  s(n) được đưa qua bộ lọc số bậc thấp để phổ đồng đều hơn, giảm ảnh \nhưởng gây ra cho các xử lý tín hiệu sau này. Thường bộ lọc này cố định bậc một, có dạng: \n                                        H(z) = 1– az\n1\n−    0.9≤ a≤ 1.0                                                \n \nQuan hệ giữa tín hiệu ra với tín hiệu vào tuân theo phương trình \n                                      \n~\ns (n) = s(n)-a.s(n-1) \n            \n                         \n \n \nGiá trị a thường được chọn là 0.97. \nKhối 2: Phân khung (Frame Blocking) \n \nTrong khối này tín hiệu hiệu chỉnh\n~\ns (n) được phân thành các khung, mỗi khung có N \nmẫu; hai khung kề lệch nhau M mẫu. Khung đầu tiên chứa N mẫu, khung thứ hai bắt đầu chậm \nhơn khung thứ nhất M mẫu và chồng lên khung thứ nhất N-M mẫu. Tương tự, khung thứ ba chậm \nhơn khung thứ nhất 2M mẫu (chậm hơn khung thứ hai M mẫu) và chờm lên khung thứ nhất N-2M \nmẫu. Quá trình này tiếp tục cho đến khi tất cả các mẫu tiếng nói cần phân tích thuộc về một hoặc \nnhiều khung. \n \nKhối 3: Lấy cửa sổ (Windowing) \nBước tiếp theo là lấy cửa sổ cho mỗi khung riêng rẽ nhằm giảm sự gián đoạn của tín hiệu tiếng \nnói tại đầu và cuối mỗi khung. Nếu w(n), 0 ≤ n ≤ N-1, sau khi lấy cửa sổ được:  \n1\n0\n),\n(\n)\n(\n)\n(\n~\n−\n≤\n≤\n=\nN\nn\nn\nw\nk\nx\nk\nx\nn\nn\n \n \n          \nThông thường, của sổ Hamming được sử dụng. Cửa sổ này có dạng:  \nN      M                     \nW( )\n)\n(\n^\nt\nc i\n)\n(n\ns\n)\n(\n~\nt\nci\nΔ\nk\nm\n)\n(\n~\nn\ns\n)\n(n\nxt\n)\n(\n~\nn\nxt\n)\n(t\nci\nPhổ \nnăng \nl\n   W(n) \nBộ lọc/Hiệu \nchỉnh \nĐạo hàm \ntheo thời \nCác băng \nlọc tam \nLấy \ncửa \nGắn \ntrọng số\nDTC \nFFT \nPhân \nkhung\nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=105 idx_doc=104
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 27



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách mà Prolog tìm ra các câu trả lời cho các câu hỏi?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Prolog sử dụng phương pháp lập luận lùi và tìm kiếm theo chiều sâu.
Option 2: Prolog chỉ sử dụng các câu phân tử để tìm ra câu trả lời.
Option 3: Prolog không sử dụng kỹ thuật tìm kiếm nào để tìm ra câu trả lời.
Option 4: Prolog chỉ xem xét các câu hỏi mà không cần đến các đích con.
Answer: Prolog sử dụng phương pháp lập luận lùi và tìm kiếm theo chiều sâu.
Citation: Thông tin trong nội dung cho biết rằng Prolog sử dụng phương pháp lập luận lùi và kỹ thuật tìm kiếm theo chiều sâu để tìm ra câu trả lời cho các câu hỏi.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách mà Prolog tìm ra các câu trả lời cho các câu hỏi, và câu trả lời được gợi ý đã nêu đúng phương pháp mà Prolog sử dụng, đó là lập luận lùi và tìm kiếm theo chiều sâu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, trong đó có những đáp án sai, điều này cho thấy câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Mô tả cách mà Prolog tìm ra các câu trả lời cho các câu hỏi?' options=['Prolog sử dụng phương pháp lập luận lùi và tìm kiếm theo chiều sâu.', 'Prolog chỉ sử dụng các câu phân tử để tìm ra câu trả lời.', 'Prolog không sử dụng kỹ thuật tìm kiếm nào để tìm ra câu trả lời.', 'Prolog chỉ xem xét các câu hỏi mà không cần đến các đích con.'] answer='Prolog sử dụng phương pháp lập luận lùi và tìm kiếm theo chiều sâu.' citation='89\nđiều đó có nghĩa là “An yêu thích bóng đá”. \nMột cách tổng quát, một câu hỏi có dạng \n? - G1, ..., Gn. \ntrong đó, mỗi Gi (i = 1, ..., n) là một công thức phân tử, danh sách (G1, ..., Gn) được gọi là đích, \ncác Gi (i = 1, ..., n) được gọi là đích con. Nếu n = 0, ta có đích rỗng, ký hiệu là \x00. \nĐến đây chúng ta muốn biết, làm thế nào mà Prolog tìm ra các câu trả lời cho các câu hỏi? Một \nchương trình Prolog có thể xem như một CSTT. Thủ tục tìm câu trả lời của Prolog là một cách cài \nđặt phương pháp lập luận lùi mà chúng ta đã trình bày ở mục 7.4. Trong cách cài đặt phương pháp \nlập luận lùi này, người ta sử dụng kỹ thuật tìm kiếm theo chiều sâu. Các câu trong Prolog được \nxét theo thứ tự từ trên xuống dưới. Các đích con được xem xét để thoả mãn theo thứ tự từ trái \nsang phải. Ngoài ra, thủ tục lập luận của Prolog còn cho phép người lập trình sử dụng vị từ “cut” \nkhi cần thiết đảm bảo chương trình đúng đắn và hiệu quả. \nMột đặc điểm nữa của Prolog là, thay cho việc sử dụng các câu là phủ định của các câu phân tử. \nProlog đưa vào vị từ not biểu diễn phủ định như thất bại (negation as failure). Điều đó có nghĩa \nlà not(P) được xem là đúng nếu ta thất bại trong việc tìm một chứng minh P đúng. Tức là, với \nCSTT hiện có, ta không tìm được một phép thay thế biến nào để P trở thành hệ quả logic của \nCSTT. Sau đây là một ví dụ sử dụng vị từ not. \nlikes(an, X) :- animal(X), not(snaker(X)). \nBạn đọc muốn tìm hiểu sâu hơn về các kỹ thuật lập trình Prolog và các ứng dụng trong Trí tuệ \nnhân tạo, có thể tìm đọc các tài liệu [ ] và [ ]. \nCÂU HỎI VÀ BÀI TẬP \nBai 1. Cho {(a∧b)→c, (b∧c)→d, (a∧b)}. Hỏi d ? \nBai 2.   Cho {p→q , q→r}. Hỏi p→r? \nBai 3.   Cho {(a∧b)→c,(b∧c)→d,┐d}. Cm a→b ? \nBai 4     Cho{p∧q)→r ,  (p∧r)→s , p.q} Hỏi r ?.. \nBai 5     Cm từ {(p∧q) →r, ( q ∧r) →s, ┐s} Hỏi p→ ┐q ? \nBai 6.    Cho { ┐p v q , ┐q v r , ┐r v s, ┐u v ┐s} Hỏi ┐p,┐u \nBai 7.    Cho{p→q , q→r , r→s , p} Hỏi p ∧s? \nBài 8:   Cho tập mênh đề: \na) Ông Tư ăn táo \nb) Ông Tư ăn cam \nc) Cam là thức ăn \nd) Món ăn mà người ăn không chết (sống) gọi là thức ăn \ne) Ông Tư đang sống \nf) Hỏi táo có phải là thức ăn? \nHãy: 1. Dùng logic vi từ để mô tả các mệnh đề trên \n         2. Dùng thuật toán Havard (hoặc Robinson để giải. \nBài 9   Cho tập quan hệ (hàm) trong tam giác: \ng) a/sinα= b/sinβ   \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=87 idx_doc=86
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 28



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hạng thức nào được sử dụng để mô tả một đoạn thẳng nối hai điểm trong không gian hai chiều?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: seg(point (4, 7), point (9, 3))
Option 2: point(2, 3)
Option 3: triangle(point (3, 2), point (6, 4), point (8, 1))
Option 4: date(Day, May, 2000)
Answer: seg(point (4, 7), point (9, 3))
Citation: Đoạn thẳng được xác định bởi hai điểm, và trong nội dung đã nêu rõ rằng đoạn thẳng nối hai điểm (4, 7) và (9, 3) được biểu diễn bởi hạng thức seg(point (4, 7), point (9, 3)).
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu hạng thức mô tả một đoạn thẳng nối hai điểm trong không gian hai chiều, và câu trả lời được gợi ý là 'seg(point (4, 7), point (9, 3))', đúng với nội dung trong tài liệu. Hơn nữa, câu trả lời này cũng nằm trong danh sách các đáp án khác, cho thấy nó là một lựa chọn chính xác. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng không liên quan đến đoạn thẳng. Do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Hạng thức nào được sử dụng để mô tả một đoạn thẳng nối hai điểm trong không gian hai chiều?' options=['seg(point (4, 7), point (9, 3))', 'point(2, 3)', 'triangle(point (3, 2), point (6, 4), point (8, 1))', 'date(Day, May, 2000)'] answer='seg(point (4, 7), point (9, 3))' citation='68\nbiểu diễn bởi hạng thức date(1, May, 2000). Một ngày bất kỳ trong tháng 5 năm 2000 được biểu \ndiễn bởi hạng thức: date(Day, May, 2000) trong đó Day là kí hiệu biến. Hạng thức này gồm 3 \nthành phần, một là kí hiệu biến, hai thành phần khác là các kí hiệu hằng. Hạng thức này được biểu \ndiễn bởi cấu trúc cây trong hình 3.3 \n \n \n \n \n \n                        \n                      Hình 3.3. Cây biểu diễn hạng thức date(Day, May,2000) \n \nCác ví dụ sau đây cho ta thấy cách tạo ra các hạng thức biểu diễn các đối tượng hình học \ntrong mặt phẳng. Một điểm trong không gian hai chiều được xác định bởi hai toạ độ; một đoạn \nthẳng được xác định bởi hai điểm; một tam giác được xác định bởi ba điểm. Do đó, nếu ta sử dụng \ncác kí hiệu hàm point (điểm), seg (đoạn thẳng), triangle (tam giác) thì điểm có toạ độ (2,3) được \nbiểu diễn bởi hạng thức point (2, 3)  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nHình 3.4. Các cây biểu diễn các hạng thức \nĐoạn thẳng nối hai điểm (4, 7) và (9, 3) được biểu diễn bởi hạng thức: \n \n \n seg(point (4, 7), point (9, 3)) \nTam giác có ba đỉnh là ba điểm (3, 2), (6, 4), (8, 1) được biểu diễn bởi hạng thức: \ndate\n2000\nMay \nDay\npoint \n2 \n3 \npoint \n9 \n7\n4 \nseg \n3 \npoint \ntriangle \n3 \n2 \npoint \npoint \npoint\n4 \n6 \n8\n1 \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=66 idx_doc=65
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 29



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách xác định độ thích nghi trung bình của quần thể ở thế hệ t?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Độ thích nghi trung bình được xác định bằng tổng độ thích nghi của tất cả nhiễm sắc thể chia cho số lượng nhiễm sắc thể.
Option 2: Độ thích nghi trung bình được xác định bằng tổng số nhiễm sắc thể trong quần thể.
Option 3: Độ thích nghi trung bình được xác định bằng độ thích nghi của sơ đồ S ở thế hệ t.
Option 4: Độ thích nghi trung bình được xác định bằng tổng số chuỗi phù hợp với sơ đồ S ở thế hệ t. 
Answer: Độ thích nghi trung bình được xác định bằng tổng độ thích nghi của tất cả nhiễm sắc thể chia cho số lượng nhiễm sắc thể.
Citation: Theo nội dung, độ thích nghi trung bình của quần thể ở thế hệ t được xác định bởi tổng độ thích nghi của từng nhiễm sắc thể chia cho số lượng nhiễm sắc thể trong quần thể.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách xác định độ thích nghi trung bình của quần thể ở thế hệ t, và câu trả lời được gợi ý đã nêu rõ rằng độ thích nghi trung bình được xác định bằng tổng độ thích nghi của tất cả nhiễm sắc thể chia cho số lượng nhiễm sắc thể, điều này hoàn toàn đúng với nội dung trong tài liệu. Các đáp án khác cũng có liên quan, nhưng chỉ có một đáp án đúng hơn, đó là đáp án được gợi ý. Do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Mô tả cách xác định độ thích nghi trung bình của quần thể ở thế hệ t?' options=['Độ thích nghi trung bình được xác định bằng tổng độ thích nghi của tất cả nhiễm sắc thể chia cho số lượng nhiễm sắc thể.', 'Độ thích nghi trung bình được xác định bằng tổng số nhiễm sắc thể trong quần thể.', 'Độ thích nghi trung bình được xác định bằng độ thích nghi của sơ đồ S ở thế hệ t.', 'Độ thích nghi trung bình được xác định bằng tổng số chuỗi phù hợp với sơ đồ S ở thế hệ t. '] answer='Độ thích nghi trung bình được xác định bằng tổng độ thích nghi của tất cả nhiễm sắc thể chia cho số lượng nhiễm sắc thể.' citation='140\n5.3.4. Tác động của các toán tử di truyền trên một sơ đồ \na. Toán tử sinh sản \nXét một quần thể có kích thước n. Gọi \n)\n,\n(\nt\nS\nξ\n là số nhiễm sắc thể trong quần thể ở thế \nhệ t, phù hợp với sơ đồ S. Gọi \n)\n,\n(\nt\nS\nEval\nlà độ thích nghi của sơ đồ S ở thế hệ t. Giải sử có n  \nnhiễm sắc thể {\n1i\nC ,…, \nin\nC } trong quần thể phù hợp với sơ đồ S ở thời điểm t. Thì: \n              \nn\nC\nEval\nt\nS\nEval\nn\nj\nij\n∑\n=\n=\n1\n)\n(\n)\n,\n(\n                                                        \nTrong quá trình sinh sản, xác suất nhiễm sắc thể \ni\nC có xác suất được chọn pi: \n                \n)\n(\n)\n(\n)\n(\nt\nFit\nC\nEval\ni\np\ni\n=\n                                                                    \ntrong đó,\n)\n(t\nFit\n là tổc độ thích nghi của quần thể ở thế hệ t; được xác định bởi: \n              \n∑=\n=\nn\ni\ni\nC\nEval\nt\nFit\n1\n)\n(\n)\n(\n                                                            \nỞ thế hệ t+1, số chuỗi phù hợp với sơ đồ S(\n)1\n,\n(\n+\nt\nS\nξ\n) được tính bới: \n        \n)\n(\n)\n,\n(\n*\n*\n)\n,\n(\n)1\n,\n(\nt\nFit\nt\nS\nEval\nn\nt\nS\nt\nS\nξ\nξ\n=\n+\n                                              \nGọi \nn\nt\nFit\nt\nFit\n)\n(\n)\n(\n=\n là độ thích nghi trung bình của quần thể. Viết lại công thức (5-5a): \n \n \n   \n             \n)\n(\n)\n,\n(\n*\n)\n,\n(\n)1\n,\n(\nt\nFit\nt\nS\nEval\nt\nS\nt\nS\nξ\nξ\n=\n+\n                                                \n \nTừ đó cho thấy, số lượng nhiễm sắc thể tăng bằng tỷ lệ độ thích nghi của sơ đồ với độ \nthích nghi trung bình của quần thể. Điều đó có nghĩa là sơ đồ “trên trung bình” nhận thêm số \nnhiễm sắc thể ở thế hệ sau; sơ đồ “dưới trung bình” số nhiễm sắc thể sẽ giảm; sơ đồ trung \nbình vẫn giữ nguyên. Công thức trên gọi là phương trình tăng trưởng sinh sản của sơ đồ S. \n \nGiả sử sơ đồ S vẫn trên mức trung bình  k % nghĩa là: \n           \n)\n(\n*\n)\n(\n)\n,\n(\nt\nFit\nk\nt\nFit\nt\nS\nEval\n+\n=\n                                                    \nkhi đó: \n             \nt\nk\nS\nt\nS\n)\n1(\n*\n)\n0,\n(\n)\n,\n(\n+\n= ξ\nξ\n                                                            \ntrong đó;  \n   k > 0 : với sơ đồ “trên trung bình“; \n   k < 0 : với sơ đồ “dưới trung bình” \nTheo (5-7), số nhiễm sắc thể phù hợp với sơ đồ S  tăng theo luỹ thừa ở thế hệ kế tiếp. \nb. Toán tử ghép chéo \nNhư mô tả ở trên về toán tử ghép chéo, giả sử có một sơ đồ được chọn để ghép chéo   \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=138 idx_doc=137
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 30



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả các bước chính trong thuật toán Robin son để chứng minh một bài toán.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Bước 1: Phát biểu lại giả thiết và kết luận
Option 2: Bước 2: Thay dấu các phép nối trong giả thiết
Option 3: Bước 3: Chuyển vế kết luận sang giả thiết
Option 4: Bước 4: Xây dựng một mệnh đề mới từ danh sách mệnh đề
Answer: Bước 1: Phát biểu lại giả thiết và kết luận
Citation: Theo nội dung, bước đầu tiên trong thuật toán Robin son là phát biểu lại giả thiết và kết luận của bài toán dưới dạng chuẩn, điều này là cần thiết để tiến hành các bước tiếp theo trong quá trình chứng minh.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả các bước chính trong thuật toán Robin son để chứng minh một bài toán, và câu trả lời được gợi ý đã nêu ra Bước 1, điều này là chính xác. Hơn nữa, các đáp án khác cũng liệt kê đầy đủ các bước từ Bước 1 đến Bước 4, tất cả đều có thể tìm thấy trong tài liệu. Do đó, câu trả lời được gợi ý và các đáp án khác đều phù hợp với yêu cầu của câu hỏi.
cau hoi dung: question='Mô tả các bước chính trong thuật toán Robin son để chứng minh một bài toán.' options=['Bước 1: Phát biểu lại giả thiết và kết luận', 'Bước 2: Thay dấu các phép nối trong giả thiết', 'Bước 3: Chuyển vế kết luận sang giả thiết', 'Bước 4: Xây dựng một mệnh đề mới từ danh sách mệnh đề'] answer='Bước 1: Phát biểu lại giả thiết và kết luận' citation='54\nThuật toán Robin son (1971)   \nRobíson đã cai tiến thuật toán Havard. Cách thức chứng minh như sau: \nBước 1: Phát biểu lại giả thiết (GT) và kết luận của bài toán dưới dạng chuẩn sau: \n                                GT1,GT2,…, GTn  → KL1,KL2,…, KLm \nTrong đó các GTi, KLj  được xây dựng từ các biến mệnh đề và các phép nối   ∧ ,∨,⎤,  \nBước 2: Thay dấu “∧”  ở GTi  và “∨” ở KLj bằng các dấu “,” \n \nBước 3: Chuyển vế KLj sang vế GTi  với dấu phủ định để còn một vế, tức là : \n                           GT1,GT2,…, GTn , ⎤, KL1,⎤, KL2,…, ⎤KLm \nBước 4:  Xây dựng một mệnh đề mới bằng cách tuyển một cặp mệnh đề từ danh sách các mệnh \nđề. Nếu mệnh đề mới có các biến mệnh đề đối ngẫu thì mệnh đề đó được loại bỏ. \nBước 5: Bổ sung mệnh đề mới này vào danh sách và lặp lai bươc 4 \nBước 6: Bài toán được chứng minh khi và chi khi chỉ còn hai mệnh đề đói ngẫu. Ngược lại thì bài \ntoán không được chứng minh. \nThuật toán này thực chất là chứng minh bằng phản chứng \n3.5.6 Biểu diễn tri thức bằng Logic vị từ \nLogic mệnh đề cho phép ta biểu diễn các sự kiện. Mỗi kí hiệu trong logic mệnh đề được minh họa \nnhư là một sự kiện trong thế giới hiện thực, sử dụng các kết nối logic ta có thể tạo ra các câu phức \nhợp biểu diễn các sự kiện mang ý nghĩa phức tạp hơn. Như vậy, khả năng biểu diễn của logic \nmệnh đề chỉ giới hạn trong phạm vi thế giới các sự kiện.  \nThế giới hiện thực bao gồm các đối tượng. Mỗi đối tượng có những tính chất riêng để phân biệt \nnó với các đối tượng khác. Các đối tượng lại có quan hệ với nhau. Các mối quan hệ rất đa dạng \nvà phong phú. Chúng ta có thể liệt kê rất nhiều ví dụ về đối tượng, tính chất, quan hệ.  \n\x1fĐối tượng: một cái bàn, một cái nhà, một cái cây, một con người, một con số.... \n\x1fTính chất: Cái bàn có thể có tính chất: có bốn chân, làm bằng gỗ, không có ngăn kéo. Con số có \nthể có tính chất là số nguyên, số hữu tỉ, là số chính phương... \n\x1fQuan hệ: cha con, anh em, bè bạn (giữa con người); lớn hơn, nhỏ hơn, bằng nhau (giữa các con \nsố); bên trong, bên ngoài nằm trên nằm dưới (giữa các đồ vật)... \n\x1fHàm: Một trường hợp riêng của quan hệ là quan hệ hàm. Chẳng hạn, vì mỗi người có một mẹ, \ndo đó ta có quan hệ hàm ứng mỗi người với mẹ của nó.  \n \nMục này dành cho nghiên cứu logic vị từ cấp một với tư cách là một ngôn ngữ biểu diễn tri thức. \nLogic vị từ cấp một đóng vai trò quan trọng trong biểu diễn tri thức vì khả năng biểu diễn của nó \n(nó cho phép ta biểu diễn tri thức về thế giới với các đối tượng, các thuộc tính của đối tượng và \ncác quan hệ của đối tượng), hơn nữa, nó là cơ sở cho nhiều ngôn ngữ logic khác. \n3.5.6.1 Cú pháp và ngữ nghĩa của logic vị từ cấp 1 \nLogic vị từ cấp một là mở rộng của logic mệnh đề. Nó cho phép ta mô tả thế giới với các đối \ntượng, các thuộc tính của đối tượng và các mối quan hệ giữa các đối tượng. Nó sử dụng các biến \n(biến đối tượng) để chỉ các đối tượng trong một miền đối tượng nào đó. Để mô tả các thuộc tính \ncủa đối tượng, các quan hệ giữa các đối tượng, trong logic vị từ, người ta đưa vào các vị từ \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=52 idx_doc=51
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 31



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách tính CF cho biểu thức có dạng ((e1 AND e2) OR e3) trong hệ thống dự luật.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: CF ((e1 AND e2) OR e3) = MIN (CF(e1), CF(e2), CF(e3))
Option 2: CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1), CF(e2), CF(e3))
Option 3: CF ((e1 AND e2) OR e3) = CF(e1) + CF(e2) + CF(e3)
Option 4: CF ((e1 AND e2) OR e3) = MAX (CF(e1), CF(e2), CF(e3))
Answer: CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1), CF(e2), CF(e3))
Citation: Đáp án đúng là CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1), CF(e2), CF(e3)) vì đây là công thức chính xác để tính độ đo chắc chắn cho biểu thức này trong hệ thống dự luật, như đã nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách tính CF cho biểu thức có dạng ((e1 AND e2) OR e3), và câu trả lời được gợi ý đã cung cấp công thức chính xác là CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1), CF(e2), CF(e3)). Điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng được liệt kê, trong đó có một đáp án đúng và một số đáp án sai, nhưng câu trả lời gợi ý vẫn là chính xác và đúng hơn các đáp án khác. Do đó, đánh giá là 'yes'.
cau hoi dung: question='Mô tả cách tính CF cho biểu thức có dạng ((e1 AND e2) OR e3) trong hệ thống dự luật.' options=['CF ((e1 AND e2) OR e3) = MIN (CF(e1), CF(e2), CF(e3))', 'CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1), CF(e2), CF(e3))', 'CF ((e1 AND e2) OR e3) = CF(e1) + CF(e2) + CF(e3)', 'CF ((e1 AND e2) OR e3) = MAX (CF(e1), CF(e2), CF(e3))'] answer='CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1), CF(e2), CF(e3))' citation='85\nIF (e1 AND e2) then (c) \nToán tử AND được dùng để liên kết chứng cớ e1 và e2. Lúc bấy giờ ta có: \nCF (e1 END e2) = MIN (CF(e1),CF(e2)) \nVới luật có dạng OR như sau: \nIf (e1 OR e2) then (c) \nThì CF (e1 OR e2) = MAX( CF(e1),CF(e2)) \nVới luật có dạng AND và OR như sau: \nIf ((e1 AND e2) OR e3) then (c) \nThì CF ((e1 AND e2) OR e3) = MAX (MIN(CF(e1),CF(e2),CF(e3)) \nNgoài ra độ đo chắc chắn có dạng NOT được tính như sau: \nCF (NOT e) = - CF (e) \nSau khi tính được độ đo chắc chắn của chứng cớ liên kết, ta dùng công thức nêu trong mục Luật \nđơn giản để tính CF kết luận. \n3.7.3  Các hệ thống dự luật \nTrong các hệ dựa trên luật, chúng ta còn có thể sử dụng phương pháp lập luận lùi. Lập \nluận lùi cho phép ta tìm ra các phép thế biến mà giả thuyết đưa ra trở thành đúng (là hệ quả logic \ncủa cơ sở tri thức). Do đó trong hệ dựa trên luật chúng ta có thể sử dụng lập luận lùi để tìm ra các \ncâu trả lời cho các câu hỏi được đặt ra bởi người sử dụng. \nMột câu hỏi đặt ra có thể xem như một giả thuyết (ký hiệu là Hyp) cần kiểm tra. Giả thuyết có thể \nlà một câu phân tử hoặc là hội của các câu phân tử: \nHyp = H1 Λ … Λ H m \ntrong đó Hi (i = 1, ..., m) là các câu phân tử. \nMục đích của chúng ta là kiểm chứng xem giả thuyết có thể trở thành đúng không, và nếu có thì \nvới các phép thế biến nào nó trở thành đúng. \nChúng ta sẽ xử lý Hyp như một danh sách các giả thuyết Hi: \nHyp = [H1, ..., Hm] \nChúng ta sẽ xét mỗi luật \nQ\nP\nP\nm ⇒\n∧\n∧…\n1\n \nnhư một cặp (conds, conc); trong đó Conds là danh sách các điều kiện của luật. \nConds = [P1, ..., Pm] \nvà Conc là kết luận của luật, Conc = Q. \nMột sự kiện S (câu phân tử) được xem như một luật không có điều kiện, tức là Conds = [ ] và \nConc = S. \nTư tưởng của phương pháp lập luận lùi là như sau. Với mỗi giả thuyết trong danh sách các giả \nthuyết, ta tìm những luật có phần kết luận hợp nhất với giả thuyết đó. Nếu luật này là một sự kiện \nthì ta loại bỏ giả thuyết đang xét khỏi danh sách các giả thuyết. Nếu không thì ta xem các điều \nkiện của luật là các giả thuyết mới xuất hiện và giả thuyết đang xét được thay bởi các giả thuyết \nmới đó. Khi đó ta nhận được một danh sách các giả thuyết mới. Lặp lại quá trình trên cho danh \nsách các giả thuyết mới này. Trong quá trình trên ta lưu lại hợp thành của các phép thế đã sử dụng \nθ. Nếu tới một bước nào đó, danh sách các giả thuyết trở thành rỗng, thì ta kết luận giả thuyết ban \nđầu là đúng với phép thế biến θ. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=83 idx_doc=82
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 32



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Bạn có thể mô tả những lý do mà các nhà nghiên cứu chọn cờ là một trò chơi để phát triển trí tuệ nhân tạo không?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Bởi vì cờ có luật chơi phức tạp và khó hiểu.
Option 2: Vì cờ là trò chơi duy nhất có thể chơi trên máy tính.
Option 3: Do sự đơn giản của luật chơi và khả năng biểu diễn trạng thái trò chơi.
Option 4: Vì cờ là trò chơi duy nhất mà máy tính có thể thắng con người.
Answer: Do sự đơn giản của luật chơi và khả năng biểu diễn trạng thái trò chơi.
Citation: Câu trả lời đúng là "Do sự đơn giản của luật chơi và khả năng biểu diễn trạng thái trò chơi" vì trong nội dung đã nêu rõ rằng sự đơn giản của luật chơi và khả năng nắm bắt trạng thái thế giới là lý do chính mà các nhà nghiên cứu chọn cờ để phát triển trí tuệ nhân tạo.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả lý do tại sao các nhà nghiên cứu chọn cờ để phát triển trí tuệ nhân tạo, và câu trả lời được gợi ý đã nêu đúng một trong những lý do chính là sự đơn giản của luật chơi và khả năng biểu diễn trạng thái trò chơi. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng chỉ có đáp án gợi ý là đúng. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Bạn có thể mô tả những lý do mà các nhà nghiên cứu chọn cờ là một trò chơi để phát triển trí tuệ nhân tạo không?' options=['Bởi vì cờ có luật chơi phức tạp và khó hiểu.', 'Vì cờ là trò chơi duy nhất có thể chơi trên máy tính.', 'Do sự đơn giản của luật chơi và khả năng biểu diễn trạng thái trò chơi.', 'Vì cờ là trò chơi duy nhất mà máy tính có thể thắng con người.'] answer='Do sự đơn giản của luật chơi và khả năng biểu diễn trạng thái trò chơi.' citation='40\ncách chính thức những nhà vô địch thế giới. Sau đó nó gặp phải một vấn đề,dưới cái tên \nMarionTinsley. Tiến sỹ Tinsley đã là nhà vô địch thế giới suốt hơn 40 năm, chỉ thua có 3 trận \ntrong suốt khoảng thời gian đó. Trong trận đầu tiên với Chinook, Tinsley đã chịu thua ván thứ 4 \nvà thứ năm của mình, những đã thắng chung cuộc 21.5–18.5. Gần đây, giải vô địch thế giới tháng \n8 năm 1994 giữa Tinsley và Chinook kết thúc sớm khi Tinsley phải xin rút lui vì lý do sức khoẻ. \nChinook chính  thức trở thành nhà vô địch thế giới. \n \nTrò chơi là các bài toán tìm kiếm \n           Chơi trò chơi cũng là một trong những khu vực cổ nhất  của ccác nỗ lực trong lĩnh vực trí \ntuệ nhân tạo. Năm 1950, hầu như ngay khi máy tính trở nên có thể lập trình được, các chương \ntrình chơi cờ được viết bởi Shannon (người phát minh ra lý thuyết thông tin) và bởi Alan Turing. \nKể từ đó, đã có những phát triển rất mạnh mẽ về các tiêu chuẩn của việc chơi, đạt tới điểm mà các \nhệ thống hiện thời có thể thử thách các nhà vô địch của loài người mà không sợ xấu hổ. \n            Các nhà nghiên cứuđầu tiên đã chọn cờ vì một số lý do. Một máy tính chơi cờ sẽ là một \nchứng cứ sinh tồn của một máy cơ khí  làm một điều gì đó mà cần sự thông minh. Hơn nữa, sự \nđơn giản của luật chơi, và thực tế rằng trạng thái thế giới có thể nắm bắt được đầy đủ đối với \nchương trình  có nghĩa là rất dễ để biểu diễn trò chơi như là một cuộc tìm  kiếm  trong một không \ngian các vị trí trò chơi có thể.  Sự biểu diễn trò chơi của máy tính thực ra có thể chỉnh sửa theo bất \ncứ chi tiết thích đáng hợp lý nào – không giống như  sự miêu tả của bài toán về một cuộc chiến \ntranh. \n \nNhưng những gì làm cho trò chơi thực sự khác biệt là chúng thường quá khó để giải quyết. \nVí dụ, đánh cờ, có một hệ số phân nhánh trung bình khoảng 35, và mỗi bên thường đi khoảng 50 \nnước trong một ván cờ, dẫn đến cây tìm kiếm có khoảng 35100 nút (mặc dù “chỉ có” khoảng 1040 \nvị trí hợp lý khác nhau). Trò chơi cờ ca rô (Tic-Tac –Toe) khá buồn tẻ đối với những người lớn \nthông minh bởi vì rất dễ để quyết định bước đi đúng.  Sự phức tạp của các trò chơi  đưa ra một \nkiểu không chắc chắn hoàn toàn mới  mà chúng ta  chưa được biết; sự  không chắc chắn xuất hiện \nkhông phải vì có thông tin bị mất, mà do chúng ta không có đủ thời gian để tính toán một dãy \nchính xác của bất cứ nước đi nào. Thay vào đó, chúng ta  phải dự đoán tốt nhất dựa trên kinh \nnghiệm của mình, và hành động trước khi chúng ta  biết chắc được cần phải  hành động như thế \nnào. Dưới viễn cảnh này, các trò chơi rất giống với thế giới thực hơn so với các bài toán tìm kiếm \ntiêu chuẩn mà chúng ta  đã xét cho tới nay. \n \n \nKết luận \n \nChương này  áp dụng các heuristic để làm giảm chi phí tìm kiếm.  Chúng ta đã xem xét một \nsố giải thuật sử dụng các heuristic, và thấy rằng sự tối ưu phải trả giá cao dưới dạng chi phí tìm \nkiếm, thậm chí với các heuristic tốt. \n• \nPhép tìm kiếm best-first là phép tìm kiếm tổng quát khi các nút có chi phí ít nhất (dựa theo \nmột số tính toán) được mở rộng trước tiên. \n• \nNếu chúng ta tối thiểu hoá chi phí ước tính để đi tới mục tiêu h(n), chúng ta có phương pháp \ntìm  kiếm tham lam. Thời gian tìm kiếm  thường giảm đi so với một giải thuật không đầy đủ \nthông tin, nhưng giải thuật này là không tối ưu và không hoàn thành. \n• \nTối thiểu hoá f(n) = g(n) + h(n) để kết hợp điểm mạnh của phép tìm kiếm thiếu thông tin và \nphép tìm kiếm háu ăn.  Nếu chúng ta sử dụng các trạng thái lặp lại và đảm bảo rằng  h(n) \nkhông bao giờ ước lượng vượt quá, chúng ta  có phép tìm kiếm A*. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=38 idx_doc=37
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 33



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định phương pháp nào được Alan Turing đề xuất để định nghĩa hoạt động thông minh?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[định nghĩa]
Option 1: Phương pháp trắc nghiệm Turing
Option 2: Phương pháp phân tích dữ liệu
Option 3: Phương pháp lập trình máy tính
Option 4: Phương pháp mô phỏng trí tuệ nhân tạo
Answer: Phương pháp trắc nghiệm Turing
Citation: Phương pháp trắc nghiệm Turing được Alan Turing đề xuất vào năm 1950 nhằm định nghĩa một hoạt động gọi là thông minh, trong đó máy tính cần có khả năng giao tiếp như con người để đánh lừa người thẩm vấn.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định phương pháp mà Alan Turing đề xuất để định nghĩa hoạt động thông minh, và câu trả lời được gợi ý là 'Phương pháp trắc nghiệm Turing', điều này hoàn toàn chính xác và phù hợp với nội dung tài liệu. Ngoài ra, các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý đã đúng và cụ thể hơn so với các đáp án khác.
cau hoi dung: question='Hãy xác định phương pháp nào được Alan Turing đề xuất để định nghĩa hoạt động thông minh?' options=['Phương pháp trắc nghiệm Turing', 'Phương pháp phân tích dữ liệu', 'Phương pháp lập trình máy tính', 'Phương pháp mô phỏng trí tuệ nhân tạo'] answer='Phương pháp trắc nghiệm Turing' citation='7\n    \n“Nh\x1fng n\x1f l\x1fc thú v\x1f m\x1fi đây l\x1f \nt\x1fo ra máy tính... nh\x1fng máy móc \ncó trí tu\x1f, hi\x1fu theo c\x1f nghiã đ\x1fy \nđ\x1f \nl\x1fn \nngh\x1fa \nbóng”.  \n(Haugeland, 1985) \n“[s\x1f t\x1f đ\x1fng hoá c\x1fa] các ho\x1ft \nđ\x1fng đã giúp chúng ta k\x1ft h\x1fp \nnh\x1fng t\x1f duy c\x1fa con ng\x1f\x1fi v\x1fi \ncông vi\x1fc c\x1fng nh\x1f quy\x1ft đ\x1fnh, \ngi\x1fi quy\x1ft v\x1fn đ\x1f, h\x1fc t\x1fp...” \n                                   (Bellman 1978)\n“Vi\x1fc nghiên c\x1fu c\x1f s\x1f trí tu\x1f \nthông qua s\x1f d\x1fng máy vi tính” \n(Charniak and McDermott, 1985)\n“Nghiên c\x1fu máy tính l\x1fm cho \nmáy tính có kh\x1f n\x1fng c\x1fm nh\x1fn, \nl\x1fp lu\x1fn v\x1f l\x1fm vi\x1fc”. \n \n \n (Winston, 1992)\n“Ngh\x1f thu\x1ft sáng t\x1fo máy móc l\x1f \nth\x1fc hi\x1fn ch\x1fc n\x1fng hình th\x1fnh t\x1f \nduy khi con ng\x1f\x1fi l\x1fm vi\x1fc”  \n                                            (Kurzweil, \n1990)\n"Vi\x1fc nghiên c\x1fu l\x1fm cách n\x1fo đ\x1f \nb\x1ft máy tính l\x1fm nh\x1fng vi\x1fc m\x1f \ncùng m\x1ft lúc con ng\x1f\x1fi có th\x1f l\x1fm \nt\x1ft h\x1fn.”                            \n (Rich and Knight, 1991)\n“Trong l\x1fnh v\x1fc nghiên c\x1fu l\x1f đ\x1f \ntìm ra cách gi\x1fi thích v\x1f đ\x1ft \nđ\x1f\x1fc nh\x1fng h\x1fnh đ\x1fng có t\x1f duy \ntrong “l\x1fnh v\x1fc x\x1f lý tính toán”.  \n(Schalkoff, 1990) \n“Trong ng\x1fnh khoa h\x1fc máy tính \ncó liên quan đ\x1fn s\x1f t\x1f đ\x1fng hoá \nnh\x1fng ho\x1ft đ\x1fng mang tính trí \ntu\x1f”. \n                          (Luger and \nStubbefield, 1993)\n \n                      Hình 1.1  Những định nghĩa về AI được chia thành 4 nhóm: \n \nHệ thống tư duy như con người \nHệ thống tư duy có lập luận \nHệ thống hoạt động như con người \nHệ thống hoạt động có lập luận \n \n \nHoạt động như con người: phương pháp trắc nghiệm Turning \nPhương pháp trắc nghiệm Turning được Alan Turning (1950) đưa ra . Đây là phương pháp \nnhằm định nghĩa một hoạt động gọi là thông minh. Turning cho rằng: hoạt động trí tuệ là khả \nnăng có được như con người trong những công việc cần tri thức, đủ để đánh lừa người thẩm vấn \nmình. Nói khái quát,  phương pháp trắc nghiệm của ông là: máy tính sẽ bị một người hỏi thông \nqua giao tiếp gõ chữ qua vô tuyến. Kết thúc thí nghiệm sẽ là lúc người hỏi không còn câu nào để \nhỏi hoặc cả người và máy đều hoàn thành. Để lập chương trình cho máy tính qua được quá trình \nkiểm tra cần hoàn thành nhiều việc. Máy tính cần có các khả năng sau:  \n• Xử lý ngôn ngữ tự nhiên để giao tiếp tốt bằng tiếng Anh (hoặc ngôn ngữ khác) \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=5 idx_doc=4
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 34



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả quá trình hợp nhất giả thuyết Valuable(w) với các kết luận từ luật trong nội dung trên.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Giả thuyết Valuable(w) không hợp nhất được với bất kỳ kết luận nào.
Option 2: Giả thuyết Valuable(w) hợp nhất với kết luận từ luật (10) và tạo ra các giả thuyết mới.
Option 3: Giả thuyết Valuable(w) chỉ hợp nhất với giả thuyết House(x).
Option 4: Giả thuyết Valuable(w) không liên quan đến bất kỳ phép thế nào.
Answer: Giả thuyết Valuable(w) hợp nhất với kết luận từ luật (10) và tạo ra các giả thuyết mới.
Citation: Trong nội dung, giả thuyết Valuable(w) hợp nhất được với kết luận của luật (10) bởi phép thế θ1 = [w/x], dẫn đến danh sách các giả thuyết mới.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả quá trình hợp nhất giả thuyết Valuable(w) với các kết luận từ luật, và câu trả lời được gợi ý đã nêu rõ rằng giả thuyết Valuable(w) hợp nhất với kết luận từ luật (10) và tạo ra các giả thuyết mới. Điều này hoàn toàn phù hợp với nội dung trong tài liệu, nơi mô tả chi tiết quá trình hợp nhất và các giả thuyết mới được hình thành. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời được gợi ý là chính xác và liên quan nhất đến câu hỏi.
cau hoi dung: question='Mô tả quá trình hợp nhất giả thuyết Valuable(w) với các kết luận từ luật trong nội dung trên.' options=['Giả thuyết Valuable(w) không hợp nhất được với bất kỳ kết luận nào.', 'Giả thuyết Valuable(w) hợp nhất với kết luận từ luật (10) và tạo ra các giả thuyết mới.', 'Giả thuyết Valuable(w) chỉ hợp nhất với giả thuyết House(x).', 'Giả thuyết Valuable(w) không liên quan đến bất kỳ phép thế nào.'] answer='Giả thuyết Valuable(w) hợp nhất với kết luận từ luật (10) và tạo ra các giả thuyết mới.' citation='87\nGiả thuyết ban đầu Hyp = [Valuable(w)] và θ = [ ]. Giả thuyết Valuable(w) hợp nhất được với kết \nluận của luật (10) bởi phép thế θ1 = [w/x], do đó ta nhận được danh sách các giả thuyết mới \nHyp = [House(x), Mother(x, y), Fast(y)] \nvà  \n \nθ  = θθ1 = [w/x] \nGiả thuyết House(x) hợp nhất được với sự kiện (1) bởi phép thế θ1 = [x/Tom], ta nhận được danh \nsách các giả thuyết mới \nHyp = [Mother(x, y), Fast(y)] \nvà  \n \nθ  =  [w/x][x/Tom] = [w/Tom] \nGiả thuyết Mother(Tom, y) hợp nhất được với sự kiện (5) bởi phép thế θ1 = [y/Bin], ta nhận được \ndanh sách các giả thuyết \nHyp = [Fast(y)] \nvà  \n \nθ  =  [w/Tom][y/Bin] = [w/Tom, y/Bin] \nGiả thuyết Fast(Bin) hợp nhất được với kết luận của luật (11) bởi phép thế [z/Bin], do đó ta có \nHyp = [Winner(Bin)] \nvà  \n \nθ  =  [w/Tom, y/Bin, z/Bin] \nGiả thuyết Winner(Bin) trùng với sự kiện (9) (hợp nhất được bởi phép thế θ1 = []). Do đó danh \nsách các giả thuyết trở thành rỗng với phép thế θ  =  [w/Tom, y/Bin, z/Bin]. Như vậy với phép thế \nnày thì giả thuyết Valuable(w) trở thành đúng, hay nói cách khác, Tom là con ngựa có giá. \nTừ các luật được sử dụng trong quá trình lập luận trên, và từ phép thế θ thu được, ta có thể xây \ndựng nên cây chứng minh cho Valuable(Tom) (xem hình 3.11). \nValuable(tom)\nHorse(tom)\nMother(tom, bin)\nFast(Bin)\nWinner(Bin)\n \nHình 3.11 Cây chứng minh cho Valuable(Tom)  \nChúng ta còn tìm được một phép thế biến khác θ  =  [w/Bin, y/Kit] để cho Valuable(w) trở \nthành đúng. Do đó, ta tìm ra Tom và Bin là các con ngựa có giá. \n3.8 CÁC NGÔN NGỮ LẬP TRÌNH THÔNG MINH \nHiện nay đã có nhiều hệ lập trình logic ra đời mà tiêu biểu là Prolog. Prolog là viết tắt của cụm từ \ntiếng Pháp ”Programmation en Logique” \nHệ Prolog đầu tiên ra đời vào năm 1973 do Alain Colmerauer và nhóm trí tuệ nhân tạo thuộc Đại \nhọc tổng hợp Aix-Marseilie, Pháp xây dựng. Mục đích ban đầu của hệ này là dịch các ngôn ngữ \ntự nhiên. Năm 1977, David Warren thuộc Đại học tổng hợp Edinburgh đã cài đặt một phiên bản \ncủa Prolog, mang tên là Prolog-10. Năm 1981, người Nhật đã tiến bộ sử dụng Prolog như ngôn \nngữ cơ bản cho máy tính thế hệ thứ năm. Hiện nay đã có nhiều hệ Prolog khác nhau về tốc độ, \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=85 idx_doc=84
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 35



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mạng nơron tự tổ chức được mô tả như thế nào trong nội dung đã cho?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Là mạng chỉ có một lớp đầu vào và không có trọng số
Option 2: Là mạng mà tại một thời điểm có một tế bào nơron hoặc nhóm nơron cục bộ đáp ứng với đầu vào
Option 3: Là mạng yêu cầu người hướng dẫn để hoạt động hiệu quả
Option 4: Là mạng chỉ sử dụng các hàm tuyến tính để xử lý thông tin
Answer: Là mạng mà tại một thời điểm có một tế bào nơron hoặc nhóm nơron cục bộ đáp ứng với đầu vào
Citation: Mạng tự tổ chức, theo Kohonen, chỉ có một tế bào nơron hoặc một nhóm nơron cục bộ cho đáp ứng đối với đầu vào tại thời điểm đó, điều này cho thấy cách mà mạng nơron tự tổ chức hoạt động.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả về mạng nơron tự tổ chức, và câu trả lời được gợi ý đã nêu đúng đặc điểm của loại mạng này, đó là tại một thời điểm chỉ có một tế bào nơron hoặc một nhóm nơron cục bộ đáp ứng với đầu vào. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất với câu hỏi.
cau hoi dung: question='Mạng nơron tự tổ chức được mô tả như thế nào trong nội dung đã cho?' options=['Là mạng chỉ có một lớp đầu vào và không có trọng số', 'Là mạng mà tại một thời điểm có một tế bào nơron hoặc nhóm nơron cục bộ đáp ứng với đầu vào', 'Là mạng yêu cầu người hướng dẫn để hoạt động hiệu quả', 'Là mạng chỉ sử dụng các hàm tuyến tính để xử lý thông tin'] answer='Là mạng mà tại một thời điểm có một tế bào nơron hoặc nhóm nơron cục bộ đáp ứng với đầu vào' citation='128\n \nCon người có khả năng sử dụng những kinh nghiệm quá khứ để thích nghi với những thay \nđổi của môi trường. Sự thích nghi đó không cần người hướng dẫn hoặc chỉ đạo từ bên ngoài. \nMạng nơron nhân tạo thực hiện theo nguyên lý đó gọi là mạng tự tổ chức. Kohonen đã nêu lên \nloại mạng với tên gọi đặc trưng là tự tổ chức. Trong mạng tự tổ chức, tại một thời điểm chỉ có một \ntế bào nơron hoặc một nhóm nơron cục bộ cho đáp ứng đối với đầu vào tại thời điểm đó. Mạng có \nmột lớp đơn như là một lớp đầu vào. Các trọng của mạng được mã hoá tương ứng với các mẫu \nđầu vào. Các ánh xạ đặc trưng được sử dụng nhiều trong nhận mẫu, điều khiển rô bốt và điều \nkhiển quá trình. Mức tác động của mỗi nơron được tính theo tích của véc tơ vào và véc tơ trọng \n \n \n \n \n      xi = UWi  \n \n \n \n              (5.36) \ntrong đó: xi là trạng thái (mức tác động) của nơron thứ i; Wi là véc tơ trọng của phần tử nơron thứ \ni; U là véc tơ vào. \n \nGần đây, vài mô hình mới như Fourier, Gabor ứng với các dạng hàm phi tuyến cũng được \nsử dụng. Những mạng này thường là tổ hợp của các loại mạng khác nhau hoặc là phát triển trên \ncác loại mạng có sẵn. \n5.2.4 Khả năng ứng dung của mạng nơ ron \nKhó khăn nhất trong ứng dụng mạng nơ ron nhân tạo trong mấy chục thập kỷ qua là hạn \nchế về mặt công nghệ và tốc độ tính toán. Cấu trúc mạng nơron đòi hỏi hàng nghìn, hàng vạn liên \nkết và số lượng tính toán lớn cho nên phức tạp cả về mặt cấu trúc (phần cứng) cả về mặt phần \nmềm. Ngày nay, với các chip với độ siêu tích hợp, tốc độ cao đã mở ra nhiều khả năng ứng dụng \nthực tế.  \n5.2.4.1  Các ứng dụng trong tin học \nTrong vài chục thập niên trở lại đây, nhiều bộ xử lý trên cơ sở nguyên lý mạng nơ ron đã được \nhình thành. Những chế thử đầu tiên của Hopfield trên cơ sở các mạch tương tự đã hình thành từ \nnhững năm 1982. Ngày nay nhiều IC trên cơ sở nguyên lý của mạng nơ ron đã được sản xuất. \nĐiển hình hiện nay đã có những hãng sản xuất các vi mạch với độ tích hợp cao được gọi là Bộ xử \nlý-nơron thay cho các bộ vi xử lý (kinh điển được dùng trong máy tính) chứa đến hàng trăm vạn \nphần tử tính toán-nơron và có khả năng ghép nối hàng chục bộ khác nhau. Các liên kết trong tính \ntoán theo kiểu nơron đã đạt đến hàng tỷ trong một thời điểm. Nhiều bộ chương trình phát triển xử \nlý theo kiểu nơ ron đã được bán ra thị trường để giải các bài toán tối ưu, xử lý tín hiệu, nhận dạng \ntiếng nói, chữ viết, nhận mẫu, dự báo, đặc biệt là dự báo tài chính. Những đặc trưng chính của ứng \ndụng này chủ yếu dựa trên các nguyên lý xử lý nơ ron theo tập mẫu thay vì xử lý từng bước của \nmáy tính kinh điển. Nói cách khác các xử lý mang tính song song. \n \n+ Nhận dạng. Nhiều kiến trúc và thuật toán theo kiểu nơron được dùng để nhận dạng cấu \ntrúc và tham số, đặc biệt là các mạng nơ ron truyền ngược. Chang, Zhang và Sami cho biết mạng \nHopfield cũng có thể kết hợp với mạng Gabor để nhận dạng hệ phi tuyến có những kết quả khả \nquan. Trong trường hợp này, mạng bao gồm ba lớp. Lớp thứ nhất gọi là bộ tạo hàm sử dụng mạng \nGabor để tạo hàm phi tuyến. Lớp thứ hai dùng mạng Hopfield để tối ưu các hệ số trọng chưa biết. \nLớp thứ ba được gọi là mạng điều khiển để tính sai số ước lượng và điều khiển hoạt động của các \nlớp mạng thứ nhất và lớp thứ hai. Hệ không yêu cầu phải ổn định tiệm cận mà chỉ cần các đầu \nvào-ra giới hạn và ổn định đối với các kết quả được coi là hợp lý theo miền vào-ra lớn. Thành \ncông của phương pháp ở chỗ đã đạt được lý luận của phương pháp và cho kết quả mô phỏng. Các \nứng dụng này đang mở ra một tương lai phát triển của các máy tính thế hệ thứ năm: thế hệ máy \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=126 idx_doc=125
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 36



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả lớp ngữ pháp nào có khả năng phát sinh ngôn ngữ anbn?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Ngữ pháp phi ngữ cảnh
Option 2: Ngữ pháp thông thường
Option 3: Ngữ pháp nhạy ngữ cảnh
Option 4: Ngữ pháp liệt kê đệ quy
Answer: Ngữ pháp phi ngữ cảnh
Citation: Ngữ pháp phi ngữ cảnh có khả năng phát sinh ngôn ngữ anbn, vì nó cho phép viết lại không đầu cuối ở bên phải trong bất kỳ ngữ cảnh nào, như đã được nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả lớp ngữ pháp có khả năng phát sinh ngôn ngữ anbn, và câu trả lời được gợi ý là 'Ngữ pháp phi ngữ cảnh', điều này hoàn toàn chính xác theo tài liệu. Tài liệu cũng chỉ ra rằng ngôn ngữ anbn có thể được phát sinh bởi ngữ pháp phi ngữ cảnh, nhưng không phải là ngữ pháp thông thường. Các đáp án khác cũng được liệt kê trong tài liệu, xác nhận rằng câu trả lời gợi ý là đúng và phù hợp với câu hỏi.
cau hoi dung: question='Mô tả lớp ngữ pháp nào có khả năng phát sinh ngôn ngữ anbn?' options=['Ngữ pháp phi ngữ cảnh', 'Ngữ pháp thông thường', 'Ngữ pháp nhạy ngữ cảnh', 'Ngữ pháp liệt kê đệ quy'] answer='Ngữ pháp phi ngữ cảnh' citation='92\n4.1.3 Khả năng phát sinh \nNgữ pháp hình thức có thể được phân loại bởi khả năng phát sinh của chúng: tập các ngôn \nngữ mà chúng có thể trình bày. Chomsky (1957) mô tả bốn lớp của ngữ pháp hình thức suy luận. \nCác lớp này được sắp xếp trong một trật tự thứ bậc, trong đó mỗi lớp có thể được mô tả bởi ít nhất \nmột lớp có quyền, giống như việc có thể thêm vài ngôn ngữ vào. Dưới đây là danh sách các lớp \ntheo cấp bậc từ trên xuống dưới: \nNgữ pháp đệ quy liệt kê sử dụng quy luật không giới hạn: kích thước của quy luật viết lại \ncó thể chứa số lượng bất kì biểu tượng terminal và không đầu cuối. Ngữ pháp này là tương đương \nvới máy Turing. \nNgữ pháp nhạy ngữ cảnh được giới hạn chỉ ở bên phải và phải chứa ít nhất một số biểu \ntượng ở phía bên trái. Tên “nhạy ngữ cảnh” xuất phát từ một thực tế là một quy luật tương tự như \nASB→AXB có nghĩa là một S có thể được viết lại như là một X trong ngữ cảnh của một A có \ntrước và một sự kéo theo B. \nTrong ngữ pháp phi ngữ cảnh ở phía bên phải chứa một biểu tượng nonterminal đơn. Vì \nvậy mỗi quy luật cho phép viết lại không đầu cuối ở bên phải trong bất kì ngữ cảnh nào.  \nNgữ pháp thông thường là lớp được giới hạn nhất. Ngữ pháp thông thường là tương \nđương trong máy có số trạng thái hạn chế. Chúng không  phù hợp lắm cho ngôn ngữ lập trình, vì \nchúng không thể xây dựng được cách trình bày giống như sự cân bằng của dầu mở và đóng ngoặc \nđơn. \nĐể đưa ra cho các bạn một ý tưởng ngôn ngữ nào được điều khiển bởi lớp nào, ngôn ngữ \nanbn (một chuỗi n bản sao của a kéo theo bởi một số lượng tương tự của b) có thể được phát sinh \nbởi ngữ pháp phi ngữ cảnh, nhưng không phải là ngữ pháp thông thường. Ngôn ngữ đó yêu cầu \nmột ngữ pháp nhạy ngữ cảnh, trong khi ngôn ngữ a*b* (một sự phối hợp của bất kì một số của a \ntheo sau bởi một số bất kì của b) có thể được mô tả bởi một trong 4 lớp trên. Một bảng tóm tắt của \n4 lớp: \n \nLớp \nQuy luật ví dụ \nNgôn ngữ ví dụ \nNgữ pháp liệt kê đệ quy \nAB→C \nBất kì \nNhạy ngữ cảnh \nAB→BA \nanbncn \nNgữ cảnh tự do  \nS→ a S b \nanbn \nThông thường \nS→ a S \na*b*  \n \n \nVấn đề nói và nghe. \nMục đích: Bằng cách này hay cách khác người nói quyết định rằng sẽ có một số cái mà nó \nđáng để nói với người nghe. Điều này thường bao gồm cả đức tin và mục đích của người nghe vì \nthế khi nói sẽ có sự tác dụng ao ước. Trong ví dụ của chúng ta người nói có mục đích cho người \nnghe biết wumpus không còn sống nữa. \nSự phát sinh: Người nói sử dụng kiến thức về ngôn ngữ để quyết định xem nói như thế \nnào. Trong nhiều cách sẽ khó khăn hơn việc lật ngược vấn đề của sự hiểu biết (ví dụ như phân \ntích và chuyển thành nghĩa). Sự phát sinh này không bị ép nhiều như sự hiểu biết trong trí tuệ \nnhân tạo, chủ yếu bởi vì con người chúng ta hay băn khoăn khi nói với máy, nhưng lại không bị \nkích động khi chúng nói lại. Bây giờ chúng ta chỉ cho rằng người nghe có thể chọn từ “the \nwumpus is dead”. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=90 idx_doc=89
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 37



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách mà một agent nhận biết môi trường xung quanh nó?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Thông qua các cảm biến và tác động lại môi trường
Option 2: Chỉ dựa vào các bộ phận phản ứng
Option 3: Bằng cách sử dụng trí tuệ nhân tạo
Option 4: Chỉ thông qua các cảm giác của con người
Answer: Thông qua các cảm biến và tác động lại môi trường
Citation: Câu trả lời này đúng vì nội dung đã nêu rõ rằng một agent nhận biết môi trường thông qua các cảm biến và tác động lại môi trường thông qua các bộ phận phản ứng lại kích thích.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách mà một agent nhận biết môi trường xung quanh, và câu trả lời được gợi ý đã nêu rõ rằng agent nhận biết thông qua các cảm biến và tác động lại môi trường, điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng liên quan đến cách mà agent tương tác với môi trường, nhưng chỉ có câu trả lời được gợi ý là chính xác và đầy đủ nhất. Do đó, câu trả lời được gợi ý là đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Mô tả cách mà một agent nhận biết môi trường xung quanh nó?' options=['Thông qua các cảm biến và tác động lại môi trường', 'Chỉ dựa vào các bộ phận phản ứng', 'Bằng cách sử dụng trí tuệ nhân tạo', 'Chỉ thông qua các cảm giác của con người'] answer='Thông qua các cảm biến và tác động lại môi trường' citation='146\nMột “agent” là bất kỳ vật gì đó mà nó có thể nhận biết (perceiving) môi trường \n(environment) quanh nó thông qua các cảm biến (sensor) và tác động lại môi trường thông qua \ncác bộ phận phản ứng lại kích thích (effector). Một cơ thể người có đôi mắt, đôi tai và các bộ phận \nkhác là các cảm biến; đôi bàn tay, đôi chân và các phần cơ thể khác là các cơ quan phản ứng lại \nkích thích. Một robot camera và tia hồng ngoại nhìn thấy được là các sensor; các motor khác nhau \nlà các các bộ phận phản ứng lại kích thích. Một phần mềm đã mã hoá các xâu bit xem như là các \nđối tượng tri giác và các hành động của nó. Một agent nói chung được mô tả: \nMục đích của chúng ta trong cuốn sách này là thiết kế các agent sao cho chúng làm việc \ntốt trong môi trường của chúng. Trước tiên, chúng ta sẽ làm rõ ràng hơn một chút về cái ý “việc \ntốt” vừa nói trên. Sau đó, chúng ta sẽ nói về các cách khác nhau thiết kế các agent hoàn thiện (đó \nchính là câu trả lời cho dấu ? trong hình 5.15). Chúng ta thảo luận một vài nguyên lý chung được \nsử dụng thiết kế các agent trình bày trong cuốn sách này. Quan trọng nhất đó là nguyên lý để thiết \ncác agent phải hiểu biết các sự việc. Cuối cùng, chúng ta chỉ ra sự gắn liền giữa một agent và một \nmôi trường như thế nào, và chỉ ra một vài loại môi trường. \n5.5.2. Hoạt động của các Agent \nMột agent có lý trí (rational agent) là agent làm các việc theo lẽ phải. Hiển nhiên, điều đó \ntốt hơn là làm việc sai trái, vậy điều đó có có ý nghĩa là gì. Như là một sự đánh giá không được \nchính xác lắm, chúng ta nói rằng hành động đúng là lý do agent thành công hơn. Điều đó dẫn đến \nvấn đề chúng ta phải đánh giá sự thành công của agent như thế nào (how) và khi nào (when). \nTiêu chuẩn đánh giá sự thực hiện (Performance Measure) \nChúng ta sử dụng thuật ngữ tiêu chuẩn đánh giá sự thực hiện cho tiêu chuẩn how − tiêu \nchuẩn xác định xem như thế nào là một agent là thành công. Hiển nhiên không có một tiêu chuẩn \nđánh giá cố định nào thích hợp cho tất cả các agent. Chúng ta có thể hỏi agent theo quan điểm chủ \nquan nó hạnh phúc như thế nào với sự thực hiện của chính nó, nhưng một vài agent không thể trả \nlời, và một vài agent khác lừa dối chính chúng. (Con người ai cũng biết câu chuyện “con cáo và \nchùm nho xanh” – các con cáo nói rằng chúng không thực sự muốn điều đó sau khi họ không \nthành công trong việc dành lấy nó). Vì vậy, chúng ta đòi hỏi một tiêu chuẩn đánh giá sự thực hiện \nkhách quan áp đặt bởi một số chuyên gia. Nói cách khác, chúng ta như là người quan sát thiết lập \nmột chuẩn để cho nó thành công trong một môi trường và sử dụng nó để đánh giá sự thực hiện của \ncác agent. \nCho một ví dụ, xem xét trường hợp một agent được hỗ trợ để hút bụi bẩn sàn nhà. Một \ntiêu chuẩn đánh giá hiệu suất đáng tin cậy có thể là số lượng bụi bẩn làm sạch trong một ca làm \nviệc 8 giờ. Một đánh giá hiệu suất phức tạp hơn có thể là số lượng điện tiêu thụ và mức độ tiếng \nồn phát ra. Đánh giá hiệu suất thứ ba có thể đưa ra điểm số cao hơn cho một agent không chỉ làm \nsạch sàn nhà một cách yên tĩnh và hiệu quả mà còn nhận ra thời gian nghỉ cuối tuần.1 \nTiêu chuẩn when để đánh giá sự thực hiện cũng quan trọng. Nếu chúng ta đánh giá xem \ncó bao nhiêu bụi bẩn agent làm sạch trong giờ đầu tiên trong ngày, chúng ta có thể thoả mãn với \ncác agent khởi động nhanh (thậm chí chúng làm ít hoặc không làm sau thời điểm đó), và không \nhài lòng với những agent làm việc hợp lý. Vì vậy, chúng ta muốn đánh giá sự thực hiện trên toàn \nthời gian hoạt động, đó là một ca làm việc 8 giờ hoặc thời gian tồn tại của agent. \n                                                 \n1 Ở đây có một nguy cơ cho những người thiết lập các tiêu chuẩn đánh giá : bạn thường phải đưa cái điều bạn \nyêu cầu. Đó là, nếu bạn đánh giá sự thành công bởi số lượng bụi bẩn đã làm sạch, thì một vài agent khôn ngoan \nsẽ bị băt buộc phải thu gom một vật bẩn to nặng trong buổi sáng, nhanh chóng dọn sạch sẽ, và được cho điểm tốt \ncho của sự thực hiện. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=144 idx_doc=143
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 38



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Bạn hãy xác định những vấn đề chưa được giải quyết trong trí tuệ nhân tạo được nêu trong nội dung?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Sự không bình thường trong không gian
Option 2: Các chương trình AI không hoạt động
Option 3: Các lỗi trong nhận biết tiếng nói
Option 4: Các định nghĩa về AI và sự phát triển của nó
Answer: Các định nghĩa về AI và sự phát triển của nó
Citation: Trong nội dung, chương này đưa ra các định nghĩa về AI và thiết lập lại các cơ sở của nó, đó là sự phát triển. Điều này cho thấy rằng các vấn đề chưa được giải quyết trong trí tuệ nhân tạo liên quan đến việc hiểu rõ hơn về AI và sự phát triển của nó.
Keyword: True
Danh gia cau hoi....
Lien quan: no
Giai thich: Câu hỏi yêu cầu xác định những vấn đề chưa được giải quyết trong trí tuệ nhân tạo, nhưng câu trả lời được gợi ý chỉ đề cập đến các định nghĩa về AI và sự phát triển của nó, không nêu rõ các vấn đề cụ thể. Các đáp án khác cũng không được đề cập trong câu trả lời gợi ý, do đó không đáp ứng yêu cầu của câu hỏi.
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:remember...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Bạn có thể mô tả những vấn đề chưa được giải quyết trong trí tuệ nhân tạo được nêu trong nội dung không?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Vấn đề phân tích dữ liệu từ tàu không gian
Option 2: Vấn đề về tốc độ và bộ nhớ của máy tính
Option 3: Vấn đề nhận diện tiếng nói của chương trình PEGASUS
Option 4: Vấn đề về cách xử lý thông tin của con người và động vật
Answer: Vấn đề nhận diện tiếng nói của chương trình PEGASUS
Citation: Câu trả lời này đúng vì trong nội dung có đề cập rằng chương trình PEGASUS gặp khó khăn với việc nhận diện tiếng nói, cụ thể là có hơn 10 từ bị sai trong quá trình hiểu hành động nói của người.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả những vấn đề chưa được giải quyết trong trí tuệ nhân tạo, và câu trả lời được gợi ý về vấn đề nhận diện tiếng nói của chương trình PEGASUS là một trong những vấn đề đó. Ngoài ra, các đáp án khác cũng liên quan đến các vấn đề chưa được giải quyết trong AI như phân tích dữ liệu từ tàu không gian, tốc độ và bộ nhớ của máy tính, và cách xử lý thông tin của con người và động vật. Tất cả đều có thể tìm thấy trong tài liệu.
cau hoi dung: question='Bạn có thể mô tả những vấn đề chưa được giải quyết trong trí tuệ nhân tạo được nêu trong nội dung không?' options=['Vấn đề phân tích dữ liệu từ tàu không gian', 'Vấn đề về tốc độ và bộ nhớ của máy tính', 'Vấn đề nhận diện tiếng nói của chương trình PEGASUS', 'Vấn đề về cách xử lý thông tin của con người và động vật'] answer='Vấn đề nhận diện tiếng nói của chương trình PEGASUS' citation='12\n1.5  NHỮNG VẤN ĐỀ CHƯA ĐƯỢC GIẢI QUYẾT TRONG TRÍ TUỆ \nNHÂN TẠO \nKiện tướng cờ vua quốc tế Amold Denker, nghiên cứu các quân cờ trên bàn cờ trước mặt \nông ta. Ông ta không hy vọng là hiện thực: ông phải từ bỏ cuộc chơi. Đối thủ của ông, HITECH, \nđã trở thành chương trình máy tính đầu tiên đánh thắng một kiện tướng cờ trong một ván chơi \n(Berliner, 1989). \n“Tôi muốn đi từ Boston tới San Francisco” một người du lịch nói trong micro. “Bạn sẽ đi \nvào thời gian nào?” là câu hỏi lại. Người du lịch giải thích rằng cô ấy muốn đi vào ngày 20 tháng \n10, trên chuyến rẻ nhất có thể, và trở về vào ngày Chủ nhật. Một chương trình giao tiếp bằng tay \ncó thể hiểu được hành động nói của người là PEGASUS, đó là kết quả khiêm tốn dùng để đặt chỗ \nchuyến đi du lịch với giá 894 dollar bằng xe khách đường dài. Mặc dù vậy chương trình nhận biết \ntiếng nói có quá 10 từ bị sai, nó có thể là sự tổng hợp từ các lỗi nhỏ bởi vì sự hiểu của nó từ các \nhội thoại là đưa vào cùng một lúc (Zue 1994).      \nMột phân tích từ nơi điều khiển các nhiệm vụ của phòng thí nghiệm Jet Propulsion bắt đầu \nxu hướng thanh toán. Một thông báo màu đỏ xuất hiện trên màn hình chỉ ra rằng “sự không bình \nthường” với người du hành trên tàu không gian, đó là một nơi nào đó trong vùng xung quanh sao \nHải vương. May thay, vấn đề phân tích có thể đúng từ mặt đất. Những người điều khiển tin tưởng \nrằng có vấn đề phải được bỏ qua đó là MARVEL, một hệ chuyên gia thời gian thực có các màn \nhình, dòng dữ liệu thô được chuyển từ tàu không gian, các công việc điều khiển chương trình và \nphân tích cảnh báo đối với những vấn đề nghiêm trọng  \nTỔNG KẾT \nChương này đưa ra các định nghĩa về AI và thiết lập lại các cơ sở của nó,  đó là sự phát \ntriển. Một số các điểm quan trọng đáng lưu ý như sau: \nNgười ta nghĩ về AI có khác nhau. Có hai câu hỏi quan trọng đó là: bạn có quan tâm đến suy \nnghĩ hoặc hành vi? và Bạn có muốn hình mẫu con người hoặc từ một ý tưởng chuẩn mực? \nCác nhà triết học (quay trở lại năm 400 tr.CN) đưa ra ý kiến cho rằng não bộ cũng như một \nchiếc máy, rằng nó được điều khiển bằng tri thức đã được mã hoá, và ý nghĩ có thể mang theo thói \nquen giúp đỡ những hành động đúng đắn. \nMột số nhà toán học đã cung cấp những công cụ các lệnh tính toán logic chắc chắn cũng tốt \nnhư là không chắc chắn, các lệnh không chính xác. Họ cũng đặt cơ sở làm việc cho các thuật toán. \nNgành tâm lý học củng cố thêm ý tưởng rằng loài người và động vật có thể đưa ra cách xử \nlý thông tin máy móc. Ngành ngôn ngữ học trình bày rằng ngôn ngữ đủ để dùng trong mô hình \nnày.   \nNgành công nghiệp máy tính cung cấp các ứng dụng của AI. Các chương trình AI có xu \nhướng khá lớn, và họ không làm việc được nếu máy tính không có đủ tốc độ và bộ nhớ cần thiết.    \nLịch sử của AI có các chu kì thành công, tối ưu hoá đặt không đúng chỗ, và kết quả dẫn đến \ngiảm lòng nhiệt tình và chi phí. Cũng đã có những bước lặp chỉ ra được các cách tiếp cận mới và \ntrau dồi có hệ thống trong số các cách đó.   \nNhững tiến triển gần đây trong học thuyết căn bản về sự thông minh đã tiến bộ cùng với khả \nnăng của các hệ thống thực tế. \nNhững điểm chú ý về tiểu sử và lịch sử \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=10 idx_doc=9
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 39



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định ai là người đã công bố thuật toán Back-propagation lần đầu tiên?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Bryson và Ho
Option 2: Geoff Hinton và David Rumelhart
Option 3: Austin Tate và David Chapman
Option 4: Peter Cheeseman và Allen Newel
Answer: Bryson và Ho
Citation: Đáp án đúng là 'Bryson và Ho' vì trong nội dung đã nêu rõ rằng thuật toán Back-propagation được công bố lần đầu vào năm 1969 bởi Bryson và Ho.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định ai là người đã công bố thuật toán Back-propagation lần đầu tiên, và câu trả lời được gợi ý là 'Bryson và Ho', điều này hoàn toàn chính xác và có thể tìm thấy trong tài liệu. Các đáp án khác cũng liên quan đến các nhân vật trong lĩnh vực AI nhưng không phải là người công bố thuật toán này. Do đó, câu trả lời được gợi ý đúng với câu hỏi và đúng hơn các đáp án khác.
cau hoi dung: question='Hãy xác định ai là người đã công bố thuật toán Back-propagation lần đầu tiên?' options=['Bryson và Ho', 'Geoff Hinton và David Rumelhart', 'Austin Tate và David Chapman', 'Peter Cheeseman và Allen Newel'] answer='Bryson và Ho' citation='11\nlượng lớn các nơ ron đơn giản đã có thể coi như một số nguyên tử trong chất rắn. Các nhà vật lý \nhọc như Hopfield (1982) đã sử dụng các kĩ thuật cơ học thống kê dẫn tới các ý tưởng thụ thai \nchéo quan trọng. Các nhà triết học David Rumelhart và Geoff Hinton nghiên cứu các mẫu mạng \nnơ ron trí nhớ. Vào những năm 1980, có ít nhất bốn nhóm khác nhau nghiên cứu lại thuật toán \nBack-propagation. Thuật toán này được công bố lần đầu vào năm 1969 bởi Bryson và Ho. Thuật \ntoán được áp dụng rất nhiều trong khoa học máy tính và tâm lý học, và phổ biến kết quả trong \ncuốn “xử lý phân tán song song” (Rumelhart và McClelland, 1986). \nNhững năm gần đây, chúng ta đã chứng kiến sự thay đổi rất lớn trong nội dung và phương \npháp nghiên cứu AI. Nó trở nên phổ biến khi dựa trên các lý thuyết có sẵn. Trong những năm \n1970, một số lớn các kiến trúc và các phương pháp đã buộc phải thử. Rất nhiều trong số này, thậm \ntrí là ad hoc và fragile và được tượng trưng ở một vài ví dụ được chọn là đặc biệt. Trong những \nnăm gần đây, các phương pháp dựa trên mô hình Markov ẩn (HMMs) đã thống trị lĩnh vực này, \nhai khía cạnh của HMMs có liên quan đến những vấn đề bàn luận  hiện tại. Đầu tiên, chúng được \ndựa trên lý thuyết toán học chính xác. Điều này cho phép các nhà nghiên cứu tiếng nói xây dựng \ncác kết quả toán học của một vài thập kỉ đã được phát triển ở một số lĩnh vực khác. Thứ hai, \nchúng đã được sinh ra bởi một quá trình xử lý trên tập dữ liệu tiếng nói. Chắc chắn rằng thực hiện \nđó là dạng thô, và trong các trắc nghiệm HMMs khắt khe không rõ ràng đã tiến triển đều đặn.     \nLĩnh vực khác xem ra có lợi ích từ sự chính thức hoá là lập kế hoạch. Công việc sớm được \nthực hiện bởi Austin Tate (1977), sau đó là David Chapman (1987) đã có kết quả trong sự tổng \nhợp của các chương trình lập kế hoạch vào một khung làm việc đơn giản. Đã có một vài lời \nkhuyên rằng nên xây dựng trên mỗi cái khác nhau hơn là bắt đầu từ con số không tại mỗi thời \nđiểm. Kết quả của các hệ thống lập kế hoạch đó chỉ thực sự tốt trong các thế giới thu hẹp, trong \nnăm 1970 nhiệm vụ lập lịch cho công việc của nhà máy. Xem Chương 11 và 12 để biết thêm chi \ntiết. \nCuốn Tranh luận theo xác suất trong các hệ thống thông minh đã đánh dấu một sự tán \nthưởng của lý thuyết quyết định và xác suất trong AI, tiếp theo sự hồi sinh của một sự thu nhỏ lí \nthú theo bài báo “Trong biện hộ của xác suất” của Peter Cheeseman (1985). Tin tưởng rằng hình \nthức mạng là phát minh đã cho phép tranh luận hiệu quả về chứng minh của sự phối hợp không \nchắc chắn. Cách tiếp cận lớn này vượt qua được vấn đề các hệ thống lập luận có khả năng trong \nnhững năm 1960 đến 1970... Chương 14 tới 16 bàn tới lĩnh vực này. \nCũng tương tự như cuộc cách mạng trong lĩnh vực người máy, khả năng của máy tính, máy \nhọc (bao gồm cả các mạng neural) và sự trình diễn tri thức. Một cách hiểu tốt nhất của các vấn đề \nvà sự phức tạp các thuộc tính, phối hợp cùng với sự ngụy biện đã gia tăng trong toán học, đã có sự \nchỉ đạo về lịch nghiên cứu công việc có khả năng và các phương pháp dạng thô. Có lẽ được \nkhuyến khích bởi sự tiến triển trong giải quyết các vấn đề con của AI, các nhà nghiên cứu đã bắt \nđầu tìm kiếm “yếu tố đầy đủ” cho vấn đề. Công việc của Allen Newel, John Laird và Paul \nRosenbloom ở SOAR (Newel, 1990; Laird 1987) là những ví dụ hiểu biết tốt nhất của một yếu tố \nhoàn chỉnh về kiến trúc trong AI. Cũng gọi là hành động có mục đích “trong những hoàn cảnh xác \nđịnh” của các yếu tố đưa vào trong các môi trường thực tế với các đầu vào cảm biến liên tục. \nNhiều kết quả lý thú đã được tìm thấy trong công việc; bao gồm sự thực rằng trước đó các lĩnh \nvực con riêng biệt của AI cần tái tạo lại cái gì đó khi mà các kết quả của họ là cùng chỗ trong thiết \nkế một yếu tố riêng rẽ.       \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=9 idx_doc=8
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 40



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định xác suất Pr(A) trong trường hợp các sự kiện Ai là độc lập.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Pr(A) = Pr(A1) * Pr(A2) * ... * Pr(An)
Option 2: Pr(A) = max(Pr(A1), Pr(A2), ..., Pr(An))
Option 3: Pr(A) = Pr(A1) + Pr(A2) + ... + Pr(An)
Option 4: Pr(A) = min(Pr(A1), Pr(A2), ..., Pr(An))
Answer: Pr(A) = Pr(A1) * Pr(A2) * ... * Pr(An)
Citation: Đáp án đúng là Pr(A) = Pr(A1) * Pr(A2) * ... * Pr(An) vì công thức này được áp dụng khi các sự kiện Ai là độc lập, như đã nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định xác suất Pr(A) trong trường hợp các sự kiện Ai là độc lập, và câu trả lời được gợi ý đúng với công thức tính xác suất cho các sự kiện độc lập, tức là Pr(A) = Pr(A1) * Pr(A2) * ... * Pr(An). Các đáp án khác cũng liên quan đến các công thức khác nhau để tính Pr(A), nhưng chỉ có đáp án gợi ý là đúng cho trường hợp các sự kiện độc lập, do đó câu trả lời được gợi ý là chính xác.
cau hoi dung: question='Xác định xác suất Pr(A) trong trường hợp các sự kiện Ai là độc lập.' options=['Pr(A) = Pr(A1) * Pr(A2) * ... * Pr(An)', 'Pr(A) = max(Pr(A1), Pr(A2), ..., Pr(An))', 'Pr(A) = Pr(A1) + Pr(A2) + ... + Pr(An)', 'Pr(A) = min(Pr(A1), Pr(A2), ..., Pr(An))'] answer='Pr(A) = Pr(A1) * Pr(A2) * ... * Pr(An)' citation='74\nPr(B) = Pr(B⏐A)Pr(A)  \n \n(3) \ntrong đó Pr(B), Pr(A) là xác suất của sự kiện B, A tương ứng (tức là mức độ chắc chắn của B, A \ntương ứng), còn Pr(B⏐A) là xác suất có điều kiện của B khi A đã xảy ra, ở đây Pr(B⏐A) là mức \nđộ chắc chắn của luật  A ⇒ B, tức là bằng C. \nTrong trường hợp luật có n (n > 1) điều kiện, tức là các luật dạng (1), ta xem A = \nn\nA\nA\n∧\n∧…\n1\n. \nTrong trường hợp này, mức độ chắc chắn của A, Pr(A) được tính bằng các phương pháp khác \nnhau, tuỳ thuộc vào các sự kiện Ai (i = 1, ..., n) là độc lập hay phụ thuộc. \nGiả sử các sự kiện Ai (i = 1, ..., n) là độc lập, khi đó \nPr(A) = Pr(A1) ... Pr(An) \n \n(4) \nVí dụ. Giả sử cơ sở tri thức của hệ chứa luật sau \n  IF    1.  X có tiền án, và \n \n2.  X có thù oán với nạn nhân Y, và \n \n3.  X đưa ra bằng chứng ngoại phạm sai \n  THEN  X là kẻ giết Y. \nvới mức độ chắc chắn 90%. \nGiả sử ta có các sự kiện \nHung có tiền án, với mức độ chắc chắn là 1. \nHung có thù oán với nạn nhân Meo, với mức độ chắc chắn là 0,7. \nHung đưa ra bằng chứng ngoại phạm sai, với mức độ chắc chắn là 0,8. \nTừ các sự kiện và luật trên, ta có \nPr(A) = 1.0,7.0,8 = 0,56 \nPr(B) = 0,9.0,56 = 0,504 \nNhư vậy mức độ chắc chắn của kết luận “Hung là kẻ giết Meo” là 50, 4%. \nCông thức (4) chỉ áp dụng cho các sự kiện A1, ..., An là độc lập (tức sự xuất hiện của sự kiện này \nkhông ảnh hưởng gì đến sự xuất hiện của các sự kiện khác). Nếu các sự kiện A1, ..., An là phụ \nthuộc, ta có thể tính mức độ chắc chắn của điều kiện của luật, A = \nn\nA\nA\n∧\n∧…\n1\n, theo công thức \nsau: \nPr(A) = min (Pr(A1), ..., Pr(An)) \n \n(5) \nChẳng hạn, với các thông tin trong ví dụ trên, từ công thức (5) ta có \nPr(A) = min(1, 0,7, 0,8) = 0,7 \nDo đó  \nPr(B) = 0,9. 0,7 = 0,63 \nNgoài công thức (5), người ta còn đưa ra các phương pháp khác để tính mức độ chắc chắn Pr(A), \nkhi mà A = \nn\nA\nA\n∧\n∧…\n1\n và các A1, ..., An không độc lập. \n3.5.6.5.4 Biểu diễn tri thức bằng mạng ngữ nghiã \n \nMạng ngữ nghĩa là một phương pháp biểu diễn tri thức dễ hiểu nhất. Phương pháp biểu \ndiễn dựa trên đồ thị, trong đó đỉnh là là các đối tượng (hay khái niệm) còn các cung là là các mối \nquan hệ giữa các đói tượng (họặc khái niệm) đó. \n \nVí dụ 1: giữa các đối tượng và khái niệm: chích, chim, tổ, cánh, hótcó ccác quan hệ như \nhình dưới đây \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=72 idx_doc=71
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 41



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả các thành phần chính của một hệ hỗ trợ ra quyết định (DDS) bao gồm những gì?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Dữ liệu, mô hình, thành phần đối thoại
Option 2: Chỉ có dữ liệu và mô hình
Option 3: Chỉ có mô hình và thành phần đối thoại
Option 4: Chỉ có thành phần đối thoại và người ra quyết định
Answer: Dữ liệu, mô hình, thành phần đối thoại
Citation: Câu trả lời đúng là "Dữ liệu, mô hình, thành phần đối thoại" vì đây là ba thành phần chính của một hệ hỗ trợ ra quyết định (DDS) được nêu rõ trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả các thành phần chính của một hệ hỗ trợ ra quyết định (DDS), và câu trả lời được gợi ý đã nêu đúng các thành phần này là dữ liệu, mô hình và thành phần đối thoại. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và đầy đủ hơn so với các đáp án khác.
cau hoi dung: question='Mô tả các thành phần chính của một hệ hỗ trợ ra quyết định (DDS) bao gồm những gì?' options=['Dữ liệu, mô hình, thành phần đối thoại', 'Chỉ có dữ liệu và mô hình', 'Chỉ có mô hình và thành phần đối thoại', 'Chỉ có thành phần đối thoại và người ra quyết định'] answer='Dữ liệu, mô hình, thành phần đối thoại' citation='83\nTên \nL\x1fnh v\x1fc \x1fng d\x1fng \nGADS \nGeodata \nAnalysis \nDisplay \nSystem \nPhân \ntích \nv\x1f \ncung \nc\x1fp \nt\x1fi \nnguyên đ\x1fa lý \n \nPMS \nPortfolio Management System \nT\x1f v\x1fn v\x1f qu\x1fn tr\x1f đ\x1fu t\x1f \nIRIS \nIndustrial \nRelations \nInformation \nPhân tích ch\x1ft l\x1f\x1fng v\x1f b\x1f trí \nnhân l\x1fc trong s\x1fn xu\x1ft \nPROJECTOR \nHo\x1fch đ\x1fnh k\x1f ho\x1fch t\x1fi chính \nIFPS \nInteractive Financial Planning \nSystem \nPhân tích t\x1fi chính, giá th\x1fnh, \ns\x1fn ph\x1fm \nBRANDAID \nPhân tích th\x1f tr\x1f\x1fng, ngân \nsách, qu\x1fng cáo \n \nHình 3.9: Một số hệ hỗ trợ ra quyết định \n \n3.7.2. Các thành phần của một hệ ra hỗ trợ quyết định \nMột cách hình dung về các thành phần của một hệ hỗ trợ ra quyết định (DDS – decision \nsupport system) (Hình 3.10) và quan hệ giữa chúng là sử dụng các khái niệm đối thoại (dialog), \ndữ liệu (data) mà mô hình (model). Đối với những người thiết kế hệ thống DDS cũng như những \nngười sử dụng hệ thống, điều quan trọng là hiểu được các thành phần này được thiết kế như thế \nnào. Người sử dụng cần phải biết có thể yêu cầu cái gì ở DDS. Người thiết kế phải biết được DDS \ncó thể cung cấp cái gì. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n                  Hình 3.10. các thành phần của một hệ hỗ trợ ra quyết định  \n \n \n \n \n \n \n \nDữ \nliệu \ngiao \ndịch \nTài  \nchính \n \nSản  \nxuất \n \nTiếp  \nthị \n \nNhân  \nsự \n \nCác  \nloại khác \nDữ liệu  \nnội \n(internal) \n \n \n \nDữ liệu dựa \nTrên tài liệu \n(document -\nbased) \n \n \nDữ liệu ngoại \n(external) \nMô hình  \nchiến lược \n \n \nMô hình \nchiến thuật \n \nMô hình \nhoạt đông \n \nMô hình các \nthủ tục \n(subroutine) \n \nHệ \nquản  \ntrị  \ncơ sở \ndữ \nliệu \nHệ  \nquản  \ntrị dựa \ntrên \nmô \nhình \nThành phần đối thoại \nNgười ra quyết định \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=81 idx_doc=80
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 42



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả sự khác biệt cơ bản giữa lập trình Prolog và lập trình truyền thống?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Lập trình Prolog sử dụng các câu lệnh để thực hiện hành động
Option 2: Lập trình Prolog mô tả vấn đề bằng các câu trong logic
Option 3: Lập trình truyền thống sử dụng logic để tìm câu trả lời
Option 4: Lập trình Prolog yêu cầu người lập trình phải viết thuật toán phức tạp
Answer: Lập trình Prolog mô tả vấn đề bằng các câu trong logic
Citation: Trong nội dung đã nêu rõ rằng sự khác biệt căn bản giữa lập trình Prolog và lập trình truyền thống là Prolog mô tả vấn đề bằng các câu trong logic, trong khi lập trình truyền thống dựa vào dãy lệnh để thực hiện các hành động.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả sự khác biệt giữa lập trình Prolog và lập trình truyền thống, và câu trả lời được gợi ý đã nêu rõ rằng lập trình Prolog mô tả vấn đề bằng các câu trong logic, điều này hoàn toàn chính xác và liên quan đến nội dung trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng không đúng với câu hỏi. Do đó, câu trả lời được gợi ý là đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Mô tả sự khác biệt cơ bản giữa lập trình Prolog và lập trình truyền thống?' options=['Lập trình Prolog sử dụng các câu lệnh để thực hiện hành động', 'Lập trình Prolog mô tả vấn đề bằng các câu trong logic', 'Lập trình truyền thống sử dụng logic để tìm câu trả lời', 'Lập trình Prolog yêu cầu người lập trình phải viết thuật toán phức tạp'] answer='Lập trình Prolog mô tả vấn đề bằng các câu trong logic' citation='88\nmôi trường làm việc, ..., song phần lớn các hệ này tương thích với Prolog-10, Prolog-10 được \ncông nhận như Prolog chuẩn. \nProlog đã được sử dụng như một công cụ phần mềm để phát triển các hệ thông minh. Nó đã được \náp dụng trong nhiều lĩnh vực trí tuệ nhân tạo: giải quyết vấn đề, các hệ chuyên gia, biểu diễn tri \nthức, lập kế hoạch, xử lý ngôn ngữ tự nhiên, học máy, ... \nTrong các ngôn ngữ lập trình truyền thống (chẳng hạn, Pascal, C, ...) một chương trình là một dãy \ncác lệnh mà máy cần thực hiện. Người lập trình để viết một chương trình trong các ngôn ngữ \ntruyền thống, phải dựa vào thuật toán đã có và cách biểu diễn dữ liệu để lập ra một dãy các lệnh \nchỉ dẫn cho máy cần phải thực hiện các hành động nào. \nĐiều khác nhau căn bản của lập trình Prolog so với lập trình truyền thống là: \n• \nTrong Prolog người lập trình mô tả vấn đề bằng các câu trong logic. \n• \nHệ sẽ sử dụng lập luận logic để tìm ra các câu trả lời cho vấn đề. \nDo đó một chương trình Prolog là sự đặc tả của một vấn đề. Vì lý do này Prolog là ngôn ngữ lập \ntrình khai báo (declarative language). Trong Prolog, chỉ được phép sử dụng các câu Horn, tức là \nmỗi câu hoặc là câu phân tử, hoặc là một luật nếu - thì mà các điều kiện của luật và kết luận của \nluật đều là câu phân tử. Một chương trình Prolog gồm một dãy các luật có dạng: \n                                                                A :- B1, ..., Bm \ntrong đó, m ≥ 0, A và Bi (i = 1, ..., m) là các câu phân tử. Luật trên được đọc là “A nếu B1 và ... và \nBm”. Nó là cách viết trong Prolog của logic mênh đề sau: \nA\nB\nB\nm ⇒\n∧\n∧…\n1\n \nTrong luật trên, A được gọi là đầu, danh sách các câu Bi (B1, ..., Bm) được gọi là thân của luật. \nNếu m=0, ký hiệu “:-” sẽ được bỏ đi, khi đó ta có câu phân tử A và nó được gọi là một sự kiện. \nVí dụ. Giả sử chúng ta biết các thông tin sau đây về An và Ba. \nAn yêu thích mọi môn thể thao mà cậu chơi. \nBóng đá là môn thể thao. \nBóng bàn là môn thể thao. \nAn chơi bóng đá. \nBa yêu thích mọi thứ mà An yêu thích. \nCác câu trên được chuyển thành một chương trình Prolog như sau \nlikes(an, X) :-  sport(X), plays(an, X) \nsport(football). \nsport(tennis). \nplays(an, football). \nlikes(ba, Y) :- likes(an, Y). \nVới chương trình Prolog trên (nó mô tả sở thích thể thao của An và Ba), ta có thể đặt ra các câu \nhỏi, chẳng hạn “An yêu thích cái gì ?”. Câu hỏi này được viết trong Prolog như sau. \n? - likes(an, X). \nKhi đưa vào một câu hỏi, hệ Prolog sẽ thực hiện quá trình suy diễn logic để tìm ra các câu trả lời \ncho câu hỏi. Chẳng hạn, với câu hỏi trên Prolog sẽ đưa ra câu trả lời: \nX = football \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=86 idx_doc=85
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 43



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định một công việc nào dưới đây có thể được máy tính giải quyết theo nghiên cứu tài liệu AI?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Dịch tiếng Anh sang tiếng Việt theo thời gian thực.
Option 2: Viết một bài thơ lãng mạn.
Option 3: Chơi cờ vua với một người bạn.
Option 4: Tổ chức một buổi tiệc sinh nhật.
Answer: Dịch tiếng Anh sang tiếng Việt theo thời gian thực.
Citation: Câu trả lời đúng là 'Dịch tiếng Anh sang tiếng Việt theo thời gian thực' vì đây là một trong những công việc mà máy tính có thể thực hiện hiệu quả theo nghiên cứu tài liệu AI.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định một công việc mà máy tính có thể giải quyết theo nghiên cứu tài liệu AI. Câu trả lời được gợi ý là 'Dịch tiếng Anh sang tiếng Việt theo thời gian thực', đây là một công việc mà máy tính có thể thực hiện và được nhắc đến trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp với yêu cầu của câu hỏi.
cau hoi dung: question='Hãy xác định một công việc nào dưới đây có thể được máy tính giải quyết theo nghiên cứu tài liệu AI?' options=['Dịch tiếng Anh sang tiếng Việt theo thời gian thực.', 'Viết một bài thơ lãng mạn.', 'Chơi cờ vua với một người bạn.', 'Tổ chức một buổi tiệc sinh nhật.'] answer='Dịch tiếng Anh sang tiếng Việt theo thời gian thực.' citation='14\nd. “một lĩnh vực nghiên cứu đó là xoay quanh các kĩ thuật tính toán, cho phép thực hiện các \ncông việc đòi hỏi thông minh thực sự khi có con người tham dự.” (Tanimoto, 1990) \ne. “một sự đầu tư rất lớn của trí tuệ của tự nhiên và các nguyên lí, các máy móc yêu cầu sự \nam hiểu hoặc tái tạo nó .” (Sharples , 1989) \nf. “Lợi ích của máy tính là làm được mọi thứ, xem nó như là thông minh.” (Rowe, 1988) \n2. Nghiên cứu tài liệu AI để tìm ra các công việc nào dưới đây có thể giải quyết được bằng \nmáy tính: \na. Trò chơi bóng bàn   \nb. Lái xe ở trung tâm Cairô \nc. Khám phá và chứng minh các lý thuyết toán học mới. \nd. Viết một truyện cười \ne. Đưa ra một lời khuyên khá hợp lý trong phạm vi liên quan đến luật pháp. \nf. Dịch tiếng Anh sang tiếng Việt theo thời gian thực.   \n3. Thực tế, hư cấu và dự đoán: \na. Tìm một bản công bố của một nhà triết học hoặc nhà khoa học có uy tín cho rằng hiệu quả \ncủa độ chắc chắn sẽ không bao giờ được trình diễn bởi máy tính, rằng ở đó bây giờ đã được \ntrình diễn. \nb. Tìm một công bố của một nhà khoa học về máy tính có uy tín cho rằng hiệu quả của độ đo \nchắc chắn được trình diễn bởi thời điểm từ khi nó hợp qui cách.  \nc. So sánh độ chính xác của những dự đoán trong các lĩnh vực khác nhau, chẳng hạn như y \nsinh, công nghệ nano, hoặc điện gia dụng. \n4. Cho rằng “những chiếc máy tính là không thông minh - chúng chỉ có thể làm được những gì \nmà lập trình viên bảo chúng” là câu lệnh phần trước thì đúng và hàm ý sau đó không đúng?  \n \n \n \n \n \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=12 idx_doc=11
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 44



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định phương pháp nào được sử dụng để phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn
Option 2: Phát hiện tiếng nói dựa trên hàm giả năng lượng
Option 3: Phát hiện tiếng nói dựa trên tỷ lệ vượt quá điểm không
Option 4: Phát hiện tiếng nói dựa trên độ dài khung
Answer: Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn
Citation: Câu trả lời đúng là 'Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn' vì đây là phương pháp được trình bày trong nội dung để xác định điểm bắt đầu và kết thúc của tiếng nói bằng cách sử dụng hàm năng lượng thời gian ngắn.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định phương pháp phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn, và câu trả lời được gợi ý đã cung cấp đúng thông tin này. Ngoài ra, các đáp án khác cũng bao gồm các phương pháp phát hiện tiếng nói khác nhau, phù hợp với nội dung tài liệu. Do đó, câu trả lời được gợi ý là chính xác và liên quan đến câu hỏi.
cau hoi dung: question='Xác định phương pháp nào được sử dụng để phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn?' options=['Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn', 'Phát hiện tiếng nói dựa trên hàm giả năng lượng', 'Phát hiện tiếng nói dựa trên tỷ lệ vượt quá điểm không', 'Phát hiện tiếng nói dựa trên độ dài khung'] answer='Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn' citation='104\ntiếng nói người ta thường chia tiếng nói thành nhiều đoạn có thời gian bằng nhau được gọi là \nkhung (frame), mỗi khung có độ dài từ 10 đến 30 ms. \nPhát hiện tiếng nói \nPhát hiện thời điểm bắt đầu, điểm kết thúc của tiếng nói (tách tiếng nói ra khỏi khoảng \nlặng) là phần cần thiết trong chương trình nhận dạng tiếng nói, đặc biệt trong chế độ thời gian \nthực. Phần này trình bày ba phương pháp phát hiện tiếng nói dựa trên hàm năng lượng thời gian \nngắn SE (Short Energy) và tỷ lệ vượt quá điểm không ZCR (Zero Crossing).  \n \na. Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn \n \nHàm năng lượng thời gian ngắn của tín hiệu tiếng nói được tính bằng cách chia tín hiệu \ntiếng nói thành các khung, mỗi khung dài N mẫu. Mỗi khung được nhân với một hàm cửa sổ \n)\n(n\nW\n. Nếu hàm cửa sổ bắt đầu xét ở mẫu thứ m thì hàm năng lượng thời gian ngắn\nm\nE được xác \nđịnh như sau: \n      \n[\n]\n∑\n−\n+\n=\n−\n=\n1\n2\n)\n(\n)\n(\nN\nm\nm\nn\nm\nm\nn\nW\nn\nx\nE\n                                                             \ntrong đó:  \n \n   n: là biến rời rạc;  \n \n   m: là số mẫu thử thứ m;  \n \n   N: là tổng số mẫu tiếng nói \nHàm cửa sổ \n)\n(n\nW\n thường dùng là hàm cửa sổ chữ nhật được xác định như sau: \n⎢⎣\n⎡\n≥\n−\n≤\n≤\n=\nN\nn\nN\nn\nn\nW\n0\n1\n0\n1\n)\n(\n                                                         \nThuật toán xác định điểm đầu và điểm cuối tiếng nói theo phương pháp này: \nBước 1: Với mỗi khung của tín hiệu, xác định hàm năng lượng thời gian ngắn\nm\nE tính theo (2-1). \nNếu \nm\nE >\nthreshold\nE\n (giá trị ngưỡng năng lượng cho trước) thì đánh dấu là điểm bắt đầu khung (kí \nhiệu là khung B). Ngược lại, xét khung kế tiếp cho đến khi xác định được khung B. Nếu không xác \nđịnh được B,  kết luận: đó không là tín hiệu tiếng nói.  \nBước 2: Tính\nm\nE của khung kế tiếp khung B cho đến khi\nm\nE <\nthreshold\nE\n thì dừng và đánh dấu \nkhung đó là điểm kết thúc của một từ (kí hiệu khung E). Sau khi xác định điểm bắt đầu và kết thúc, \ndựa vào độ dài thời gian đoạn âm thanh đó để thêm bước kiểm tra: tín hiệu đó có chắc là tiếng nói \nkhông? (một từ tiếng Việt nếu phát âm rõ ràng thường dài hơn 200 ms). \n \n \nb. Phát hiện tiếng nói dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không \n \nThuật toán này xác định điểm bắt đầu, điểm kết thúc của tín hiệu tiếng nói dựa trên hai đại \nlượng tĩnh của tín hiệu tiếng nói là: hàm giả năng lượng E (Pseudo-Energy) và tỷ lệ vượt quá \nđiểm không ZCR (Zero Crossing Rate) . \nTrong một dãy giá trị tín hiệu tiếng nói được rời rạc hóa, điểm không là điểm tại đó diễn \nra sự đổi dấu cường độ tín hiệu và được mô tả bởi:  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=102 idx_doc=101
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 45



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả các thành phần cơ bản của mạng nơ ron sinh vật và mạng nơ ron nhân tạo.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Mạng nơ ron sinh vật bao gồm các tế bào thần kinh và synapse, trong khi mạng nơ ron nhân tạo bao gồm các nút và trọng số.
Option 2: Mạng nơ ron sinh vật chỉ có một loại tế bào, còn mạng nơ ron nhân tạo không có trọng số.
Option 3: Mạng nơ ron sinh vật không có cấu trúc rõ ràng, còn mạng nơ ron nhân tạo rất phức tạp.
Option 4: Mạng nơ ron sinh vật và mạng nơ ron nhân tạo đều không có thành phần cơ bản nào cả.
Answer: Mạng nơ ron sinh vật bao gồm các tế bào thần kinh và synapse, trong khi mạng nơ ron nhân tạo bao gồm các nút và trọng số.
Citation: Câu trả lời đúng là mô tả các thành phần cơ bản của mạng nơ ron sinh vật và mạng nơ ron nhân tạo, trong đó mạng nơ ron sinh vật được cấu tạo từ các tế bào thần kinh và synapse, còn mạng nơ ron nhân tạo được cấu thành từ các nút và trọng số, điều này thể hiện rõ trong nội dung đã cung cấp.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả các thành phần cơ bản của mạng nơ ron sinh vật và mạng nơ ron nhân tạo, và câu trả lời được gợi ý đã cung cấp thông tin chính xác về các thành phần này. Câu trả lời đúng với câu hỏi và có thể tìm thấy trong tài liệu. Các đáp án khác cũng liên quan đến câu hỏi và có thể tìm thấy trong tài liệu, nhưng không chính xác bằng câu trả lời được gợi ý.
cau hoi dung: question='Mô tả các thành phần cơ bản của mạng nơ ron sinh vật và mạng nơ ron nhân tạo.' options=['Mạng nơ ron sinh vật bao gồm các tế bào thần kinh và synapse, trong khi mạng nơ ron nhân tạo bao gồm các nút và trọng số.', 'Mạng nơ ron sinh vật chỉ có một loại tế bào, còn mạng nơ ron nhân tạo không có trọng số.', 'Mạng nơ ron sinh vật không có cấu trúc rõ ràng, còn mạng nơ ron nhân tạo rất phức tạp.', 'Mạng nơ ron sinh vật và mạng nơ ron nhân tạo đều không có thành phần cơ bản nào cả.'] answer='Mạng nơ ron sinh vật bao gồm các tế bào thần kinh và synapse, trong khi mạng nơ ron nhân tạo bao gồm các nút và trọng số.' citation='162\n\x1f Quá trình ra quyết định bằng việc sử dụng sự hiểu biết là trọng tâm của Trí tuệ nhân \ntạo và thiết kế thành công agent. Điều này có nghĩa là việc biểu diễn sự hiểu biết là rất \nquan trọng. \n\x1f Một vài môi trường đòi hỏi khắt khe hơn rất nhiều. Các môi trường là “không thể \nđược”, “không tiền định”, “không phân đoạn”, “động” và “liên tục” là những thách \nthức lớn. \nCÂU HỎI VÀ BÀI TẬP \n1. Trinh bày mô hình: mạng nơ ron sinh vật và mạng nơ ron nhân tao. Nêu rõ các thành phần \ncơ bản của chúng. \n2. Trình bày thuật toán lan truyền ngược \n3. Ứng dụng mạng nơ ron trong xử lý tín hiệu. Trình bày ví dụ chứng tỏ mang BAM có khả \nnăng nhớ và khả năng tách lỗi. \n4. Trình bày các hàm thuộc (hàm thành viên) thường sử dụng trong logic mờ \n5. Trình bày các phép logic thường sử dụng trong logic mờ \n6. Trình bày các toán tử sau đây trong giải thuật di truyền \na) toán tử sinh sản \nb) toán tử ghép chéo \nc) toán tử đột biến \n7. Trình bày cấu trúc của Agent thông minh \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=160 idx_doc=160
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 46



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy định nghĩa tri thức sự kiện trong ngữ cảnh của khoa học máy tính.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[định nghĩa]
Option 1: Tri thức sự kiện là một khẳng định về một sự kiện hoặc hiện tượng trong một không gian hoặc thời gian nhất định.
Option 2: Tri thức sự kiện là một khái niệm không có liên quan đến hiện tượng nào.
Option 3: Tri thức sự kiện là thông tin không có tính chính xác.
Option 4: Tri thức sự kiện là tri thức về các quy trình xử lý công việc.
Answer: Tri thức sự kiện là một khẳng định về một sự kiện hoặc hiện tượng trong một không gian hoặc thời gian nhất định.
Citation: Câu trả lời đúng là "Tri thức sự kiện là một khẳng định về một sự kiện hoặc hiện tượng trong một không gian hoặc thời gian nhất định." Điều này được nêu rõ trong phần định nghĩa về tri thức sự kiện trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu định nghĩa tri thức sự kiện trong ngữ cảnh khoa học máy tính, và câu trả lời được gợi ý đã cung cấp định nghĩa chính xác. Các đáp án khác cũng bao gồm một định nghĩa đúng và một số đáp án không chính xác, cho thấy câu trả lời được gợi ý là đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Hãy định nghĩa tri thức sự kiện trong ngữ cảnh của khoa học máy tính.' options=['Tri thức sự kiện là một khẳng định về một sự kiện hoặc hiện tượng trong một không gian hoặc thời gian nhất định.', 'Tri thức sự kiện là một khái niệm không có liên quan đến hiện tượng nào.', 'Tri thức sự kiện là thông tin không có tính chính xác.', 'Tri thức sự kiện là tri thức về các quy trình xử lý công việc.'] answer='Tri thức sự kiện là một khẳng định về một sự kiện hoặc hiện tượng trong một không gian hoặc thời gian nhất định.' citation='43\nTrong ngữ cảnh của khoa học máy tính “dữ liệu là nguyên liệu thô để xử lý” là các con số, chữ \ncái, hình ảnh, âm thanh… Thông tin là tất cả những gì con người có thể cảm nhận qua các giác \nquan (chính xác, xem khái niệm Entropy là độ đo thông thông tin, đọ đo về các tin tức mới đối vói \nmột người nào đó). Nếu so về số lượng: dữ liệu nhiều hơn thông tin; thông tin nhiều hơn tri thức. \nChúng ta có thể mô tả chúng theo dạng hình chóp. \n3.3 PHÂN LOẠI TRI THỨC \nNgười ta thường phân loại tri thức thành các dạng sau: \nTri thức sự kiện  \nĐịnh nghĩa: Tri thức sự kiện là một khẳng địng về một sự kiện, hiện tượng hay một khái \nniệm nào đó trong một hoàn cảng không gian hoặc thời gian nhất định. \nVí dụ: khẳng định về hiện tượng: ”Mặt trời lặn ở phương Tây”. Khái niệm về: “tam giác \nđều: là tam giác có ba góc bằng nhau”. \nTri thức mô tả \nĐịnh nghĩa: Tri thức sự kiện là một khẳng địng về một sự kiện, hiện tượng hay một khái \nniệm nào đó trong một hoàn cảng không gian hoặc thời gian nhất định. \nVí dụ: khẳng định về hiện tượng: ”Mặt trời lặn ở phương Tây”. Khái niệm về: “tam giác \nđều: là tam giác có ba góc bằng nhau”. \nTri thức thủ tục \nĐịnh nghĩa: Tri thức thủ tục là tri thức mô tả cách giải quyết một vấn đề, quy trình xử lý \ncác công việc, lịch trình tiến hành các thao tác … Các dạng của tri thức thủ tục thường dùng là các \nluật, chiến lược, lịch trình \nVí dụ: IF xe máy không khởi động được \n            THEN đầu tiên kiểm tra bugi \nTri thức heuristic  \nĐịnh nghĩa: Tri thức heuristic là tri nông cạn do không đảm bảo hòan tòan chính xác \nhoặc tối ưu theo một nghĩa nào đó về cách giải quyết vấn đề. Tri thức heuristic thường được coi \nlà một mẹo nhằm dẫn dắt tiến trình lập luận  \nVí dụ: một số giải thuật tìm đường đi ngắn nhất, giải thuật  A* có thể được coi là lời giả \ncủa một vấn đề tốt nhưng chưa hẳn tối ưu. \nNgòai ra người ta còn phân chia ra tri thức mêta: tri thức tham chiếu đến  các tri thức \nkhác; tri thức có cấu trúc: tri thức về các quan hệ giữa các khái niệm, quan hệ giữa các đối \ntượng… \n  \n3.4. BẢN CHẤT CỦA CÁC TRI THỨC CHUYÊN GIA \n Chuyên gia (Expert).  \nNói chung, chuyên gia là là người có đầy đủ kỹ năng, kiến thức sâu (cả về luật và các sự \nkiện) về một lĩnh vực nào đó; người có thể làm những việc mà người khác ít khả năng làm được. \nHệ chuyên gia \n \nHệ chuyên gia (đơn giản) là chương trình máy tính có thể thực hiện các công việc, vấn đề  \ntrong  thuộc lĩnh vực hẹp ở mức tương tự như mộ người chuyên gia [19]. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=41 idx_doc=40
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 47



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy mô tả luật suy diễn nào cho phép suy ra kết luận từ một kéo theo và giả thiết của kéo theo?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Luật Modus Ponens
Option 2: Luật bắc cầu
Option 3: Luật Modus Tollens
Option 4: Luật loại bỏ hội
Answer: Luật Modus Ponens
Citation: Luật Modus Ponens cho phép chúng ta suy ra kết luận từ một kéo theo và giả thiết của kéo theo, theo công thức α ⇒ β, α, từ đó suy ra β.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả luật suy diễn cho phép suy ra kết luận từ một kéo theo và giả thiết của kéo theo, và câu trả lời được gợi ý là Luật Modus Ponens, điều này hoàn toàn chính xác. Luật Modus Ponens được mô tả trong tài liệu là một luật suy diễn cho phép suy ra kết luận từ một kéo theo và giả thiết của nó. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng Luật Modus Ponens là câu trả lời đúng nhất cho câu hỏi này.
cau hoi dung: question='Hãy mô tả luật suy diễn nào cho phép suy ra kết luận từ một kéo theo và giả thiết của kéo theo?' options=['Luật Modus Ponens', 'Luật bắc cầu', 'Luật Modus Tollens', 'Luật loại bỏ hội'] answer='Luật Modus Ponens' citation='49\n If P1 and....and Pm then Q. \nKhi m=0, n=1 câu Horn trở thành câu đơn Q, hay sự kiện Q. Nếu m>0, n=0 câu Horn trở thành \ndạng lP1 v......v lPm hay tương đương l(P1^...^ Pm). \nCần chú ý rằng, không phải mọi công thức đều có thể biểu diễn dưới dạng hội của các câu Horn. \nTuy nhiên trong các ứng dụng, cơ sở tri thức thường là một tập nào đó các câu Horn (tức là một \ntập nào đó các luật if-then). \n3.5.4. Luật suy diễn \n \nMột công thức H được xem là hệ qủa logic (logical consequence) của một tập công thức \nG ={G1,.....,Gm} nếu trong bất kỳ minh họa nào mà {G1,.....,Gm} đúng thì H cũng đúng. Nói cách \nkhác bất kỳ mô hình nào của G cũng là mô hình của H. \n \nKhi có một cơ sở tri thức, ta muốn sử dụng các tri thức trong cơ sở này để suy ra tri thức \nmới mà nó là hệ quả logic của các công thức trong cơ sở tri thức. Điều đó được thực hiện bằng \ncách sử dụng các luật suy diễn (rule of inference). Luật suy diễn giống như một thủ tục mà chúng \nta sử dụng để sinh ra một công thức mới từ các công thức đã có. Một luật suy diễn gồm hai phần: \nmột tập các điều kiện và một kết luận. Chúng ta sẽ biểu diễn các luật suy diễn dưới dạng “phân số \n”, trong đó tử số là danh sách các điều kiện, còn mẫu số là kết luận của luật, tức là mẫu số là công \nthức mới được suy ra từ các công thức ở tử số. \n \nSau đây là một số luật suy diễn quan trọng trong logic mệnh đề. Trong các luật này α, αi, \nβ, γ là các công thức: \n\x1f Luật Modus Ponens \nα ⇒ β, α \nβ   \nTừ một kéo theo và giả thiết của kéo theo, ta suy ra kết luận của nó. \n\x1f Luật Modus Tollens \nα ⇒ β,⎤ β \n⎤ α \nTừ một kéo theo và phủ định kết luận của nó, ta suy ra phủ định giả thiết của kéo theo.  \n\x1f Luật bắc cầu  \nα ⇒ β, β ⇒ γ \nα ⇒ γ \nTừ hai kéo theo, mà kết luận của kéo theo thứ nhất trùng với giả thiết của kéo theo thứ hai, \nta suy ra kéo theo mới mà giả thiết của nó là giả thiết của kéo theo thứ nhất, còn kết luận của nó là \nkết luận của kéo theo thứ hai.  \n\x1f Luật loại bỏ hội  \n α1 ∧.......∧ αi ∧........∧αm \n \nαi \nTừ một hội ta suy ra một nhân tử bất kỳ của hội. \n\x1f Luật đưa vào hội  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=47 idx_doc=46
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 48



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các bước chính trong thủ tục suy diễn lùi Backward_Chaining.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[xác định]
Option 1: Loại bỏ giả thuyết đầu tiên, thêm điều kiện vào danh sách Hyp, áp dụng phép thế, và gọi lại thủ tục
Option 2: Lặp lại các giả thuyết, thêm điều kiện vào danh sách Hyp, kiểm tra điều kiện, và trả về kết quả
Option 3: Loại bỏ giả thuyết, thêm điều kiện mới, áp dụng phép thế, và kết thúc thủ tục
Option 4: Thêm giả thuyết vào danh sách, kiểm tra điều kiện, áp dụng phép thế, và loại bỏ điều kiện
Answer: Loại bỏ giả thuyết đầu tiên, thêm điều kiện vào danh sách Hyp, áp dụng phép thế, và gọi lại thủ tục
Citation: Câu trả lời đúng là "Loại bỏ giả thuyết đầu tiên, thêm điều kiện vào danh sách Hyp, áp dụng phép thế, và gọi lại thủ tục" vì nó mô tả chính xác các bước trong thủ tục Backward_Chaining như đã nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các bước chính trong thủ tục suy diễn lùi Backward_Chaining, và câu trả lời được gợi ý đã nêu đúng các bước quan trọng như loại bỏ giả thuyết đầu tiên, thêm điều kiện vào danh sách Hyp, áp dụng phép thế, và gọi lại thủ tục. Các đáp án khác cũng liên quan đến các bước trong thủ tục, nhưng không chính xác hoặc không đầy đủ như câu trả lời được gợi ý.
cau hoi dung: question='Xác định các bước chính trong thủ tục suy diễn lùi Backward_Chaining.' options=['Loại bỏ giả thuyết đầu tiên, thêm điều kiện vào danh sách Hyp, áp dụng phép thế, và gọi lại thủ tục', 'Lặp lại các giả thuyết, thêm điều kiện vào danh sách Hyp, kiểm tra điều kiện, và trả về kết quả', 'Loại bỏ giả thuyết, thêm điều kiện mới, áp dụng phép thế, và kết thúc thủ tục', 'Thêm giả thuyết vào danh sách, kiểm tra điều kiện, áp dụng phép thế, và loại bỏ điều kiện'] answer='Loại bỏ giả thuyết đầu tiên, thêm điều kiện vào danh sách Hyp, áp dụng phép thế, và gọi lại thủ tục' citation='86\nSau đây là thủ tục suy diễn lùi. Trong thủ tục này, Hyp và θ là các biến địa phương trong \nthủ tục. Giá trị ban đầu của Hyp là danh sách các giả thuyết ban đầu (biểu diễn câu hỏi được đặt \nra), còn giá trị ban đầu của θ là phép thế rỗng. \nprocedure  Backward_Chaining (Hyp, θ); \nbegin \nH  ←  giả thuyết đầu tiên trong danh sách Hyp; \nfor mỗi luật R = (conds, Q) do \nif  H hợp nhất với Q bởi phép thế θ1 then  \n1. \nLoại H khỏi danh sách Hyp; \n2. \nThêm các điều kiện của luật Conds vào danh sách Hyp; \n3. \nÁp dụng phép thế θ1 vào các giả thuyết trong danh sách Hyp; \n4. \nLấy hợp thành của các phép thế θ và θ1 để nhận được phép thế θ mới, tức là θ ← \nθθ1; \n5. \nif  Hyp = [ ] then  cho ra θ \nelse  Backward_Chaining (Hyp, θ); \nend; \nTrong thủ tục lập luận lùi, mỗi θ được cho ra là một phép thế biến làm cho giả thuyết ban đầu trở \nthành đúng, tức là (Hyp) θ = H1θ Λ ... ΛHmθ là đúng (là hệ quả logic của cơ sở tri thức). Do đó \nmỗi phép thế biến θ được cho ra bởi thủ tục là một câu trả lời cho câu hỏi đặt ra. \nVí dụ. Giả sử cơ sở tri thức chứa các sự kiện sau \nHouse(Tom)   (Tom là ngựa)  \n            (1) \nHouse(Ken) \n \n \n \n \n(2) \nHouse(Kit) \n \n \n \n \n(3) \nHouse(Bin) \n \n \n \n \n(4) \nMother(Tom, Bin) \n(Tom là mẹ Bin) \n(5) \nMother(Tom, Ken) \n \n \n \n(6) \nMother(Bin, Kit) \n \n \n \n(7) \nFast(Kit) \n \n(Kit chạy nhanh) \n(8) \nWinner(Bin) \n \n(Bin thắng cuộc) \n(9) \nGiả sử cơ sở tri thức chứa hai luật sau \nHouse(x) Λ Mother(x, y) Λ Fast(y) ⇒ Valuable(x)  (10) \n(nếu    1.  x là ngựa, và \n \n2.  x là mẹ y, và \n \n3.  y chạy nhanh \n  thì     x có giá ) \nWinner(z) ⇒ Fast(z) (11) \n(nếu  z thắng cuộc thì  x chạy nhanh) \nCâu hỏi đặt ra là:  con ngựa nào có giá ? \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=84 idx_doc=83
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 49



tao cau hoi level:remember...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả quy trình xử lý của hệ thống nhận dạng tiếng nói theo phương pháp từ dưới lên?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: remember
[mô tả]
Option 1: Quy trình bắt đầu từ việc xác định câu trước khi xác định từ
Option 2: Quy trình xử lý được triển khai từ cao xuống thấp
Option 3: Quy trình xử lý bắt đầu từ phân tích tín hiệu và kết thúc bằng xác định câu
Option 4: Quy trình xử lý không cần kiến thức về âm học và ngữ âm học
Answer: Quy trình xử lý bắt đầu từ phân tích tín hiệu và kết thúc bằng xác định câu
Citation: Câu trả lời đúng là "Quy trình xử lý bắt đầu từ phân tích tín hiệu và kết thúc bằng xác định câu" vì trong nội dung đã nêu rõ rằng phương pháp xử lý "từ dưới lên" bắt đầu từ các bước xử lý ở mức thấp như phân tích tín hiệu, tìm đặc tính, phân đoạn, gán nhãn trước khi thực hiện các bước ở mức cao như xác định từ và xác định câu.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả quy trình xử lý của hệ thống nhận dạng tiếng nói theo phương pháp từ dưới lên, và câu trả lời được gợi ý đã nêu đúng quy trình bắt đầu từ phân tích tín hiệu và kết thúc bằng xác định câu, phù hợp với nội dung tài liệu. Các đáp án khác cũng được liệt kê, trong đó có những đáp án sai, nhưng câu trả lời gợi ý vẫn đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Mô tả quy trình xử lý của hệ thống nhận dạng tiếng nói theo phương pháp từ dưới lên?' options=['Quy trình bắt đầu từ việc xác định câu trước khi xác định từ', 'Quy trình xử lý được triển khai từ cao xuống thấp', 'Quy trình xử lý bắt đầu từ phân tích tín hiệu và kết thúc bằng xác định câu', 'Quy trình xử lý không cần kiến thức về âm học và ngữ âm học'] answer='Quy trình xử lý bắt đầu từ phân tích tín hiệu và kết thúc bằng xác định câu' citation='103\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nHình 4.4. Sơ đồ khối hệ nhận dạng tiếng nói theo phương pháp từ dưới lên \n \nViệc sử dụng hệ chuyên gia nhằm tận dụng kiến thức con người vào hệ nhận dạng: \nKiến thức về âm học: để phân tích phổ và xác định đặc tính âm học của các mẫu tiếng nói.    \nKiến thức về từ vựng: sử dụng để kết hợp các khối ngữ âm thành các từ cần nhận dạng. \nKiến thức về cú pháp: nhằm kết hợp các từ thành các câu cần nhận dạng. \nKiến thức về ngữ nghĩa: nhằm xác định tính logic của các câu đã được nhận dạng. \nCó nhiều cách khác nhau để tổng hợp các nguồn kiến thức vào bộ nhận dạng tiếng nói. \nPhương pháp thông dụng nhất là xử lý ”từ dưới lên”. Theo cách này, tiến trình xử lý của hệ thống \nđược triển khai tuần tự từ thấp lên cao. Trong Hình 4.4, các bước xử lý ở mức thấp (phân tích tín \nhiệu, tìm đặc tính, phân đoạn, gán nhãn) được triển khai trước khi thực hiện các bước xử lý ở mức \ncao (phân lớp âm thanh, xác định từ, xác định câu). Mỗi bước xử lý đòi hỏi một hoặc một số \nnguồn kiến thức nhất định. Ví dụ: bước phân đoạn tiếng nói cần hiểu biết sâu sắc về đặc tính Âm \nhọc-Ngữ âm học của các đơn vị ngữ âm; bước xác định từ đòi hỏi kiến thức về từ vựng; bước xác \nđịnh câu đòi hỏi kiến thức về mô hình ngôn ngữ (nguyên tắc ngữ pháp).  \nPhương pháp này đã và đang được áp dụng thành công trong các ứng dụng nhận dạng \ntiếng nói thực tế. Đề tài sẽ sử dụng phương pháp nhận dạng mẫu cho bài toán nhận dạng một số từ \ntiếng Việt. Bước đầu tiên của quá trình nhận dạng là trích chọn các tham số tín hiệu tiếng nói. \nPhần tiếp theo sẽ trình bày chi tiết về phương pháp này. \n4.4.2. Phân tích tham số tiếng nói \nTrong nhận dạng, tổng hợp, mã hóa tiếng nói đều cần phân tích các tham số. Dưới đây, \nmô tả phương pháp phân tích cepstral theo thang đo mel để tính các hệ số MFCC thông qua việc \nsử dụng dãy các băng lọc.  \nKhái niệm cơ bản trong phân tích tín hiệu tiếng nói là phân tích thời gian ngắn (Short-\nTime Analysis). Trong khoảng thời gian dài, tín hiệu tiếng nói là không dừng, nhưng trong \nkhoảng thời gian đủ ngắn (10-30 ms) tiếng nói được coi là dừng. Do đó, trong các ứng dụng xử lý \nTrích chọn đặc trưng \n \n \n \n \nCác  \n \nnguồn  \n \nkiến  \n \nthức \nPhân đoạn \nGán nhãn \nPhân lớp âm thanh \nXác định từ \nXác định câu \nTiếng nói\nNguyên tắc phân loại \nNguyên tắc ngữ âm \nTruy cập từ điển \nMô hình ngôn ngữ \nÂm hữu thanh/Vô \nthanh/ Khoảng lặng \nPhân tích tín hiệu \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='remember' page=101 idx_doc=100
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 50



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Trình bày cách thức phát hiện tiếng nói dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[phát hiện]
Option 1: Xác định điểm bắt đầu và điểm kết thúc dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không.
Option 2: Chỉ sử dụng hàm năng lượng thời gian ngắn để phát hiện tiếng nói.
Option 3: Phát hiện tiếng nói bằng cách phân tích tần số của tín hiệu.
Option 4: Sử dụng các phương pháp học máy để nhận diện tiếng nói.
Answer: Xác định điểm bắt đầu và điểm kết thúc dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không.
Citation: Câu trả lời đúng là "Xác định điểm bắt đầu và điểm kết thúc dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không" vì nó phản ánh chính xác nội dung trong phần b của tài liệu, nơi mô tả cách thức phát hiện tiếng nói bằng hai đại lượng tĩnh là hàm giả năng lượng và tỷ lệ vượt quá điểm không.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu trình bày cách thức phát hiện tiếng nói dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không, và câu trả lời được gợi ý đã nêu đúng nội dung này. Các đáp án khác cũng liên quan đến các phương pháp phát hiện tiếng nói, trong đó có đáp án đúng và không đúng, nhưng câu trả lời gợi ý đã đúng với yêu cầu của câu hỏi.
cau hoi dung: question='Trình bày cách thức phát hiện tiếng nói dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không?' options=['Xác định điểm bắt đầu và điểm kết thúc dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không.', 'Chỉ sử dụng hàm năng lượng thời gian ngắn để phát hiện tiếng nói.', 'Phát hiện tiếng nói bằng cách phân tích tần số của tín hiệu.', 'Sử dụng các phương pháp học máy để nhận diện tiếng nói.'] answer='Xác định điểm bắt đầu và điểm kết thúc dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không.' citation='104\ntiếng nói người ta thường chia tiếng nói thành nhiều đoạn có thời gian bằng nhau được gọi là \nkhung (frame), mỗi khung có độ dài từ 10 đến 30 ms. \nPhát hiện tiếng nói \nPhát hiện thời điểm bắt đầu, điểm kết thúc của tiếng nói (tách tiếng nói ra khỏi khoảng \nlặng) là phần cần thiết trong chương trình nhận dạng tiếng nói, đặc biệt trong chế độ thời gian \nthực. Phần này trình bày ba phương pháp phát hiện tiếng nói dựa trên hàm năng lượng thời gian \nngắn SE (Short Energy) và tỷ lệ vượt quá điểm không ZCR (Zero Crossing).  \n \na. Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn \n \nHàm năng lượng thời gian ngắn của tín hiệu tiếng nói được tính bằng cách chia tín hiệu \ntiếng nói thành các khung, mỗi khung dài N mẫu. Mỗi khung được nhân với một hàm cửa sổ \n)\n(n\nW\n. Nếu hàm cửa sổ bắt đầu xét ở mẫu thứ m thì hàm năng lượng thời gian ngắn\nm\nE được xác \nđịnh như sau: \n      \n[\n]\n∑\n−\n+\n=\n−\n=\n1\n2\n)\n(\n)\n(\nN\nm\nm\nn\nm\nm\nn\nW\nn\nx\nE\n                                                             \ntrong đó:  \n \n   n: là biến rời rạc;  \n \n   m: là số mẫu thử thứ m;  \n \n   N: là tổng số mẫu tiếng nói \nHàm cửa sổ \n)\n(n\nW\n thường dùng là hàm cửa sổ chữ nhật được xác định như sau: \n⎢⎣\n⎡\n≥\n−\n≤\n≤\n=\nN\nn\nN\nn\nn\nW\n0\n1\n0\n1\n)\n(\n                                                         \nThuật toán xác định điểm đầu và điểm cuối tiếng nói theo phương pháp này: \nBước 1: Với mỗi khung của tín hiệu, xác định hàm năng lượng thời gian ngắn\nm\nE tính theo (2-1). \nNếu \nm\nE >\nthreshold\nE\n (giá trị ngưỡng năng lượng cho trước) thì đánh dấu là điểm bắt đầu khung (kí \nhiệu là khung B). Ngược lại, xét khung kế tiếp cho đến khi xác định được khung B. Nếu không xác \nđịnh được B,  kết luận: đó không là tín hiệu tiếng nói.  \nBước 2: Tính\nm\nE của khung kế tiếp khung B cho đến khi\nm\nE <\nthreshold\nE\n thì dừng và đánh dấu \nkhung đó là điểm kết thúc của một từ (kí hiệu khung E). Sau khi xác định điểm bắt đầu và kết thúc, \ndựa vào độ dài thời gian đoạn âm thanh đó để thêm bước kiểm tra: tín hiệu đó có chắc là tiếng nói \nkhông? (một từ tiếng Việt nếu phát âm rõ ràng thường dài hơn 200 ms). \n \n \nb. Phát hiện tiếng nói dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không \n \nThuật toán này xác định điểm bắt đầu, điểm kết thúc của tín hiệu tiếng nói dựa trên hai đại \nlượng tĩnh của tín hiệu tiếng nói là: hàm giả năng lượng E (Pseudo-Energy) và tỷ lệ vượt quá \nđiểm không ZCR (Zero Crossing Rate) . \nTrong một dãy giá trị tín hiệu tiếng nói được rời rạc hóa, điểm không là điểm tại đó diễn \nra sự đổi dấu cường độ tín hiệu và được mô tả bởi:  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=102 idx_doc=101
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 51



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các đối tượng tri giác nào mà agent "Lái taxi" cần sử dụng để thu thập thông tin về môi trường xung quanh?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Các camera, công tơ mét, hệ thống GPS
Option 2: Chỉ cần một camera và microphone
Option 3: Chỉ cần công tơ mét và GPS
Option 4: Không cần bất kỳ thiết bị nào
Answer: Các camera, công tơ mét, hệ thống GPS
Citation: Câu trả lời đúng là "Các camera, công tơ mét, hệ thống GPS" vì đây là các thiết bị được đề cập trong nội dung là cần thiết cho agent "Lái taxi" để thu thập thông tin về vị trí, tốc độ và môi trường xung quanh.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các đối tượng tri giác mà agent 'Lái taxi' cần sử dụng để thu thập thông tin về môi trường xung quanh. Câu trả lời được gợi ý là 'Các camera, công tơ mét, hệ thống GPS', hoàn toàn đúng với thông tin trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và đầy đủ nhất.
cau hoi dung: question='Xác định các đối tượng tri giác nào mà agent "Lái taxi" cần sử dụng để thu thập thông tin về môi trường xung quanh?' options=['Các camera, công tơ mét, hệ thống GPS', 'Chỉ cần một camera và microphone', 'Chỉ cần công tơ mét và GPS', 'Không cần bất kỳ thiết bị nào'] answer='Các camera, công tơ mét, hệ thống GPS' citation='154\n4. Thậm chí nếu chúng ta trao cho agent một cơ chế tự học tốt nhất, để nó có thể có khả \nnăng tự giải quyết, thì nó vẫn cần phải học mãi mãi. \nMặc cho tất cả các điều đó, TABLE-DRIVEN-AGENT vẫn làm cái điều chúng ta muốn: \nnó thực hiện đầy đủ phép ánh xạ agent theo yêu cầu. Do đó không chắc chắn để khẳng định: “Nó \nkhông thông minh”. \nMột ví dụ \nPhần này giúp xem xét một môi trường riêng, với mục đích sự thảo luận của chúng ta trở \nnên cụ thể hơn. Nguyên nhân chính của sự hiểu biết của nó, và nguyên nhân nó yêu cầu một phạm \nvi rộng những kỹ năng. Chúng ta sẽ xem xét công việc thiết kế tự động hoá lái taxi. Cần lưu ý \nrằng hệ thống hiện thời có phần vượt ra ngoài những phạm vi khả năng công nghệ cho phép, mặc \ndù hầu hết những phần hợp thành là sẵn có theo một vài mẫu6. Nhiệm vụ lái xe là cực kỳ phức \ntạp, tổ hợp các tình huống mới có thể xảy ra là không có giới hạn. \nĐầu tiên chúng ta phải nghĩ ra các đối tượng tri giác, các hành vi, các mục tiêu và môi \ntrường cho taxi (xem hình 5.18). \n \nKiểu \nAgent \nĐối tượng tri giác \n(Percepts) \nHành vi \n(Actions) \nMục tiêu  \n(Goals) \nMôi trường \nEnvironment \nLái taxi \nCác camera, công tơ \nmét, hệ thống GPS, \nmicrophone \nđịnh hướng, tăng giảm \ntốc, phanh, thông báo \nvới hành khách \nAn toàn, nhanh, đúng \nluật, hành trình thoải \nmái, kinh tế nhất \ncác con đường, \nHình 5.18   Kiểu agent “Lái xe Taxi” \n \nTaxi cần sẽ biết nó ở đâu, trên con đường nào và đang chạy nhanh chậm ra sao. Những \nthông tin này có thể thu được từ các percept. Đó là một hoặc nhiều camera (Controllable TV \ncamera), công tơ mét đo tốc đọ (Speedometer), và đồng hồ đo đoạn đường đi (Odometer). Để điều \nkhiển xe cộ một cách chính xác, nhất là trên đoạn đường cong, cần phải có một bộ điều khiển tăng \ngiảm tốc (accelerometer). Cũng cần biết trạng thái máy móc của xe cộ, vì vậy cần phải có một hệ \nthống các cảm biến cơ học và điện tử (engine and electrical sensor). Có thể có các thiết bị không \ncó giá trị với người điều khiển thông thường như: hệ thống vệ tinh định vị toàn cầu GPS, để cung \ncấp thông tin chính xác vị trí trên bản đồ điện tử, hoặc cảm biến hồng ngoại (infrared sensor) \nhoặc cảm biến âm (sonar snesor) để phát hiện khoảng cách với các ô tô và các chướng ngại vật \nkhác. Cuối cùng, cần có một microphone hoặc một bàn phím (keyboard) để cho các hành khách \nnói với nói nơi đến của họ. \nCác hành vi có thể đối với agent “Lái taxi” sẽ ít nhiều tương tự như đối với một con người \nđiều khiển taxi: điều khiển động cơ thông qua bàn đạp gas, điều khiển hướng, điều khiển phanh. \nNgoài ra, sẽ cần đưa ra “đầu ra” trên màn hình hoặc thiết bị âm thanh để giao tiếp với hành khách; \nvà một vài cách có thể để truyền thông với các xe cộ khác. \nKhả năng phạm vi thực hiện (performance measure) mà chúng ta muốn hệ thống lái xe tự \nđộng đạt được là gì? Các năng lực mong muốn bao gồm: đến đích chính xác, sự tiêu thụ năng \nlượng là ít nhất, hao mòn ít nhất, ít hỏng hóc nhất, thời gian hành trình ngắn nhất hoặc chi phí ít \nnhất hoặc cả thời gian và chi phí ít nhất, ít vi phạm luật giao thông nhất, làm ảnh hưởng đến các \n                                                 \n6 Xem trang 26, ở đó mô tả một agent lái xe hiện nay \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=152 idx_doc=152
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 52



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các thành phần cấu tạo của chương trình trí tuệ nhân tạo theo nội dung đã cung cấp.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Cơ sở tri thức và động cơ suy diễn
Option 2: Dữ liệu và thuật toán
Option 3: Cơ sở tri thức và dữ liệu
Option 4: Động cơ suy diễn và thuật toán
Answer: Cơ sở tri thức và động cơ suy diễn
Citation: Theo nội dung, chương trình trí tuệ nhân tạo được cấu tạo từ hai thành phần là cơ sở tri thức (knowledge base) và động cơ suy diễn (inference engine).
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các thành phần cấu tạo của chương trình trí tuệ nhân tạo, và câu trả lời được gợi ý là 'Cơ sở tri thức và động cơ suy diễn', đúng với nội dung tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất với câu hỏi.
cau hoi dung: question='Xác định các thành phần cấu tạo của chương trình trí tuệ nhân tạo theo nội dung đã cung cấp.' options=['Cơ sở tri thức và động cơ suy diễn', 'Dữ liệu và thuật toán', 'Cơ sở tri thức và dữ liệu', 'Động cơ suy diễn và thuật toán'] answer='Cơ sở tri thức và động cơ suy diễn' citation='8 \n• Biểu diễn tri thức, lưu trữ thông tin được cung cấp trước hoặc trong quá trình thẩm vấn.  \n• Tự động lập luận để sử dụng thông tin đã được lưu nhằm trả lời câu hỏi và phác thảo kết luận \nmới. \n• Máy học: để thích nghi với môi trường mới, kiểm tra và chấp nhận những mẫu mới.  \n• Đối với AI, không cần có sự cố gắng cao mới qua được quá trình kiểm tra của Turning. Khi \ncác chương trình AI giao tiếp trực tiếp với con người thì việc hoạt động được giống như  người \nlà vấn đề thiết yếu. Quá trình trình diễn và lý giải những hệ thống như thế có thể hoặc không \ncần dựa vào con người.  \n1.3.2.  Tri thức là gì? \nTri thức là sự hiểu biết bằng lý thuyết hay thực tế vè một chủ đề hay lĩnh vực. Tri thức là \ntổng của những cái đang biết hiện nay; tri thức là sức mạnh. Những người có tri thư tốt là những \nchuyên gia (expert). \n \nSo với chương trình truyền thống (được cấu tạo từ hai “chất liệu” cơ bản là dữ liệu và \nthuật toán), chương trình trí tuệ nhân tạo được cấu tạo từ hai thành phần là cơ sở tri thức \n(knowledge base) và động cơ suy diễn (inference engine). \n1.3.3. Cơ sở tri thức (Knowledge Base: KB) \nĐịnh nghĩa:  \nCơ sở tri thức là tập hợp các tri thức liên quan đến vấn đề mà chương trình quan tâm giải \nquyết. Cơ sở tri thức chứa các kiến thức được sử dụng để giải quyết các vấn đề (bài toán) trong trí \ntuệ nhân tao. \n1.3.4. Hệ cơ sở tri thức \n           Trong hệ cơ sở tri thức chứa hai chức năng tách biệt nhau, trường hợp đơn gian gồm hai \nkhối: khối tri thức hay còn gọi là cơ sở tri thức; khối điều khiển hay còn gọi là đông cơ suy diễn. \nVới các hệ thống phức tạp, bản thân động cơ suy diễn cũng có thể là một hệ cơ sở tri thức chứa \ncác siêu tri thức (tri thức về các tri thức). Hình dưới đây mô tả cấu trúc chương trình truyền thống \n(bên trái) và cấu trúc chương trình trí tuệ nhân tạo (bên phải). \n \nĐộng cơ suy diễn: là phương pháp vận dụng tri thức trong cơ sở tri thức để giải quyết vấn đề.  \n \n DỮ LIỆU \nDỮ LIỆU \nCƠ SỞ TRI THỨC \n \n  THUẬT \n   TOÁN \n \nĐỘNG CƠ SUY     \nDIỄN \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=6 idx_doc=5
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 53



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định cách thức kết nối hai danh sách L1 và L2 thành một danh sách L bằng vị từ Conc(L1,L2,L).
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: L1 và L2 được nối lại thành L nếu L1 là danh sách rỗng và L = L2
Option 2: L1 và L2 được nối lại thành L nếu đầu của L là đầu của L2 và đuôi của L là kết nối của đuôi L1 và L2
Option 3: L1 và L2 được nối lại thành L nếu L1 không rỗng và đầu của L là đầu của L1
Option 4: L1 và L2 được nối lại thành L nếu L1 là danh sách rỗng và đầu của L là đầu của L1.
Answer: L1 và L2 được nối lại thành L nếu L1 là danh sách rỗng và L = L2
Citation: Cách thức kết nối hai danh sách L1 và L2 thành một danh sách L được xác định bởi vị từ Conc(L1,L2,L) và được mô tả trong nội dung rằng nếu L1 là danh sách rỗng thì L sẽ là L2.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định cách thức kết nối hai danh sách L1 và L2 thành một danh sách L bằng vị từ Conc(L1,L2,L). Câu trả lời được gợi ý đúng với định nghĩa trong tài liệu, cụ thể là trường hợp khi L1 là danh sách rỗng và L = L2. Ngoài ra, các đáp án khác cũng đúng và có thể tìm thấy trong tài liệu, vì chúng mô tả các trường hợp khác của phép nối danh sách. Do đó, câu trả lời được gợi ý và các đáp án khác đều phù hợp với yêu cầu của câu hỏi.
cau hoi dung: question='Xác định cách thức kết nối hai danh sách L1 và L2 thành một danh sách L bằng vị từ Conc(L1,L2,L).' options=['L1 và L2 được nối lại thành L nếu L1 là danh sách rỗng và L = L2', 'L1 và L2 được nối lại thành L nếu đầu của L là đầu của L2 và đuôi của L là kết nối của đuôi L1 và L2', 'L1 và L2 được nối lại thành L nếu L1 không rỗng và đầu của L là đầu của L1', 'L1 và L2 được nối lại thành L nếu L1 là danh sách rỗng và đầu của L là đầu của L1.'] answer='L1 và L2 được nối lại thành L nếu L1 là danh sách rỗng và L = L2' citation='64\n=[blue, red, white⎪[ yellow ] ] \n=[blue, red, white, yellow⎪[ ] ] \nChúng ta có thể biểu diễn danh sách bởi các hạng thức trong logic vị từ cấp một. Trong logic vị \ntừ, một danh sách được định nghĩa như sau: \nDanh sách hoặc là kí hiệu hằng [ ], hoặc là một hạng thức có dạng list(X,Y), trong đó list là kí \nhiệu hàm của hai biến, đối số X là một hạng thức bất kì và được gọi là đầu danh sách, đối số Y là \nmột danh sách và được gọi là đuôi danh sách. (Trong ngôn ngữ Prolog, người ta sử dụng kí hiệu \n“.” thay cho kí hiệu list; tức là hạng thức list(X,Y) trong Prolog được viết là.(X,Y). \nNhư vậy các cặp biểu diễn sau là tương đương: \nBiểu diễn hạng thức \n \n  \n \nBiểu diễn dấu ngoặc vuông \nlist(X,Y) \n \n \n \n \n[ X⎪Y ] \nlist(X,list(Y,Z)) \n \n \n \n[ X, Y⎪Z ] \nlist(X,list(Y,list(Z, [ ]))) \n \n \n[ X,Y,Z ] \nTrong ngôn ngữ Prolog, ta có thể sử dụng cả hai dạng biểu diễn danh sách. \nCác phép toán cơ bản trên danh sách: \n• \n. Quan hệ thành phần \nQuan hệ “đối tượng X là thành phần của danh sách L”được biểu diễn bởi vị từ: \nMember(X,L)  \nQuan hệ này được xác định như sau: \nX là thành phần của danh sách L nếu: \n(1) hoặc X là đầu danh sách L \n(2) hoặc X là thành phần của đuôi danh sách L \nTức là, vị từ Member(X,L) được xác định bởi công thức: \nMember(X,L) ⇐(L = [X | L1])∨ (L = [Y | L2]∧ Member (X,L2)) \nChẳng hạn, \n        Member(a,[a,b,c]) \n  \n Member([b,c],[a,[b,c],d]) \nlà các quan hệ đúng, còn  \n \n \n Member(b,[a,[b,c],d]) \nlà sai. \n• \nKết nối hai danh sách thành một danh sách  \nPhép toán kết nối 2 danh sách L1 và L2 thành một danh sách L được biểu diễn bởi vị từ  \n \n     Conc(L1,L2,L) \nQuan hệ này được xác định như sau: \nDanh sách L là kết nối của 2 danh sách L1 và L2 nếu: \n(1) hoặc L1=[ ] và L= L2 \n(2) hoặc L1 ≠[ ] và đầu của L là đầu của L1 và đuôi của L là kết nối của đuôi L1 và L2. \nTức là, quan hệ Conc(L1,L2,L) được xác định bởi công thức: \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=62 idx_doc=61
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 54



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định cách mà Prolog xử lý câu hỏi từ người dùng?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[hỏi]
Option 1: Prolog sẽ thực hiện quá trình suy diễn logic để tìm ra câu trả lời cho câu hỏi.
Option 2: Prolog sẽ chỉ hiển thị các câu lệnh đã được lập trình sẵn.
Option 3: Prolog sẽ yêu cầu người dùng nhập lại câu hỏi nếu không hiểu.
Option 4: Prolog sẽ tự động chạy tất cả các chương trình mà không cần câu hỏi. 
Answer: Prolog sẽ thực hiện quá trình suy diễn logic để tìm ra câu trả lời cho câu hỏi.
Citation: Câu hỏi này được xác định dựa trên thông tin rằng Prolog sử dụng lập luận logic để tìm ra các câu trả lời cho các câu hỏi được đặt ra bởi người dùng.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến cách Prolog xử lý câu hỏi từ người dùng, và câu trả lời được gợi ý đúng với nội dung trong tài liệu, cụ thể là quá trình suy diễn logic để tìm ra câu trả lời. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng chỉ có câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Xác định cách mà Prolog xử lý câu hỏi từ người dùng?' options=['Prolog sẽ thực hiện quá trình suy diễn logic để tìm ra câu trả lời cho câu hỏi.', 'Prolog sẽ chỉ hiển thị các câu lệnh đã được lập trình sẵn.', 'Prolog sẽ yêu cầu người dùng nhập lại câu hỏi nếu không hiểu.', 'Prolog sẽ tự động chạy tất cả các chương trình mà không cần câu hỏi. '] answer='Prolog sẽ thực hiện quá trình suy diễn logic để tìm ra câu trả lời cho câu hỏi.' citation='88\nmôi trường làm việc, ..., song phần lớn các hệ này tương thích với Prolog-10, Prolog-10 được \ncông nhận như Prolog chuẩn. \nProlog đã được sử dụng như một công cụ phần mềm để phát triển các hệ thông minh. Nó đã được \náp dụng trong nhiều lĩnh vực trí tuệ nhân tạo: giải quyết vấn đề, các hệ chuyên gia, biểu diễn tri \nthức, lập kế hoạch, xử lý ngôn ngữ tự nhiên, học máy, ... \nTrong các ngôn ngữ lập trình truyền thống (chẳng hạn, Pascal, C, ...) một chương trình là một dãy \ncác lệnh mà máy cần thực hiện. Người lập trình để viết một chương trình trong các ngôn ngữ \ntruyền thống, phải dựa vào thuật toán đã có và cách biểu diễn dữ liệu để lập ra một dãy các lệnh \nchỉ dẫn cho máy cần phải thực hiện các hành động nào. \nĐiều khác nhau căn bản của lập trình Prolog so với lập trình truyền thống là: \n• \nTrong Prolog người lập trình mô tả vấn đề bằng các câu trong logic. \n• \nHệ sẽ sử dụng lập luận logic để tìm ra các câu trả lời cho vấn đề. \nDo đó một chương trình Prolog là sự đặc tả của một vấn đề. Vì lý do này Prolog là ngôn ngữ lập \ntrình khai báo (declarative language). Trong Prolog, chỉ được phép sử dụng các câu Horn, tức là \nmỗi câu hoặc là câu phân tử, hoặc là một luật nếu - thì mà các điều kiện của luật và kết luận của \nluật đều là câu phân tử. Một chương trình Prolog gồm một dãy các luật có dạng: \n                                                                A :- B1, ..., Bm \ntrong đó, m ≥ 0, A và Bi (i = 1, ..., m) là các câu phân tử. Luật trên được đọc là “A nếu B1 và ... và \nBm”. Nó là cách viết trong Prolog của logic mênh đề sau: \nA\nB\nB\nm ⇒\n∧\n∧…\n1\n \nTrong luật trên, A được gọi là đầu, danh sách các câu Bi (B1, ..., Bm) được gọi là thân của luật. \nNếu m=0, ký hiệu “:-” sẽ được bỏ đi, khi đó ta có câu phân tử A và nó được gọi là một sự kiện. \nVí dụ. Giả sử chúng ta biết các thông tin sau đây về An và Ba. \nAn yêu thích mọi môn thể thao mà cậu chơi. \nBóng đá là môn thể thao. \nBóng bàn là môn thể thao. \nAn chơi bóng đá. \nBa yêu thích mọi thứ mà An yêu thích. \nCác câu trên được chuyển thành một chương trình Prolog như sau \nlikes(an, X) :-  sport(X), plays(an, X) \nsport(football). \nsport(tennis). \nplays(an, football). \nlikes(ba, Y) :- likes(an, Y). \nVới chương trình Prolog trên (nó mô tả sở thích thể thao của An và Ba), ta có thể đặt ra các câu \nhỏi, chẳng hạn “An yêu thích cái gì ?”. Câu hỏi này được viết trong Prolog như sau. \n? - likes(an, X). \nKhi đưa vào một câu hỏi, hệ Prolog sẽ thực hiện quá trình suy diễn logic để tìm ra các câu trả lời \ncho câu hỏi. Chẳng hạn, với câu hỏi trên Prolog sẽ đưa ra câu trả lời: \nX = football \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=86 idx_doc=85
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 55



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cách mà simple reflex agent thực hiện kết nối từ tri giác đến hành động?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[mô tả]
Option 1: Simple reflex agent sử dụng qui tắc condition-action để chuyển đổi tri giác thành hành động.
Option 2: Simple reflex agent chỉ thực hiện hành động mà không cần tri giác.
Option 3: Simple reflex agent không sử dụng qui tắc nào để thực hiện hành động.
Option 4: Simple reflex agent không có khả năng chuyển đổi tri giác thành hành động.
Answer: Simple reflex agent sử dụng qui tắc condition-action để chuyển đổi tri giác thành hành động.
Citation: Câu trả lời đúng là "Simple reflex agent sử dụng qui tắc condition-action để chuyển đổi tri giác thành hành động" vì trong nội dung có đề cập rằng cấu trúc của simple reflex agent chỉ ra qui tắc condition – action cho phép agent thực hiện kết nối từ tri giác đến hành động.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cách mà simple reflex agent thực hiện kết nối từ tri giác đến hành động, và câu trả lời được gợi ý đã nêu rõ rằng simple reflex agent sử dụng qui tắc condition-action để thực hiện chuyển đổi này. Điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng liên quan đến câu hỏi và có thể tìm thấy trong tài liệu, nhưng câu trả lời được gợi ý là chính xác và đúng hơn các đáp án khác.
cau hoi dung: question='Mô tả cách mà simple reflex agent thực hiện kết nối từ tri giác đến hành động?' options=['Simple reflex agent sử dụng qui tắc condition-action để chuyển đổi tri giác thành hành động.', 'Simple reflex agent chỉ thực hiện hành động mà không cần tri giác.', 'Simple reflex agent không sử dụng qui tắc nào để thực hiện hành động.', 'Simple reflex agent không có khả năng chuyển đổi tri giác thành hành động.'] answer='Simple reflex agent sử dụng qui tắc condition-action để chuyển đổi tri giác thành hành động.' citation='156\n \nHình 5.19 đưa ra cấu trúc của một “simple reflex agent” dưới dạng giản đồ, chỉ ra qui tắc \ncondition – action cho phép agent thực hiện kết nối từ tri giác đến hành động như thế nào. Chúng \nta sử dụng hình chữ nhật để biểu thị trạng thái hiện tại bên trong tiến trình giải quyết của agent, \nhình oval biểu diễn thông tin cơ sở được sử dụng trong tiến trình. Agent chương trình cũng rất \nđơn giản, được chỉ ra ở hình 5.20. Chức năng INTERPRET-INPUT sinh ra một sự diễn tả trừu \ntượng của trạng thái hiện tại từ sự tri giác, RULE-MATCH trả về qui tắc đầu tiên trong tập các \nqui tắc mà nó phù hợp với sự mô tả trạng thái được đưa đến. mặc dù các agent có thể được thực \nhiện rất hiệu quả , nhưng phạm vi ứng dụng lại rất hẹp. \n \n \nfunction SIMPLE-REFLEX-AGENT(percept) return  action \nstatic: rules, a set of condition-action rules \nstate ← INTERPRET-INPUT(percept) \nrule ← RULE-MATCH(state,rules) \naction ← RULE-ACTION[rule] \nreturn action \nHình 2.20 Kiểu agent “Lái xe” \n \nAgent theo dõi (Agents that keep track of the world) \nSimple reflex agent mô tả ở phần trước sẽ chỉ làm việc nếu sự giải quyết chính xác có thể \nđược dựa trên tri giác hiện thời. Nếu chiếc ô tô phía trước là một mô hình đã xuất hiện trước đây \nkhông lâu, và bây giờ có ánh sáng đèn phanh được mang lại từ trung tâm kết quả ở nước Mỹ, thì \ntừ một hình ảnh đơn sẽ có thể nó rằng nó đang phanh. Không may, các mô hình cũ có sự khác biệt \nvề hình dáng đèn hậu, đèn phanh, đèn xi nhan, và không phải bao giờ cũng có khả năng trả lời \nrằng chiếc ô tô phía trước đang phanh. Vì vậy, dù là việc phanh đơn giản, thiết bị lái của chúng ta \nvẫn phải duy trì một vài phần nào đó tình trạng bên trong theo trình tự để lựa chọn hành động. Ở \nđây tình trạng bên trong không quá lớn – nó chỉ cần frame trước đó từ camera để dò tìm khi hai \nđèn đỏ ở rìa xe cộ cùng sáng hoặc tắt đồng thời. \nMÔI TRƯờNG \nThế giới xung \nquanh hiện nay như \nế\nHành động phải \nlàm bây giờ là gì \ncơ quan phản ứng lại kich \nthích \ncảm biến \nsensors \nqui tắc \ncondition - action \nHình 2.19 Sơ đồ biểu diễn simple reflex agent \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=154 idx_doc=154
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 56



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định hàm heuristic nào trong hai hàm h1 và h2 được cho là tốt hơn trong việc tìm kiếm giải thuật ngắn nhất cho trò chơi số 8?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: h1 là hàm heuristic tốt hơn
Option 2: h2 là hàm heuristic tốt hơn
Option 3: Cả h1 và h2 đều không tốt
Option 4: Không có hàm heuristic nào tốt
Answer: h2 là hàm heuristic tốt hơn
Citation: Trong nội dung, h2 được cho là tốt hơn h1 trong việc tìm kiếm giải thuật ngắn nhất cho trò chơi số 8, vì nó cho ra khoảng cách Manhatan chính xác hơn cho các quân cờ so với vị trí mục tiêu.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định hàm heuristic nào trong hai hàm h1 và h2 là tốt hơn cho việc tìm kiếm giải thuật ngắn nhất trong trò chơi số 8. Câu trả lời được gợi ý là 'h2 là hàm heuristic tốt hơn', điều này hoàn toàn chính xác và phù hợp với thông tin trong tài liệu. Ngoài ra, các đáp án khác cũng có thể tìm thấy trong tài liệu, trong đó có đáp án 'h2 là hàm heuristic tốt hơn', do đó câu trả lời được gợi ý là đúng và có thể chấp nhận được.
cau hoi dung: question='Xác định hàm heuristic nào trong hai hàm h1 và h2 được cho là tốt hơn trong việc tìm kiếm giải thuật ngắn nhất cho trò chơi số 8?' options=['h1 là hàm heuristic tốt hơn', 'h2 là hàm heuristic tốt hơn', 'Cả h1 và h2 đều không tốt', 'Không có hàm heuristic nào tốt'] answer='h2 là hàm heuristic tốt hơn' citation='33\nbước tiếp theo là tìm một hàm heuristic tốt. Nếu chúng ta muốn tìm kiếm các giải thuật ngắn nhất, \nchúng ta cần một hàm heuristic mà không bao giờ ước đoán vượt quá số các bước đi tới mục tiêu. \nSau đây là hai “ứng cử viên”: \n• h1 = số lượng quân cờ mà ở sai vị trí. Đối với hình 2.9, 7 trong số 8 quân cờ ở sai vị trí, vì \nvậy trạng thái đầu sẽ có h1 = 7. h1 là một hàm heuristic chấp nhận được, bởi vì rõ ràng là \nbất cứ quân cờ nào mà đang ở sai vị trí phải di chuyển ít nhất một lần.  \n• h2 = tổng số khoảng cách của các quân cờ so với vị trí mục tỉêu. Bởi vì các quân cờ không \nthể đi theo các đường chéo, khoảng cách mà chúng ta tính tổng sẽ là tổng của các khoảng \ncách theo chiều ngang và theo chiều dọc. Khoảng cách này đôi khi được gọi là “khoảng \ncách khối thành phố”(city block distance) hoặc khoảng cách Manhantan h2 là chấp \nnhận được, vì bất cứ nước đi nào cũng chỉ có thể di chuyển một quân cờ một bước gần \nhơn tới đích. Các quân cờ từ 1 đến 8 trong trạng thái đầu cho ta một khoảng cách \nManhatan là: \n      \n                    h2 = 2 + 3 + 3 + 2 + 4 + 2 + 0 + 2 = 18 \nHiệu quả (tác dụng) của độ chính xác heuristic trong khi  thực hiện \nMột cách để xác định chất lượng của một hàm heuristic là hệ số phân nhánh hiệu quả b*. \nNếu tổng số các nút được mở rộng bởi A* đối với một bài toán nào đó là N, và độ sâu giải pháp là \nd, thì b* là hệ số phân nhánh mà một cây đồng dạng có độ sâu d sẽ phải có để chứa được N nút. \nNhưvậy,  \n \n                                     N =  1 + b* + (b*)2 +….+ (b*)d \n \nChẳng hạn, nếu A* tìm thấy một giải pháp ở độ sâu bằng 5 sử dụng 52 nút, thì hệ số phân \nnhánh hiệu quả là 1,91. Thông thường, hệ số phân nhánh hiệu quả đưa ra bởi một heuristic cho \ntrước là khá ổn định đối với đa số các bài toán. Do đó, các phép đo thử nghiệm giá trị b* trong \nmột tập nhỏ các bài toán có thể đưa ra một chỉ dẫn tốt khi xét tổng thể hàm heuristic. Một hàm \nheuristic được thiết kế tốt sẽ có giá trị b* gần với 1, cho phép giải quyết một số lượng lớn các bài \ntoán. Để kiểm tra các hàm heuristic h1 và h2, chúng ta ít khi sinh ra 100 bài toán, mỗi bài toán với \ncác độ dài giải pháp là 2,4,…,20, và giải quyết chúng với phép tìm kiếm A* với h1 và h2, cùng \nvới phép tìm kiếm lặp sâu dần không đầy đủ thông tin. Hình 2.8  đưa ra số trung bình các nút \nđược mở rộng bởi chiến lược tìm kiếm và hệ số phân nhánh hiệu quả. Kết quả cho thấy là h2 tốt \nhơn h1 và phép tìm kiếm thiếu thông tin tồi hơn nhiều. \nXây dựng các hàm heuristic \n \nChúng ta đã thấy rằng, cả h1 và h2 là những heuristic khá tốt đối với trò chơi số 8, và h2 thì \ntốt hơn h1. Nhưng chúng ta không biết làm thế nào để phát minh ra một hàm heuristic. Làm sao \nmột người có thể có được một heuristic như h2? Một máy tính có thể phát minh một cách máy \nmóc ra được một heuristic như vậy không? \n \nh1 và h2  là các đánh giá (ước đoán) đối với độ dài đường đi còn lại trong trò chơi số 8, \nnhưng chúng cũng có thể được xem là các độ dài đường đi có độ chính xác tuyệt vời đối với \nnhững kiểu đơn giản hoá của trò chơi này. Nếu như qui tắc của trò chơi được thay đổi để một \nquân cờ có thể di chuyển đến bất cứ chỗ nào, thay vì chỉ có thể đi đến ô trống ngay cạnh nó, thì h1 \nsẽ đưa ra một cách chính xác số các bước của giải pháp gần nhất. Tương tự, nếu một quân cờ có \nthể đi một ô theo tất cả các hướng, thậm chí đi vào ô đã bị chiếm bởi một quân cờ khác, thì h2 sẽ \nđưa ra con số chính xác các bước đi của giải pháp ngắn nhất. Một bài toán với ít ràng buộc hơn \nđối với các toán tử được gọi là một bài toán giải trí (relaxed problem). Thường xảy ra trường hợp \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=31 idx_doc=30
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 57



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định một trong những thuộc tính của giải thuật SMA* trong việc sử dụng bộ nhớ.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: SMA* sẽ sử dụng tất cả bộ nhớ có sẵn cho nó.
Option 2: SMA* không thể tránh được các trạng thái lặp lại.
Option 3: SMA* chỉ lưu lại một số duy nhất giữa các vòng lặp.
Option 4: SMA* là giải thuật tối ưu trong mọi trường hợp.
Answer: SMA* sẽ sử dụng tất cả bộ nhớ có sẵn cho nó.
Citation: Theo nội dung, SMA* có thuộc tính là sẽ sử dụng tất cả dưng lượng bộ nhớ được tạo ra dành cho nó.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định một thuộc tính của giải thuật SMA* liên quan đến việc sử dụng bộ nhớ. Câu trả lời được gợi ý "SMA* sẽ sử dụng tất cả bộ nhớ có sẵn cho nó" là chính xác và phù hợp với nội dung trong tài liệu. Ngoài ra, các đáp án khác cũng liên quan đến SMA* và có thể tìm thấy trong tài liệu, do đó, câu trả lời được gợi ý là đúng và có thể chấp nhận được.
cau hoi dung: question='Xác định một trong những thuộc tính của giải thuật SMA* trong việc sử dụng bộ nhớ.' options=['SMA* sẽ sử dụng tất cả bộ nhớ có sẵn cho nó.', 'SMA* không thể tránh được các trạng thái lặp lại.', 'SMA* chỉ lưu lại một số duy nhất giữa các vòng lặp.', 'SMA* là giải thuật tối ưu trong mọi trường hợp.'] answer='SMA* sẽ sử dụng tất cả bộ nhớ có sẵn cho nó.' citation='36\nphá. Nếu δ là chi phí nhỏ nhất và f* là chi phí giải pháp tối ưu, thì trong trường hợp tồi nhất, \nIDA* sẽ yêu cầu bf*/δ nút lưu trữ. Trong hầu hết các trường hợp, bd là sự ước đoán rất tốt đối với \nyêu cầu về dung lượng lưu trữ \n \nPhương pháp tìm kiếm SMA* \nNhững khó khăn của IDA* về không gian bài toán nào đó có thể  tìm ra được là sử dụng quá \nít bộ nhớ. Giữa các vòng lặp, nó chỉ lưu lại một số duy nhất,đó là giới hạn chi phí f hiện  thời. Do \nnó không thể nhớ được các bước đi của nó, IDA* buộc phải lặp lại chúng.  Điều này càng đúng \ntrong các không gian trạng thái mà là các bản đồ thay vì các cây. IDA* có thể được sửa đổi để \nkiểm tra đường đi hiện thời đối với những trạng thái lặp lại, nhưng nó không thể tránh được các \ntrạng thái lặp lại được tạo ra bởi các đường đi thay đổi. \n \nTrong phần này, chúng ta miêu tả giải thuật SMA* mà có thể sử dụng tất cả bộ nhớ sẵn có đẻ \ntiến hành việc tìm kiếm. Việc sử dụng bộ nhớ nhiều hơn chỉ có thể cải thiện được hiệu quả tìm kiếm \n– một giải thuật có thể luôn bỏ qua không gian phụ, nhưng thường tốt hơn là nhớ một nút thay vì tạo \nra nó khi cần thiết. SMA* có các thuộc tính sau đây: \n• Nó sẽ sử dụng tất cả dưng lượng bộ nhớ được tạo ra dành cho nó. \n• Nó tránh các trạng thái lặp lại chừng nào mà bộ nhớ còn cho phép. \n• Nó là hoàn thành nếu bộ nhớ có sẵn là hiệu quả để lưu trữ đường đi giải pháp nông nhất. \n• Nó là tối ưu nếu có đủ bộ nhớ để cất giữ đường đi giải pháp tối ưu nông nhất. Trái lại, nó trả \nvề giải pháp tốt nhất có thể có được trong phạm vi bộ nhớ cho phép. \n \nKhi có đủ bộ nhớ cho cây tìm kiếm toàn bộ, phép tìm  kiếm là hiệu quả một cách tối ưu. \n \nVấn đề không giải quyết được là không rõ SMA* có phải luôn hiệunquả một cách tối ưu \ntrong các giẩi pháp cho bởi  cùng các thông tin heuristic và cùng dung lượng bộ nhớ. \n \nViệc thiết kế SMA* là đơn giản , ít nhất là vè tổng quát. Khi cần phải  tạo ra một nút tiếp \ntheo nhưng không còn bộ nhớ, nó sẽ cần phải tạo ra không gian nhớ trong hàng đợi.  Để làm điều \nnày, nó bỏ qua một nút trong hàng đợi. Những nút mà bị bỏ rơi trong hàng đợi theo cách này đựoc \ngọi là những nút bị bỏ quên. Nó ưu tiên bỏ qua những nút mà không có triển vọng – tức là những \nnút có chi phí f cao. Để tránh khám phá lại những cây conmà đã bị bỏ rơi khỏi bộ nhớ, nó lưu lại \ntrong các nút tổ tiên những thông tin về chất lượng của đường đi tốt nhất trên cây con bị bỏ qua. \nTheo cách này, nó chỉ tái sinh ra ccác cây con khi tất cả các đường đi khác đã được chỉ ra là tồi \nhơn đường đi mà nó vừa bỏ qua.  Một cách nói khác là nếu tất cả các hậu duệ của một nút n bị bỏ \nquên, thì chúng ta sẽ không biết đi đường nào từ n, nhưng chúng ta vãn có vẫn có ý tưởng về giá \ntrị của việc đi khỏi n đến bất cứ chỗ nào. \n \n Các giải thuật cải tiến lặp \nChúng ta đã thấy trong chương 2 rằng một số bài tập nổi tiếng (ví dụ, bài toán 8 con hậu) có \nthuộc tính là sự miêu tả trạng thái có chứa tất cả các thông tin cần thiết cho một giải pháp.  Đường \nđi mà dẫn tới đích là không liên quan. Trong những trường hợp như vậy, các giải thuật cải tiến lặp \nthường cung cấp các giải pháp có tính thực tế nhất. Chẳng hạn , chúng ta  bắt đầu với 8 con hậu \ntrên bàn cờ, hoặc tất cả các dây đều đi qua các kênh nào đó. Theo cách này thì, chúng ta có thể đi \ncác con hậu sang xung quanh để giảm số con hậu bị chiếu; hoặc chúng ta có thể di chuyển một cái \ndây từ một kênh này đến một kênh khác để giảm  sự tắc nghẽn. ý tưởng chung là bắt đầu với một \nmô hình đầy đủ và thay đổi mô hình để cải thiện chất lượng của nó. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=34 idx_doc=33
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 58



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Tìm ra giá trị ban đầu của biến Hyp trong thủ tục suy diễn lùi Backward_Chaining là gì?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[tìm ra]
Option 1: Danh sách các giả thuyết ban đầu
Option 2: Danh sách các điều kiện của luật
Option 3: Giá trị của θ là phép thế rỗng
Option 4: Danh sách các kết quả cuối cùng
Answer: Danh sách các giả thuyết ban đầu
Citation: Giá trị ban đầu của Hyp trong thủ tục suy diễn lùi Backward_Chaining là danh sách các giả thuyết ban đầu, được biểu diễn là câu hỏi được đặt ra.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu tìm giá trị ban đầu của biến Hyp trong thủ tục suy diễn lùi Backward_Chaining, và câu trả lời được gợi ý là 'Danh sách các giả thuyết ban đầu', điều này hoàn toàn chính xác và phù hợp với nội dung tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng không liên quan đến giá trị của biến Hyp. Do đó, câu trả lời được gợi ý là đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Tìm ra giá trị ban đầu của biến Hyp trong thủ tục suy diễn lùi Backward_Chaining là gì?' options=['Danh sách các giả thuyết ban đầu', 'Danh sách các điều kiện của luật', 'Giá trị của θ là phép thế rỗng', 'Danh sách các kết quả cuối cùng'] answer='Danh sách các giả thuyết ban đầu' citation='86\nSau đây là thủ tục suy diễn lùi. Trong thủ tục này, Hyp và θ là các biến địa phương trong \nthủ tục. Giá trị ban đầu của Hyp là danh sách các giả thuyết ban đầu (biểu diễn câu hỏi được đặt \nra), còn giá trị ban đầu của θ là phép thế rỗng. \nprocedure  Backward_Chaining (Hyp, θ); \nbegin \nH  ←  giả thuyết đầu tiên trong danh sách Hyp; \nfor mỗi luật R = (conds, Q) do \nif  H hợp nhất với Q bởi phép thế θ1 then  \n1. \nLoại H khỏi danh sách Hyp; \n2. \nThêm các điều kiện của luật Conds vào danh sách Hyp; \n3. \nÁp dụng phép thế θ1 vào các giả thuyết trong danh sách Hyp; \n4. \nLấy hợp thành của các phép thế θ và θ1 để nhận được phép thế θ mới, tức là θ ← \nθθ1; \n5. \nif  Hyp = [ ] then  cho ra θ \nelse  Backward_Chaining (Hyp, θ); \nend; \nTrong thủ tục lập luận lùi, mỗi θ được cho ra là một phép thế biến làm cho giả thuyết ban đầu trở \nthành đúng, tức là (Hyp) θ = H1θ Λ ... ΛHmθ là đúng (là hệ quả logic của cơ sở tri thức). Do đó \nmỗi phép thế biến θ được cho ra bởi thủ tục là một câu trả lời cho câu hỏi đặt ra. \nVí dụ. Giả sử cơ sở tri thức chứa các sự kiện sau \nHouse(Tom)   (Tom là ngựa)  \n            (1) \nHouse(Ken) \n \n \n \n \n(2) \nHouse(Kit) \n \n \n \n \n(3) \nHouse(Bin) \n \n \n \n \n(4) \nMother(Tom, Bin) \n(Tom là mẹ Bin) \n(5) \nMother(Tom, Ken) \n \n \n \n(6) \nMother(Bin, Kit) \n \n \n \n(7) \nFast(Kit) \n \n(Kit chạy nhanh) \n(8) \nWinner(Bin) \n \n(Bin thắng cuộc) \n(9) \nGiả sử cơ sở tri thức chứa hai luật sau \nHouse(x) Λ Mother(x, y) Λ Fast(y) ⇒ Valuable(x)  (10) \n(nếu    1.  x là ngựa, và \n \n2.  x là mẹ y, và \n \n3.  y chạy nhanh \n  thì     x có giá ) \nWinner(z) ⇒ Fast(z) (11) \n(nếu  z thắng cuộc thì  x chạy nhanh) \nCâu hỏi đặt ra là:  con ngựa nào có giá ? \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=84 idx_doc=83
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 59



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả cấu trúc của mạng perceptron một lớp đơn dựa trên các véc tơ đầu vào và đầu ra?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[mô tả]
Option 1: Cấu trúc mạng perceptron bao gồm véc tơ đầu vào và đầu ra, với đầu ra thực tế được tính từ trọng số và đầu vào.
Option 2: Mạng perceptron chỉ sử dụng một véc tơ đầu vào duy nhất để tạo ra đầu ra.
Option 3: Cấu trúc của mạng perceptron không liên quan đến véc tơ đầu vào và đầu ra.
Option 4: Mạng perceptron có thể sử dụng nhiều lớp để tính toán đầu ra.
Answer: Cấu trúc mạng perceptron bao gồm véc tơ đầu vào và đầu ra, với đầu ra thực tế được tính từ trọng số và đầu vào.
Citation: Câu trả lời đúng vì nó phản ánh chính xác cấu trúc của mạng perceptron một lớp đơn như đã mô tả trong nội dung, trong đó đầu ra thực tế được tính từ trọng số và véc tơ đầu vào.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả cấu trúc của mạng perceptron một lớp đơn dựa trên các véc tơ đầu vào và đầu ra. Câu trả lời được gợi ý đã nêu rõ rằng cấu trúc mạng perceptron bao gồm véc tơ đầu vào và đầu ra, với đầu ra thực tế được tính từ trọng số và đầu vào, điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng liên quan đến cấu trúc mạng perceptron, trong đó có một đáp án đúng và một số đáp án sai, nhưng không làm giảm tính chính xác của câu trả lời được gợi ý.
cau hoi dung: question='Mô tả cấu trúc của mạng perceptron một lớp đơn dựa trên các véc tơ đầu vào và đầu ra?' options=['Cấu trúc mạng perceptron bao gồm véc tơ đầu vào và đầu ra, với đầu ra thực tế được tính từ trọng số và đầu vào.', 'Mạng perceptron chỉ sử dụng một véc tơ đầu vào duy nhất để tạo ra đầu ra.', 'Cấu trúc của mạng perceptron không liên quan đến véc tơ đầu vào và đầu ra.', 'Mạng perceptron có thể sử dụng nhiều lớp để tính toán đầu ra.'] answer='Cấu trúc mạng perceptron bao gồm véc tơ đầu vào và đầu ra, với đầu ra thực tế được tính từ trọng số và đầu vào.' citation='123\ntrong đó: \n)t(\nxq\ni\n là các đầu vào lớp q; i=1,...,n;  q=1,...,Q; uk(t) là các đầu vào ngoài; bik là \ntrọng ngoài, k=1,...,m; \nq\niy là đầu ra lớp q; \nq\nij\nw là trọng lớp q, từ nơron thứ j tới nơron thứ i, \ni,j = 1,...,n; q\niI là ngưỡng của nơron thứ i,  lớp q; nq là số phần tử nơron  lớp q;  m là số \ntín hiệu ngoài đưa vào. \n \nCó thể mô tả phương trình (5.8) dưới dạng phương trình ma trận-véc tơ: \n \n \n \n          x(t) = Wy(t) + Bu(t) + I \n \n \n \n \n  y(t) = g(x(t)) \n \n \n \n                (5.9) \n  \ntrong đó, W, B, I là các ma trận; x, u, g là các véc tơ hàm. Từ các mạng truyền thẳng tổng \nquát một số tác giả đã chọn các dạng cụ thể, nghiên cứu áp dụng cho chúng các thuật học phù \nhợp, hình thành các mạng cụ thể như: mạng Adaline, mạng Percetron, mạng truyền ngược. Dưới \nđây là một số mạng điển hình. \nMạng percetron một lớp đơn  \nCấu trúc: Với các véc tơ ra mong muốn d(k)=[d1\n(k), d2\n(k),...,dn\n(k)] và véc tơ vào X(k \n)=[X1\n(k), X2\n(k),..., Xm\n(k)], k=1,2,...,p, trong đó m là số đầu vào, n là số đầu ra, p là số cặp mẫu \nvào-ra dùng huấn luyện mạng. Đầu ra thực tế theo cấu trúc chung: \n       \n   yi\n(k)= f(Wi\nT xi\n(k)) = f(ΣWij xj\n(k)) = di \n(k) ; i=1,...,n; k=1,...,p                    (5.10) \nĐối với cấu trúc perceptron (5.10) có thể viết thành: \n  \n \n   yi\n(k)= Sign(Wi\nT xi\n(k)) = di \n(k) \n \n \n \n \n   (5.11) \nLuật học tổng quát: học đối với mạng nơron là cập nhật trọng trên cơ sở các mẫu. Theo nghĩa \ntổng quát, học có thể được chia làm hai loại: Học tham số và học cấu trúc. Trong những năm gần \nđây, các công trình tập trung cho nghiên cứu các luật học khác nhau. Các luật học đó có thể khái \nquát thành dạng chung sau: \n                                                  ΔWi j≡ α r X(t)                                                   (5.12) \ntrong đó : α là hằng số học (dương) xác định tốc độ học; r là tín hiệu học. Tín hiệu học tổng quát \nlà một hàm của W, X, di, tức là r = fr(wi, xi, di). Đối với các trọng biến đổi liên tục có thể sử dụng \ndạng sau: \n                                        \n)\n(\n)\n(\nt\nrx\ndt\nt\ndwi\nα\n=\n \n \n \n                               (5.13) \n  \nLuật Hebb là một ví dụ điển hình. Nhà sinh học Hebb (1949) đã nêu tiên đề: trọng được \nhiệu chỉnh phù hợp với quan hệ trước-sau [20] và sau này được mô hình hoá thành một trong \n[\n]\n⎥\n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎥\n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n=\nnm\n2\nn\nT\nn\nm\n2\n22\nT\n2\nm\n1\n12\n11\nT\nn\nT\n2\nT\n1\nT\ni\nw\n...\nw\nw\n.........\n..........\nw\n...\nw\nw\nw\n...\nw\nw\nw\n...\nw\nw\nw\nW\nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=121 idx_doc=120
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 60



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định tiêu chuẩn nào được sử dụng để đánh giá sự thực hiện của một agent?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Số lượng bụi bẩn làm sạch trong một ca làm việc 8 giờ
Option 2: Thời gian hoạt động của agent
Option 3: Mức độ tiếng ồn phát ra trong quá trình hoạt động
Option 4: Sự hài lòng của agent với hiệu suất của mình
Answer: Số lượng bụi bẩn làm sạch trong một ca làm việc 8 giờ
Citation: Tiêu chuẩn đánh giá sự thực hiện được xác định là số lượng bụi bẩn làm sạch trong một ca làm việc 8 giờ, như được nêu trong nội dung khi đề cập đến việc đánh giá hiệu suất của agent hút bụi.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định tiêu chuẩn để đánh giá sự thực hiện của một agent, và câu trả lời được gợi ý là một trong những tiêu chuẩn đó. Câu trả lời này không chỉ đúng mà còn phù hợp với các đáp án khác được cung cấp, tất cả đều có thể tìm thấy trong tài liệu. Do đó, câu trả lời được gợi ý là chính xác và liên quan đến câu hỏi.
cau hoi dung: question='Xác định tiêu chuẩn nào được sử dụng để đánh giá sự thực hiện của một agent?' options=['Số lượng bụi bẩn làm sạch trong một ca làm việc 8 giờ', 'Thời gian hoạt động của agent', 'Mức độ tiếng ồn phát ra trong quá trình hoạt động', 'Sự hài lòng của agent với hiệu suất của mình'] answer='Số lượng bụi bẩn làm sạch trong một ca làm việc 8 giờ' citation='146\nMột “agent” là bất kỳ vật gì đó mà nó có thể nhận biết (perceiving) môi trường \n(environment) quanh nó thông qua các cảm biến (sensor) và tác động lại môi trường thông qua \ncác bộ phận phản ứng lại kích thích (effector). Một cơ thể người có đôi mắt, đôi tai và các bộ phận \nkhác là các cảm biến; đôi bàn tay, đôi chân và các phần cơ thể khác là các cơ quan phản ứng lại \nkích thích. Một robot camera và tia hồng ngoại nhìn thấy được là các sensor; các motor khác nhau \nlà các các bộ phận phản ứng lại kích thích. Một phần mềm đã mã hoá các xâu bit xem như là các \nđối tượng tri giác và các hành động của nó. Một agent nói chung được mô tả: \nMục đích của chúng ta trong cuốn sách này là thiết kế các agent sao cho chúng làm việc \ntốt trong môi trường của chúng. Trước tiên, chúng ta sẽ làm rõ ràng hơn một chút về cái ý “việc \ntốt” vừa nói trên. Sau đó, chúng ta sẽ nói về các cách khác nhau thiết kế các agent hoàn thiện (đó \nchính là câu trả lời cho dấu ? trong hình 5.15). Chúng ta thảo luận một vài nguyên lý chung được \nsử dụng thiết kế các agent trình bày trong cuốn sách này. Quan trọng nhất đó là nguyên lý để thiết \ncác agent phải hiểu biết các sự việc. Cuối cùng, chúng ta chỉ ra sự gắn liền giữa một agent và một \nmôi trường như thế nào, và chỉ ra một vài loại môi trường. \n5.5.2. Hoạt động của các Agent \nMột agent có lý trí (rational agent) là agent làm các việc theo lẽ phải. Hiển nhiên, điều đó \ntốt hơn là làm việc sai trái, vậy điều đó có có ý nghĩa là gì. Như là một sự đánh giá không được \nchính xác lắm, chúng ta nói rằng hành động đúng là lý do agent thành công hơn. Điều đó dẫn đến \nvấn đề chúng ta phải đánh giá sự thành công của agent như thế nào (how) và khi nào (when). \nTiêu chuẩn đánh giá sự thực hiện (Performance Measure) \nChúng ta sử dụng thuật ngữ tiêu chuẩn đánh giá sự thực hiện cho tiêu chuẩn how − tiêu \nchuẩn xác định xem như thế nào là một agent là thành công. Hiển nhiên không có một tiêu chuẩn \nđánh giá cố định nào thích hợp cho tất cả các agent. Chúng ta có thể hỏi agent theo quan điểm chủ \nquan nó hạnh phúc như thế nào với sự thực hiện của chính nó, nhưng một vài agent không thể trả \nlời, và một vài agent khác lừa dối chính chúng. (Con người ai cũng biết câu chuyện “con cáo và \nchùm nho xanh” – các con cáo nói rằng chúng không thực sự muốn điều đó sau khi họ không \nthành công trong việc dành lấy nó). Vì vậy, chúng ta đòi hỏi một tiêu chuẩn đánh giá sự thực hiện \nkhách quan áp đặt bởi một số chuyên gia. Nói cách khác, chúng ta như là người quan sát thiết lập \nmột chuẩn để cho nó thành công trong một môi trường và sử dụng nó để đánh giá sự thực hiện của \ncác agent. \nCho một ví dụ, xem xét trường hợp một agent được hỗ trợ để hút bụi bẩn sàn nhà. Một \ntiêu chuẩn đánh giá hiệu suất đáng tin cậy có thể là số lượng bụi bẩn làm sạch trong một ca làm \nviệc 8 giờ. Một đánh giá hiệu suất phức tạp hơn có thể là số lượng điện tiêu thụ và mức độ tiếng \nồn phát ra. Đánh giá hiệu suất thứ ba có thể đưa ra điểm số cao hơn cho một agent không chỉ làm \nsạch sàn nhà một cách yên tĩnh và hiệu quả mà còn nhận ra thời gian nghỉ cuối tuần.1 \nTiêu chuẩn when để đánh giá sự thực hiện cũng quan trọng. Nếu chúng ta đánh giá xem \ncó bao nhiêu bụi bẩn agent làm sạch trong giờ đầu tiên trong ngày, chúng ta có thể thoả mãn với \ncác agent khởi động nhanh (thậm chí chúng làm ít hoặc không làm sau thời điểm đó), và không \nhài lòng với những agent làm việc hợp lý. Vì vậy, chúng ta muốn đánh giá sự thực hiện trên toàn \nthời gian hoạt động, đó là một ca làm việc 8 giờ hoặc thời gian tồn tại của agent. \n                                                 \n1 Ở đây có một nguy cơ cho những người thiết lập các tiêu chuẩn đánh giá : bạn thường phải đưa cái điều bạn \nyêu cầu. Đó là, nếu bạn đánh giá sự thành công bởi số lượng bụi bẩn đã làm sạch, thì một vài agent khôn ngoan \nsẽ bị băt buộc phải thu gom một vật bẩn to nặng trong buổi sáng, nhanh chóng dọn sạch sẽ, và được cho điểm tốt \ncho của sự thực hiện. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=144 idx_doc=143
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 61



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để xác định trạng thái đích trong quá trình tìm kiếm đường đi từ Arad đến Bucaret?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Bằng cách kiểm tra xem trạng thái hiện tại có phải là trạng thái đích hay không.
Option 2: Bằng cách mở rộng tất cả các trạng thái có thể từ Arad.
Option 3: Bằng cách sử dụng các thuật toán tìm kiếm phức tạp.
Option 4: Bằng cách chọn ngẫu nhiên một trạng thái để kiểm tra.
Answer: Bằng cách kiểm tra xem trạng thái hiện tại có phải là trạng thái đích hay không.
Citation: Việc kiểm tra xem trạng thái hiện tại có phải là trạng thái đích hay không là rất quan trọng trong quá trình tìm kiếm, vì nó giúp xác định liệu chúng ta đã đạt được mục tiêu hay chưa.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến việc xác định trạng thái đích trong quá trình tìm kiếm đường đi từ Arad đến Bucaret, điều này được đề cập trong tài liệu. Câu trả lời được gợi ý đúng với câu hỏi và có thể tìm thấy trong tài liệu, vì nó nêu rõ rằng việc xác định trạng thái đích được thực hiện bằng cách kiểm tra trạng thái hiện tại. Các đáp án khác cũng liên quan đến quá trình tìm kiếm và có thể tìm thấy trong tài liệu, do đó, câu trả lời được gợi ý và các đáp án khác đều hợp lệ.
cau hoi dung: question='Làm thế nào để xác định trạng thái đích trong quá trình tìm kiếm đường đi từ Arad đến Bucaret?' options=['Bằng cách kiểm tra xem trạng thái hiện tại có phải là trạng thái đích hay không.', 'Bằng cách mở rộng tất cả các trạng thái có thể từ Arad.', 'Bằng cách sử dụng các thuật toán tìm kiếm phức tạp.', 'Bằng cách chọn ngẫu nhiên một trạng thái để kiểm tra.'] answer='Bằng cách kiểm tra xem trạng thái hiện tại có phải là trạng thái đích hay không.' citation='21\n \nĐiều khiển Robot \n \nĐiều khiển robot là sự tổng quát hoá của bài toán tìm đường đi đã được miêu tả lúc trước. \nThay vì một tập các lộ trình rời rạc, một robot có thể di chuyển trong một không gian liên tiếp với \n(về mặt nguyên lý) một bộ vô hạn các hành động và trạng thái có thể. Để đơn giản, robot tròn di \nchuyển trên một mặt phẳng, không gian bản chất là hai chiều. Khi robốt có cánh tay và chân mà \nphải được điều khiển, không gian tìm kiếm trở nên đa chiều. Cần có các kỹ thuật tiên tiến  để biến  \nkhông gian tìm kiếm trở nên hữu hạn. Ngoài sự phức tạp của bài toán còn ở chỗ các robot thật sự \nphải xử lý các lỗi trong việc đọc thông tin sensor và các bộ điều khiển động cơ. \n \nSắp xếp dãy  \nSự lắp ráp tự động các đối tượng phức tạp  được thực hiện bởi rôbốt lần đầu tiên đã được \ntiến hành bởi  robot Freddy (Michie,1972). Sự phát triển kể từ đó khá chậm chạp nhưng chắc chắn \nnó rất cần cho những nơi lắp ráp phức tạp như lắp ráp điện tử. Trong các bài toán lắp ráp, vấn đề \nlà tìm một thứ tự để lắp ráp các phần của một sản phẩm.  Nếu như lựa chọn sai một thứ tự, sẽ \nkhông thể lắp thêm một số các bộ phận của sản phẩm nếu như không phải dỡ bỏ một số bộ phận \nđã lắp ráp lúc trước đó. Kiểm tra một bước trong dãy để đảm bảo tính khả thi là một bài toán tìm \nkiếm hình học phức tạp  rất gần với điều khiển robot. Như vậy, việc sinh ra những bước kế vị hợp \nlý là khâu đắt nhất trong dây truyền lắp ráp và việc sử dụng các giải thuật tốt để làm giảm việc tìm \nkiếm là điều cần thiết. \n2.4 CÁC PHƯƠNG PHÁP BIỂU DIỄN VÂN ĐỀ \nTìm kiếm các giải pháp \nChúng ta đã xem xét cách làm thế nào để xác định một vấn đề, và làm thế nào để công nhận \nmột giải pháp. Phần còn lại – tìm kiếm một giải pháp- được thực hiện bởi một phép tìm kiếm \ntrong không gian trạng thái. ý tưởng là để duy trì và mở rộng một tập các chuỗi giải pháp cục bộ. \nTrong phần này, chúng ta chỉ ra làm thế nào để sinh ra những chuỗi này và làm thế nào để kiểm \nsoát được chúng bằng cách sử dụng các cấu trúc dữ liệu hợp lý. \nKhởi tạo các chuỗi hành động \nVí dụ để giải quyết bài toán tìm đường đi từ Arad đến Bucaret, chúng ta bắt đầu với trạng \nthái đầu là Arad. Bước đầu tiên là kiểm tra xem nó có phải là trạng thái đích hay không. Rõ ràng \nlà không, nhưng việc kiểm tra là rất quan trọng để chúng ta có thể giải quyết những việc bị chơi \nxỏ như “ bắt đầu ở Arad, đi đến Arad”. Do nó không phải là trạng thái đích, chúng ta cần phải \nxem xét một số trạng thái khác. Điều này được thực hiện bằng cách áp dụng các toán tử cho trạng \nthái hiện thời, do đó xây dựng nên một tập các trạng thái mới. Quá trình này được gọi là sự mở \nrộng trạng thái. Trong  trường hợp này, chúng ta có ba trạng thái mới, “ở Sibiu”,”ở Timisoara” và \n“ở Zerind” bởi vì có một đường đi  một bước trực tiếp từ Arad đến ba thành phố này. Nếu như chỉ \ncó duy nhất một khả năng, chúng ta sẽ chọn khả năng đó và tiếp tục đi tiếp. Nhưng bất cứ khi nào \nmà có nhiều khả năng lựa chọn, chúng ta phải quyết định sẽ chọn phương án nào để đi tiếp. \n  Đây chính là vấn đề cốt yếu của việc tìm kiếm – lựa chọn một vị trí và để các lựa chọn \ncòn lại cho việc lựa chọn sau này nếu như sự lựa chọn đầu tiên không đưa đến một giải pháp. Giả \nsử chúng ta chọn Zezind. Chúng ta kiểm tra xem nó đã phải là trạng thái đích chưa (nó chưa phải \ntrạng thái đích), và sau đó mở rộng nó để có “ ở Arad “ và “ở Oradea”. Như thế chúng ta có thể \nchọn một trong hai trạng thái này, hoặc là quay lại và chọn Sibiu hay Timisoara. Chúng ta tiếp tục \nchọn , kiểm tra và mở rộng cho đến khi tìm được một đường đi, hoặc cho đến khi không còn trạng \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=19 idx_doc=18
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 62



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Bạn có thể xác định những đặc điểm nổi bật nào của máy tính Deep Thought 2 trong việc chơi cờ?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Deep Thought 2 có thể kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi.
Option 2: Deep Thought 2 sử dụng các mạch tích hợp để cài đặt các định giá vị trí.
Option 3: Deep Thought 2 là máy tính đầu tiên đánh bại thần đồng Arnold Denker.
Option 4: Deep Thought 2 có thể tính toán nhanh các hàm định giá rất phức tạp.
Answer: Deep Thought 2 có thể kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi.
Citation: Thông tin trong nội dung cho thấy Deep Thought 2 kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi, đạt đến độ sâu 10 hoặc 11, điều này thể hiện rõ khả năng tính toán vượt trội của nó trong việc chơi cờ.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các đặc điểm nổi bật của máy tính Deep Thought 2 trong việc chơi cờ, và câu trả lời được gợi ý đã nêu một trong những đặc điểm đó là khả năng kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi. Điều này hoàn toàn đúng với thông tin trong tài liệu. Hơn nữa, các đáp án khác cũng liên quan đến Deep Thought 2 và có thể tìm thấy trong tài liệu, do đó câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Bạn có thể xác định những đặc điểm nổi bật nào của máy tính Deep Thought 2 trong việc chơi cờ?' options=['Deep Thought 2 có thể kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi.', 'Deep Thought 2 sử dụng các mạch tích hợp để cài đặt các định giá vị trí.', 'Deep Thought 2 là máy tính đầu tiên đánh bại thần đồng Arnold Denker.', 'Deep Thought 2 có thể tính toán nhanh các hàm định giá rất phức tạp.'] answer='Deep Thought 2 có thể kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi.' citation='39\n \n \n \n \n \n \n \n \n \n \n \n \n \nBước nhảy đầu tiên trong việc thực hiện không phải xuất phát từ những giải thuật tốt hơn \nhay các hàm định giá mà là từ phần cứng. Belle, máy tính chuyên dùng cho việc chơi cờ vua đầu \ntiên (Condon và Thomson, 1982) đã sử dụng các mạch tích hợp để cài đặt các định giá vị trí và \ncác thế hệ di chuyển, làm cho nó có thể  tìm kiếm khoảng vài triệu vị trí  chỉ để đi một nước.  \n \n  \n \n \n \nHệ thống HITECH là một máy tính có mục đích đặc biệt được thiết kế bởi người xứng đáng \ncựu vô địch thế giới Hans Berliner và sinh viên của ông Carl Ebeling, có thể tính toán nhanh các \nhàm định giá rất phức tạp. Tạo ra khoảng 10 triệu trên mỗi nước đi và sử dụng việc định giá chính \nxác nhất các vị trí đã được phát triển. HITECH  đã trở thành vô địch thế giới về máy tính năm \n1985 và là chương trình đầu tiên đánh bại thần đồng của nhân loại, Arnold Denker năm 1987. Vào \nthời điểm đó nó đứng trong 800 người chơi cờ giỏi nhất thế giới. \n \nHệ thống tốt nhất hiện thời là Deep Thought 2 được sản xuất bổi IBM. Mặc dù Deep \nThought 2 sử dụng hàm định giá đơn giản, nó kiểm tra khoảng một nửa tỷ vị trí cho mỗi nước đi, \nđạt đến độ sâu 10 hoặc 11 (nó đã từng tìm được 37 nước chiếu tướng hết cờ).Tháng 2 năm 1993, \nDeep Thought 2  thi đấu với đội Olympic của Đan mạch và thắng 3-1, đánh bại một đại kiện \ntướng và hoà với một đại kiện tướng khác. Hệ số FIDE của nó là 2600, xếp trong số 100 người \nchơi cờ giỏi nhất thế giới. \nCờ đam  \n \nBắt đầu vào năm 1952,  Arthur Samuel của IBM  làm việc trong thời gian rỗi của ông, đã \nxây dựng một chương trình chơi cờ đam (loại cờ gồm 24 quân cờ cho 2 người chơi – ND) mà tự \nhọc hàm định giá của nó bằng cách tự chơi với nó hàng nghìn lần. Chương trình của Samuel bắt \nđầu như mộ người mới học việc, nhưng chỉ sau một vài ngày tự chơi với chính nó đã có thể đấu \ntrong những cuộc thi lớn của loài người. Khi một người thấy rằng công cụ tính toán của Samuel \n(một chiếc máy tính IBM 704) có 10.000 từ  trong bộ nhớ chính, băng từ  để lưu trữ dữ liệu và \nmột chu kỳ thời giankhoảng hầu như một miligiây, điều đó cho thấy đây là một trơng những thành \ntích vĩ đại của AI. \n \nCó rất ít những người khác có thể cố gắng làm được tốt hơn cho đến khi Jonathan Schaeffer \nvà các đồng nghiệp  viết trình Chinook, mà chạy trên một máy tính thông thường sử dụng phép \ntìm kiếm alpha-beta, nhưng sử dụng một số kỹ thuật, bao gồm cơ sở dữ liệu giải pháp tuyệt vời \ncho tất cả các vị trí 6-quân cờ,  và gây ra sự tàn phá  thế trận dẫn đến chấm dứt ván cờ. Chinook  \nđã chiến thắng trong  giải Mỹ mở rộng 1992 và trở thành chương trình đầu tiên mà thử thách một \nHình 2.12   Tỷ lệ của các nhà vô địch cờ vua: con người và máy tính. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=37 idx_doc=36
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 63



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các kỹ thuật nhận dạng mẫu nào được áp dụng thành công trong nhận dạng tiếng nói?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Lượng tử hóa vector, so sánh thời gian động, mô hình Markov ẩn, mạng nơron nhân tạo
Option 2: Lượng tử hóa vector, mô hình hồi quy, phân tích hồi quy, mạng nơron nhân tạo
Option 3: Lượng tử hóa vector, phân tích hồi quy, mô hình Markov ẩn, phân tích dữ liệu lớn
Option 4: Lượng tử hóa vector, so sánh thời gian động, phân tích dữ liệu lớn, mô hình hồi quy
Answer: Lượng tử hóa vector, so sánh thời gian động, mô hình Markov ẩn, mạng nơron nhân tạo
Citation: Đáp án đúng là "Lượng tử hóa vector, so sánh thời gian động, mô hình Markov ẩn, mạng nơron nhân tạo" vì đây là các kỹ thuật cụ thể được nêu trong nội dung liên quan đến nhận dạng tiếng nói.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các kỹ thuật nhận dạng mẫu trong nhận dạng tiếng nói, và câu trả lời được gợi ý đã liệt kê đúng các kỹ thuật này: lượng tử hóa vector, so sánh thời gian động, mô hình Markov ẩn, và mạng nơron nhân tạo. Các đáp án khác cũng có chứa các kỹ thuật nhưng không hoàn toàn chính xác hoặc không đầy đủ như câu trả lời được gợi ý.
cau hoi dung: question='Xác định các kỹ thuật nhận dạng mẫu nào được áp dụng thành công trong nhận dạng tiếng nói?' options=['Lượng tử hóa vector, so sánh thời gian động, mô hình Markov ẩn, mạng nơron nhân tạo', 'Lượng tử hóa vector, mô hình hồi quy, phân tích hồi quy, mạng nơron nhân tạo', 'Lượng tử hóa vector, phân tích hồi quy, mô hình Markov ẩn, phân tích dữ liệu lớn', 'Lượng tử hóa vector, so sánh thời gian động, phân tích dữ liệu lớn, mô hình hồi quy'] answer='Lượng tử hóa vector, so sánh thời gian động, mô hình Markov ẩn, mạng nơron nhân tạo' citation='102\nBước 1: Sử dụng tập mẫu tiếng nói (cơ sở dữ liệu mẫu tiếng nói) để đào tạo các mẫu tiếng \nnói đặc trưng (mẫu tham chiếu) hoặc các tham số hệ thống. \nBước 2: Đối sánh mẫu tiếng nói từ ngoài với các mẫu đặc trưng để ra quyết định.   \nTrong phương pháp này, nếu cơ sở dữ liệu tiếng nói cho đào tạo có đủ các phiên bản mẫu \ncấn nhận dạng thì quá trình đào tạo có thể xác định chính xác các đặc tính âm học của mẫu (các \nmẫu ở đây có thể là âm vị, từ, cụm từ…). Hiện nay, một số kỹ thuật nhận dạng mẫu được áp dụng \nthành công trong nhận dạng tiếng nói là lượng tử hóa vector, so sánh thời gian động (DTW), mô \nhình Markov ẩn (HMM), mạng nơron nhân tạo (ANN). \nHệ thống bao gồm các hoạt động sau: \nTrích chọn đặc trung: Tín hiệu tiếng nói được phân tích thành chuỗi các số đo để xác định \nmẫu nhận dạng. Các số đo đặc trưng là kết quả xử lý của các kỹ thuật phân tích phổ như: lọc \nthông dải, phân tích mã hóa dự đoán tuyến tính (LPC), biến đổi Fourier rời rạc (DFT).    \nHuấn luyện mẫu: Nhiều mẫu tiếng nói ứng với các đơn vị âm thanh cùng loại dùng để đào \ntạo các mẫu hoặc các mô hình đại diện, được gọi là mẫu tham chiếu hay mẫu chuẩn.    \nNhận dạng: Các mẫu tiếng nói được đưa tới khối phân loại mẫu. Khối này đối sánh mẫu \nđầu vào với các mẫu tham chiếu. Kối nhận dạng căn cứ vào các tiêu chuẩn đánh giá để quyết định \nmẫu tham chiếu nào giống mẫu đầu vào.    \nMột số đặc điểm của phương pháp nhận dạng mẫu: \n• \nHiệu năng của hệ phụ thuộc vào số mẫu đưa vào. Nếu số lượng mẫu càng nhiều thì độ \nchính xác của hệ càng cao; tuy nhiên, dung lượng nhớ và thời gian luyện mẫu tăng.     \n• \nCác mẫu tham chiếu phụ thuộc vào môi trường thu âm và môi trường truyền dẫn.  \n• \nKhông đòi hỏi kiến thức sâu về ngôn ngữ.  \n• \nPhương pháp ứng dụng trí tuệ nhân tạo   \nPhương pháp ứng dụng trí tuệ nhân tạo kết hợp các phương pháp trên nhằm tận dụng tối \nđa các ưu điểm của chúng, đồng thời bắt chước các khả năng của con người trong phân tích và \ncảm nhận các sự kiện bên ngoài để áp dụng vào nhận dạng tiếng nói. Sơ đồ khối của phương pháp \ntrí tuệ nhân tạo theo mô hình từ dưới lên (bottom-up) (Hình 4.4). \n \nĐặc điểm của các hệ thống nhận dạng theo phương pháp này là: \nSử dụng hệ chuyên gia để phân đoạn, gán nhãn ngữ âm. Điều này làm đơn giản hóa hệ \nthống so với phương pháp nhận dạng ngữ âm. \nSử dụng mạng nơron nhân tạo để học mối quan hệ giữa các ngữ âm, sau đó dùng nó để \nnhận dạng tiếng nói. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=100 idx_doc=99
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 64



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định các bước chính trong phương pháp PLP được mô tả trong nội dung trên.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Biến đổi Fourier nhanh, Lọc theo thang tần số Bark, Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn
Option 2: Lọc theo thang tần số Bark, Biến đổi Fourier ngược, Tính các giá trị
Option 3: Nhấn mạnh tín hiệu, Tính các giá trị, Lọc tần số Bark
Option 4: Biến đổi Fourier nhanh, Nhấn mạnh tín hiệu, Tính các giá trị
Answer: Biến đổi Fourier nhanh, Lọc theo thang tần số Bark, Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn
Citation: Câu trả lời đúng là "Biến đổi Fourier nhanh, Lọc theo thang tần số Bark, Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn" vì đây là các bước chính trong phương pháp PLP được nêu rõ trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định các bước chính trong phương pháp PLP, và câu trả lời được gợi ý đã liệt kê đúng ba bước chính: Biến đổi Fourier nhanh, Lọc theo thang tần số Bark, và Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn. Các đáp án khác cũng có thể tìm thấy trong tài liệu và không đúng hơn câu trả lời được gợi ý, do đó câu trả lời này hoàn toàn chính xác.
cau hoi dung: question='Xác định các bước chính trong phương pháp PLP được mô tả trong nội dung trên.' options=['Biến đổi Fourier nhanh, Lọc theo thang tần số Bark, Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn', 'Lọc theo thang tần số Bark, Biến đổi Fourier ngược, Tính các giá trị', 'Nhấn mạnh tín hiệu, Tính các giá trị, Lọc tần số Bark', 'Biến đổi Fourier nhanh, Nhấn mạnh tín hiệu, Tính các giá trị'] answer='Biến đổi Fourier nhanh, Lọc theo thang tần số Bark, Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn' citation='112\nHệ phương trình này có thể viết dưới dạng ma trận: \n                  \n−\n−\n−\n−\n=\nr\nR\n1\nα\n                                                                             \ntrong đó: \n                 \n⎥\n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n−\np\nα\nα\nα\nα\n...\n2\n1\n     \n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n−\n−\n−\n−\n=\n−\n)\n0\n(\n...\n)\n2\n(\n)1\n(\n...\n...\n...\n...\n)\n2\n(\n...\n)\n0\n(\n)1(\n)1\n(\n...\n)1(\n)\n0\n(\nr\np\nr\np\nr\np\nr\nr\nr\np\nr\nr\nr\nR\n ;            \n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n−\n)\n(\n...\n)\n2\n(\n)1(\np\nr\nr\nr\nr\n \nChú ý:  R là ma trận đối xứng. Tất cả các phần tử thuộc đường chéo của ma trận này đều có \ngiá trị bằng nhau, điều đó có nghĩa là nghịch đảo của nó luôn tồn tại và có nghiệm  \nc. Phương pháp PLP \n \nPhương pháp này là sự kết hợp của hai phương pháp đã trình bày ở trên. Hình 2.8 mô \ntả các bước xác định hệ số PLP.  \n \n \n   \n \n \n \n \nHình 4.8. Sơ đồ các bước xác định hệ số PLP \n Các khối xử lý \n♦ Khối 1:  Biến đổi Fourier nhanh (FFT) \nTương tự như phương pháp MFCC, tín hiệu tiếng nói được chia thành các khung và \nđược chuyển sang miền tần số bằng thuật toán FFT. \n♦  Khối 2:  Lọc theo thang tần số Bark \nTín hiệu tiếng nói được lọc qua các bộ lọc phân bố theo thang tần số phi tuyến, trong \ntrường hợp này là thang tần số Bark: \n              \n[\n]\n⎭⎬⎫\n⎩⎨⎧\n+\n+\n=\n2\n1\n2\n1\n)\n1200\n(\n1200\nln\n6\n)\n(\nf\nf\nf\nBark\n  \n                           \n♦ Khối 3: Nhấn mạnh tín hiệu dùng hàm cân bằng độ ồn (equal-loudnes) \nBước này tương tự bước nhấn mạnh (preemphais) của phương pháp MFCC. Hàm này \nmô phỏng đường cong cân bằng độ ồn (Equal-Loudnes Curve).  \n FFT \nTính các giá trị \nThuật toán Durbin \nBiến đổi Fourier ngược \nLuật cường  độ nghe \nNhấn mạnh tín hiệu \nLọc tần số Bark\nHệ số PLP \nTiếng nói \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=110 idx_doc=109
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 65



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy mô tả vai trò của Ed Feigenbaum trong việc phát triển chương trình DENDRAL?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[mô tả]
Option 1: Ông là một sinh viên chính quy của Herbert Simon và đã tham gia vào việc phát triển chương trình DENDRAL.
Option 2: Ông là một nhà nghiên cứu di truyền đoạt giải Nobel và không có liên quan đến DENDRAL.
Option 3: Ông là một triết gia chuyển sang làm nghiên cứu máy tính và không tham gia vào DENDRAL.
Option 4: Ông là một nhà khoa học nổi tiếng trong lĩnh vực vật lý và không liên quan đến DENDRAL.
Answer: Ông là một sinh viên chính quy của Herbert Simon và đã tham gia vào việc phát triển chương trình DENDRAL.
Citation: Thông tin trong nội dung cho thấy Ed Feigenbaum là một sinh viên chính quy của Herbert Simon và đã tham gia vào việc phát triển chương trình DENDRAL tại Stanford.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả vai trò của Ed Feigenbaum trong việc phát triển chương trình DENDRAL, và câu trả lời được gợi ý đã nêu rõ rằng ông là một sinh viên chính quy của Herbert Simon và đã tham gia vào việc phát triển chương trình này. Điều này hoàn toàn phù hợp với thông tin trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, trong đó có những đáp án đúng và sai, nhưng câu trả lời được gợi ý là chính xác và liên quan đến câu hỏi.
cau hoi dung: question='Hãy mô tả vai trò của Ed Feigenbaum trong việc phát triển chương trình DENDRAL?' options=['Ông là một sinh viên chính quy của Herbert Simon và đã tham gia vào việc phát triển chương trình DENDRAL.', 'Ông là một nhà nghiên cứu di truyền đoạt giải Nobel và không có liên quan đến DENDRAL.', 'Ông là một triết gia chuyển sang làm nghiên cứu máy tính và không tham gia vào DENDRAL.', 'Ông là một nhà khoa học nổi tiếng trong lĩnh vực vật lý và không liên quan đến DENDRAL.'] answer='Ông là một sinh viên chính quy của Herbert Simon và đã tham gia vào việc phát triển chương trình DENDRAL.' citation='5\nNăm 1963, McCarthy đã có các nghiên cứu về sử dụng logic để xây dựng chương trình \nngười tư vấ  Chương trình này được phát triển do khám phá của Robinson về phương pháp cải \ncách. Những công việc đầu tiên tạo ra những hệ thống mới của McCulloch và Pitts làm cho chúng \nphát triển. Các phương pháp nghiên cứu của Hebb đã được Widrow ủng hộ (Widrow và Hoff, \n1960; Widrow, 1962). Họ đã đặt tên mang nơ ron là mạng của ông, và cũng được Frank \nRosenblatt (1962) củng cố. Rosenblatt chứng minh rằng thuật toán mà ông nghiên cứu có thể \nthêm vào những khả năng của nhận thức phù hợp với bất cứ dữ liệu đầu vào nào. \n          Những nhà nghiên cứu AI cũng đã dự đoán về những thành công sau này. Herbert Simon đã \nphát biểu (1957): Không phải mục đích của tôi là làm các bạn ngạc nhiên, nhưng cách đơn giản \nnhất để có thể khái quát là hiện nay trên thế giới, máy móc có thể suy nghĩ, có thể học và sáng tạo \nđược. Hơn nữa, khả năng của nó là làm việc với tiến độ cao- trong tương lai rõ ràng – cho đến khi \nvấn đề chúng ta có thể giải được, sẽ cùng tồn tại với tư duy của con người có thể áp dụng được. \nNăm 1958, ông dự đoán trong 10 năm nữa, một máy tính có thể vô địch trong môn cờ vua, và các \nđịnh lý toán học mới sẽ được máy chứng minh.   \n1.2. CÁC TIỀN ĐỀ CƠ BẢN CỦA TTNT \nToàn cảnh về phương pháp giải quyết vấn đề hình thành trong thập kỉ đầu nghiên cứu AI là \nmục đích nghiên cứu nỗ lực liên kết các bước lập luận cơ bản với nhau để tìm ra phương pháp \nhoàn thiện. Các phương pháp này được coi là các phương pháp kém vì sử dụng thông tin kém về \nlĩnh vực. Đối với nhiều lĩnh vực phức tạp, thì các phương pháp thực hiện lại rất kém. Cách duy \nnhất quanh vấn đề là sử dụng kiến thức phù hợp hơn để có bước lặp rộng hơn và để giải quyết các \ntrường hợp nảy sinh nhất định trong các lĩnh vực nhỏ chuyên môn. Chúng ta chắc sẽ nói rằng giải \nquyết các vấn đề khó thì hầu như phải biết trước đáp án. \nChương trình DENDRAL (Buchanan, 1969) là một ví dụ sớm tiếp cận phương pháp này. \nNó được phát triển tại Stanford, đây chính là nơi Ed Feigenbaum (một sinh viên chính qui của \nHerbert Simon). Bruce Buchanan (một triết gia chuyển sang làm nghiên cứu máy tính) và Joshua \nLederberg (nhà nghiên cứu di truyền đoạt giải Nobel) đã hợp nhau lại để cùng suy luận, giải quyết \nvấn đề có cấu trúc phân tử từ những thông tin do máy đo quang phổ cung cấp. Dữ liệu đưa vào \nchương trình gồm các cấu trúc cơ bản của phân tử (Ví dụ C6H12NO2), và rất nhiều dải quang phổ \nđưa ra hàng loạt đoạn phân tử khác nhau khái quát chung khi nó cùng một lúc đưa ra các dòng \nđiện tử. Ví dụ dải quang phổ chứa đựng một điểm nhọn tại m=15 tương ứng với một dải của đoạn \nmethyl (CH3). \nPhiên bản sơ khai của chương trình khái quát được toàn bộ cấu trúc có thể bên trong bằng \nphân tử và sau đó phỏng đoán bằng cách quan sát mỗi dải quang phổ, so sánh nó với quang phổ \nthực tế. Như chúng  ta nghĩ thì điều này trở nên nan giải đối với các phân tử có kích thước đáng \nkể. Các nhà nghiên cứu DENDRAL khuyên các nhà phân tích dược khoa và cho thấy rằng họ \nnghiên cứu bằng cách tìm kiếm các phần bên trên của điểm nhọn trong dải quang phổ, điều đó \nđưa ra gợi ý chung về các cấu trúc nhỏ bên trong phân tử. Ví dụ, qui luật sau đây được sử dụng để \nnhận ra một nhóm nhỏ xeton (C=0)  \nNếu có hai đỉnh x1, x2 như sau: \n(a) x1+x2 = M+28 (M là khối lượng của phân tử) \n(b) x1-28 là một đỉnh \n(c) x2-28 là một đỉnh \n(d) Có ít nhất một đỉnh x1 hoặc x2 là đỉnh cao. Sau đó có một nhóm nhỏ xeton.   \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=3 idx_doc=2
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 66



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định đặc điểm của môi trường phân đoạn trong bối cảnh hành động của agent?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Môi trường phân đoạn không phụ thuộc vào các hành động trong đoạn trước
Option 2: Môi trường phân đoạn yêu cầu agent phải theo dõi liên tục
Option 3: Môi trường phân đoạn luôn là môi trường động
Option 4: Môi trường phân đoạn có thể thay đổi trong khi agent đang cân nhắc
Answer: Môi trường phân đoạn không phụ thuộc vào các hành động trong đoạn trước
Citation: Môi trường phân đoạn có đặc tính là các đoạn tiếp theo không phụ thuộc vào các hành động trong đoạn trước đó, điều này giúp agent không cần phải suy nghĩ xa và giảm độ phức tạp trong quyết định hành động.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định đặc điểm của môi trường phân đoạn trong bối cảnh hành động của agent, và câu trả lời được gợi ý đã nêu đúng rằng môi trường phân đoạn không phụ thuộc vào các hành động trong đoạn trước. Điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng liên quan đến môi trường phân đoạn, nhưng chỉ có đáp án gợi ý là đúng. Do đó, câu trả lời được gợi ý đạt yêu cầu.
cau hoi dung: question='Xác định đặc điểm của môi trường phân đoạn trong bối cảnh hành động của agent?' options=['Môi trường phân đoạn không phụ thuộc vào các hành động trong đoạn trước', 'Môi trường phân đoạn yêu cầu agent phải theo dõi liên tục', 'Môi trường phân đoạn luôn là môi trường động', 'Môi trường phân đoạn có thể thay đổi trong khi agent đang cân nhắc'] answer='Môi trường phân đoạn không phụ thuộc vào các hành động trong đoạn trước' citation='159\nmặt không thể của nó. Vì vậy, môi trường tiền định hoặc môi trường không tiền định đối với điểm \nnhìn của agent thường được cho là tốt nhất. \nPhân đoạn và không phân đoạn (Episodic vs. Nonepisodic) \nTrong môi trường phân đoạn, kinh nghiệm của agent bị phân ra thành từng đoạn. Trong \nmỗi đoạn gồm có sự nhận biết của agent và hành khi có được nhận biết đó. Đặc tính của hành \nđộng phụ thuộc vào chính đoạn đó, bởi vì các đoạn tiếp theo không phụ  vào các hành động trong \nđoạn trước đó. Môi trường phân đoạn là rất đơn giản vì agent không muốn nghĩ xa. \nTĩnh và Động (Static vs. Dynamic) \nNếu môi trường có thể thay đổi trong khi agent đang cân nhắc, thì chúng ta nói rằng môi \ntrường là động đối với agent, ngược lại môi trường là tĩnh. Môi trường tĩnh rất dễ giao tiếp bởi vì \nagent mong muốn  không phải theo dõi thế giới xung quanh trong khi đang quyết định lựa chọn \nhành động và cũng mong muốn không phải lo nghĩ thời gian đã trôi qua. Nếu môi trường không \nthay đổi theo thời gian nhưng sự thực hiện của agent thành công, thì chúng ta nói rằng môi trường \nphần nào là động. \nRời rạc và Liên tục (Discrete vs. Continuous) \nNếu có một số lượng giới hạn nhất định các tri giác và hành động rõ ràng thì ta nói rằng \nmôi trường là rời rạc. Môi trường “Chơi cờ” là rời rạc – có một số lượng cố định “nước đi có khả \nnăng” trong mỗi lần đi. Môi trường “Lái taxi” là liên tục - tốc độ, vị trí của taxi và các xe cộ khác \nnhận giá trị trong một khoảng giá trị liên tục8. \nChúng ta sẽ xem xét xem các kiểu môi trường khác nhau yêu cầu các agent chương trình \nkhác nhau như thế nào để xử lý chúng hiệu quả. Nó sẽ được đưa ra như bạn mong đợi, đó là \ntrường hợp khó nhất: môi trường không thể, môi trường không phân đoạn, môi trường động và \nmôi trường liên tục. Nó cũng có thể được đưa ra trong nhiều hoàn cảnh thực tế là rất phức tạp, đến \nmức phải thảo luận xem trên thực tế chúng có thực sự tiền định hay chúng được xem như không \ntiền định. \nMôi trường \nCó thể \nTiền định \nPhân đoạn\nTĩnh \nRời rạc \nChess with a clock \nYes \nYes \nNo \nSemi \nYes \nChess without a clock \nYes \nYes \nNo \nYes \nYes \nPoker \nNo \nNo \nNo \nYes \nYes \nBackgammon \nYes \nNo \nNo \nYes \nYes \nTaxi driving \nNo \nNo \nNo \nNo \nNo \nMedical diagnosis system \nNo \nNo \nNo \nNo \nNo \nImage-analysis system \nYes \nYes \nYes \nSemi \nNo \nPart-picking robot \nNo \nNo \nYes \nNo \nNo \nRefinery controller \nNo \nNo \nNo \nNo \nNo \nInteractive English tutor \nNo \nNo \nNo \nNo \nYes \n \n                                                 \n8  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=157 idx_doc=157
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 67



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để xác định tiến bộ của giải thuật trong một số thế hệ cho trước?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Bằng cách đo lường sự thay đổi của các alen trong quá trình tìm kiếm.
Option 2: Bằng cách so sánh số lượng alen hội tụ với tổng số alen.
Option 3: Bằng cách đánh giá sự thay đổi trong cấu trúc của mạng nơ ron.
Option 4: Bằng cách phân tích độ phức tạp của giải thuật trong từng thế hệ.
Answer: Bằng cách so sánh số lượng alen hội tụ với tổng số alen.
Citation: Tiến bộ của giải thuật được xác định bằng cách so sánh số lượng alen hội tụ với tổng số alen, nếu vượt quá một tỷ lệ nhất định thì tìm kiếm sẽ kết thúc.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến việc xác định tiến bộ của giải thuật trong một số thế hệ, và câu trả lời được gợi ý đã nêu rõ cách thức thực hiện điều này bằng cách so sánh số lượng alen hội tụ với tổng số alen, điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng đều có thể tìm thấy trong tài liệu và liên quan đến việc đo lường tiến bộ của giải thuật.
cau hoi dung: question='Làm thế nào để xác định tiến bộ của giải thuật trong một số thế hệ cho trước?' options=['Bằng cách đo lường sự thay đổi của các alen trong quá trình tìm kiếm.', 'Bằng cách so sánh số lượng alen hội tụ với tổng số alen.', 'Bằng cách đánh giá sự thay đổi trong cấu trúc của mạng nơ ron.', 'Bằng cách phân tích độ phức tạp của giải thuật trong từng thế hệ.'] answer='Bằng cách so sánh số lượng alen hội tụ với tổng số alen.' citation='145\ntrước có cùng (hoặc tương đương đối với các biểu diễn không nhị phân) giá trị trong \nalen này. Nếu số alen hội tụ vượt quá số phần trăm nào đó của tổng số alen, việc tìm \nkiếm sẽ kết thúc.  \n\x1f Dựa trên ý nghĩa đặc biệt của một nhiễm sắc thể: đo tiến bộ của giải thuật trong một số \nthế hệ cho trước. Nếu tiến bộ này nhỏ hơn một hằng số ε  xác định, kết thúc tìm kiếm. \n5.4. CÁC HỆ THỐNG THÔNG MINH LAI \n \nMỗi một hệ thống thông minh có những ưu điểm và hạn chế riêng của nó. Chúng ta có \nrhẻ nhìn nhận các hệ thống kết hợp nhiều phương pháp trí tuệ hiện đại theo các nhóm như sau \n5.4.1. Hệ thống Nơ ron -Mơ \n \nCác hệ thống nơ ron mờ là sự kết hợp của hai phương pháp mờ và nơ ron. Trong mạng \nnơ ron: một số lớp được chọn làm chức năng của hàm thuộc. Chức năng đó kết hợp khả năng \nphân lớp đối tương của hai công cụ. Sản phẩm được xayy dựng có thể là phần cứng và phần \nmềm \n \nViệc kết hợp (hay lai) này xuất phát từ ưu điểm của mạng nơ ron là thông minh hoá trên \ncác phần tư, còn logic mờ làm nhiệm vụ khái quát, suy diễn.  \n5.4.2. Hệ thống Nơ ron – Giải thuật di truyền \nNhư ta biết mạng nơ ron có khả năng cao trong xử lý song somg, phi tuyến và có khả năng \ngiải nhiều bài toán tối ưu cục bộ. Để giải các bài toán tối ưu toàn cục, người ta thường dùng giải \nthuật di truyền để tối ưu toàn cục sau đó dùng mạng nơ ron nhân tạo để tói ưu mịn (cục bộ). Giải \npháp này mang lại hiệu quả cao, hoàn thiện hơn. Tuy nhiên, giá phải trả là tăng độ phức tạp \n5.4.3. Các hệ thống lai khác \n\x83 \nMột sô phương pháp khác là kết hợp cả mạng nơ ron giải thuật di truyền và logic mờ. Về \nmặt khoa học, vấn đề đó mang tính khách quan. Trong thực tế độ phức tạp ngày càng cao. \n\x83 \nKết hợp phương pháp thống kê hiện đại (như phương pháp Bayes trong suy diễn mờ)  \n5.5. CÁC AGENT THÔNG MINH \nPhần này thảo luận “agent thông minh” là gì, nó có quan hệ với môi trường như thế \nnào, nó được đánh giá như thế nào, và chúng ta có thể xây dựng nó như thế nào? \n5.5.1. Giới thiệu \n \nHình 5.16 Các agent tương tác với môi trường thông qua sensor và các effector \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=143 idx_doc=142
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 68



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định vai trò của logic vị từ cấp một trong biểu diễn tri thức.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Logic vị từ cấp một cho phép mô tả các đối tượng và quan hệ giữa chúng.
Option 2: Logic vị từ cấp một chỉ sử dụng các biến mệnh đề đơn giản.
Option 3: Logic vị từ cấp một không liên quan đến các thuộc tính của đối tượng.
Option 4: Logic vị từ cấp một chỉ áp dụng cho các số nguyên và số hữu tỉ.
Answer: Logic vị từ cấp một cho phép mô tả các đối tượng và quan hệ giữa chúng.
Citation: Logic vị từ cấp một đóng vai trò quan trọng trong biểu diễn tri thức vì khả năng biểu diễn của nó cho phép ta biểu diễn tri thức về thế giới với các đối tượng, các thuộc tính của đối tượng và các quan hệ của đối tượng.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định vai trò của logic vị từ cấp một trong biểu diễn tri thức, và câu trả lời được gợi ý đã nêu rõ rằng logic vị từ cấp một cho phép mô tả các đối tượng và quan hệ giữa chúng, điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng liên quan đến logic vị từ cấp một, trong đó có một số đáp án không chính xác, nhưng câu trả lời được gợi ý là đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Xác định vai trò của logic vị từ cấp một trong biểu diễn tri thức.' options=['Logic vị từ cấp một cho phép mô tả các đối tượng và quan hệ giữa chúng.', 'Logic vị từ cấp một chỉ sử dụng các biến mệnh đề đơn giản.', 'Logic vị từ cấp một không liên quan đến các thuộc tính của đối tượng.', 'Logic vị từ cấp một chỉ áp dụng cho các số nguyên và số hữu tỉ.'] answer='Logic vị từ cấp một cho phép mô tả các đối tượng và quan hệ giữa chúng.' citation='54\nThuật toán Robin son (1971)   \nRobíson đã cai tiến thuật toán Havard. Cách thức chứng minh như sau: \nBước 1: Phát biểu lại giả thiết (GT) và kết luận của bài toán dưới dạng chuẩn sau: \n                                GT1,GT2,…, GTn  → KL1,KL2,…, KLm \nTrong đó các GTi, KLj  được xây dựng từ các biến mệnh đề và các phép nối   ∧ ,∨,⎤,  \nBước 2: Thay dấu “∧”  ở GTi  và “∨” ở KLj bằng các dấu “,” \n \nBước 3: Chuyển vế KLj sang vế GTi  với dấu phủ định để còn một vế, tức là : \n                           GT1,GT2,…, GTn , ⎤, KL1,⎤, KL2,…, ⎤KLm \nBước 4:  Xây dựng một mệnh đề mới bằng cách tuyển một cặp mệnh đề từ danh sách các mệnh \nđề. Nếu mệnh đề mới có các biến mệnh đề đối ngẫu thì mệnh đề đó được loại bỏ. \nBước 5: Bổ sung mệnh đề mới này vào danh sách và lặp lai bươc 4 \nBước 6: Bài toán được chứng minh khi và chi khi chỉ còn hai mệnh đề đói ngẫu. Ngược lại thì bài \ntoán không được chứng minh. \nThuật toán này thực chất là chứng minh bằng phản chứng \n3.5.6 Biểu diễn tri thức bằng Logic vị từ \nLogic mệnh đề cho phép ta biểu diễn các sự kiện. Mỗi kí hiệu trong logic mệnh đề được minh họa \nnhư là một sự kiện trong thế giới hiện thực, sử dụng các kết nối logic ta có thể tạo ra các câu phức \nhợp biểu diễn các sự kiện mang ý nghĩa phức tạp hơn. Như vậy, khả năng biểu diễn của logic \nmệnh đề chỉ giới hạn trong phạm vi thế giới các sự kiện.  \nThế giới hiện thực bao gồm các đối tượng. Mỗi đối tượng có những tính chất riêng để phân biệt \nnó với các đối tượng khác. Các đối tượng lại có quan hệ với nhau. Các mối quan hệ rất đa dạng \nvà phong phú. Chúng ta có thể liệt kê rất nhiều ví dụ về đối tượng, tính chất, quan hệ.  \n\x1fĐối tượng: một cái bàn, một cái nhà, một cái cây, một con người, một con số.... \n\x1fTính chất: Cái bàn có thể có tính chất: có bốn chân, làm bằng gỗ, không có ngăn kéo. Con số có \nthể có tính chất là số nguyên, số hữu tỉ, là số chính phương... \n\x1fQuan hệ: cha con, anh em, bè bạn (giữa con người); lớn hơn, nhỏ hơn, bằng nhau (giữa các con \nsố); bên trong, bên ngoài nằm trên nằm dưới (giữa các đồ vật)... \n\x1fHàm: Một trường hợp riêng của quan hệ là quan hệ hàm. Chẳng hạn, vì mỗi người có một mẹ, \ndo đó ta có quan hệ hàm ứng mỗi người với mẹ của nó.  \n \nMục này dành cho nghiên cứu logic vị từ cấp một với tư cách là một ngôn ngữ biểu diễn tri thức. \nLogic vị từ cấp một đóng vai trò quan trọng trong biểu diễn tri thức vì khả năng biểu diễn của nó \n(nó cho phép ta biểu diễn tri thức về thế giới với các đối tượng, các thuộc tính của đối tượng và \ncác quan hệ của đối tượng), hơn nữa, nó là cơ sở cho nhiều ngôn ngữ logic khác. \n3.5.6.1 Cú pháp và ngữ nghĩa của logic vị từ cấp 1 \nLogic vị từ cấp một là mở rộng của logic mệnh đề. Nó cho phép ta mô tả thế giới với các đối \ntượng, các thuộc tính của đối tượng và các mối quan hệ giữa các đối tượng. Nó sử dụng các biến \n(biến đối tượng) để chỉ các đối tượng trong một miền đối tượng nào đó. Để mô tả các thuộc tính \ncủa đối tượng, các quan hệ giữa các đối tượng, trong logic vị từ, người ta đưa vào các vị từ \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=52 idx_doc=51
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 69



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định chi phí tìm kiếm trong môi trường tĩnh khi lái xe từ Arad đến Bucarét là bao nhiêu?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Bằng không
Option 2: Bằng tổng độ dài đường đi
Option 3: Tỷ lệ thuận với thời gian tính toán
Option 4: Bằng chi phí do sự cố dọc đường
Answer: Bằng không
Citation: Trong môi trường tĩnh, chi phí tìm kiếm bằng không vì phạm vi thực hiện là độc lập với thời gian.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định chi phí tìm kiếm trong môi trường tĩnh khi lái xe từ Arad đến Bucarét. Theo tài liệu, trong môi trường tĩnh, chi phí tìm kiếm bằng không vì phạm vi thực hiện là độc lập với thời gian. Câu trả lời được gợi ý "Bằng không" hoàn toàn chính xác và phù hợp với thông tin trong tài liệu. Hơn nữa, các đáp án khác cũng được liệt kê và có thể tìm thấy trong tài liệu, do đó, câu trả lời được gợi ý là hợp lệ.
cau hoi dung: question='Xác định chi phí tìm kiếm trong môi trường tĩnh khi lái xe từ Arad đến Bucarét là bao nhiêu?' options=['Bằng không', 'Bằng tổng độ dài đường đi', 'Tỷ lệ thuận với thời gian tính toán', 'Bằng chi phí do sự cố dọc đường'] answer='Bằng không' citation='17\nthấp)? Thứ ba, chi phí tìm kiếm với thời gian tìm kiếm và bộ nhớ yêu cầu để tìm một giải pháp là \nbao nhiêu? Chi phí toàn bộ của việc tìm kiếm là tổng chi phí đường đi và chi phí tìm kiếm (S). \n \nĐối với vấn đề tìm đường đi từ Arad đến Bucarét, chi phí đường đi tỷ lệ thuận với tổng độ \ndài của đường, cộng thêm chi phí do sự cố dọc đường. Chi phí tìm kiếm phụ thuộc vào các tình \nhuống. Trong môi trường tĩnh, nó bằng không vì phạm vi thực hiện là độc lập với thời gian. Nếu \nphải cấp tốc đến Bucarét, môi trường là bán động bởi vì việc cân nhắc lâu hơn sẽ làm chi phí \nnhiều hơn. Trong trường hợp này, chi phí tìm kiếm có thbi ì ến thiên xấp xỉ tuyến tính với thời \ngian tính toán(ít nhất với một khoảng thời gian nhỏ). Do đó, để tính toán tổng chi phí, chúng ta \ncần phải bổ sung thêm các giá trị là dặm và mili giây. Điều này không phải luôn dễ dàng bởi vì \nkhông có một “tỷ lệ trao đổi chính thức” giữa hai đại lượng này. Agent bằng cách nào đó phải \nquyết định những tài nguyên nào sẽ dành cho việc tìm kiếm và những tài nguyên nào dành cho \nviệc thực hiện. Đối với những vấn đề có không gian trạng thái rất nhỏ, dễ dàng tìm ra giải pháp \nvới chi phí đường đi thấp nhất. Nhưng đối với những vấn đề phức tạp, lớn, cần phải thực hiện một \nsự thoả hiệp- agent có thể tìm kiếm trong một thời gian dài để tìm ra giải pháp tối ưu hoặc agent \ncó thể tìm kiếm trong một thời gian ngắn hơn và nhận được một giải pháp với chi phí đường đi \ncao hơn một chút. Chọn lựa trạng thái và hành động \n \nBây giờ chúng ta có các định nghĩa mới, chúng ta hãy bắt đầu sự điều tra các vấn đề của \nchúng ta với một vấn đề khá dễ như sau: “ Lái xe từ Arad đến Bucarét sử dụng các con đường trên \nbản đồ” Một không gian trạng thái có xấp xỉ 20 trạng thái, mỗi trạng thái được xác định bởi vị trí, \nđược ghi rõ là một thành phố. Như vậy, trạng thái ban đầu là “ở Arad” và kiểm tra mục tiêu là \n“đây có phải là Bucarét không?”. Các toán hạng tương ứng với việc lái dọc theo các con đường \ngiữa các thành phố. \n \nCác bài toán ví dụ  \n \nPhạm vi của các môi trường nhiệm vụ mà có thể được mô tả đặc điểm bởi các vấn đề được \nđịnh nghĩa rõ ràng là rất rộng lớn. Chúng ta có thể phân  biệt  giữa cái gọi là các bài toán trò \nchơi,  mà nhằm để minh hoạ hay thực hành rất nhiều các phương pháp giải quyết vấn đề, và cái \ngọi là các bài toán thuộc thế giới thực  mà sẽ là các vấn đề khó khăn hơn và mọi người thực sự \nquan tâm đến các giải pháp để giải quyết các vấn đề này. Trong phần này, chúng ta sẽ đưa ra ví dụ \ncho cả hai loại vấn đề đó. Các vấn đề đồ chơi tất  nhiên có thể mô tả một cách chính xác, ngắn \ngọn.  Điều đó có nghĩa là các nhà nghiên cứu khác nhau có thể dễ dàng sử dụng các vấn đề này để \nso sánh việc thực hiện của các giải thuật. Ngược lại, các vấn đề thế giới thực lại không thể có một \nsự miêu tả một cách đơn giản,  nhưng chúng ta sẽ cố gắng đưa ra một cách chung nhất về sự mô tả \nchính xác các vấn đề này. \n \nCác bài toán Trò chơi \n \nTrò chơi 8 quân cờ (Cờ ta canh) \n \nMột ví dụ của trò chơi 8 quân cờ được chỉ ra trong hình 2.1, gồm một bảng kích thước 3 x 3 \nvới 8 quân cờ được đánh số từ 1 đến 8 và một ô trống. Một quân cờ đứng cạnh ô trống có thể đi \nvào ô trống. Mục tiêu là tiến tới vị trí các quân cờ như ở trong hình bên phải. Một mẹo quan trọng \ncần chú ý là thay vì dùng các toán tử như “ chuyển quân cờ số 4 vào ô trống”, sẽ tốt hơn nếu có \ncác toán tử như “ ô trống thay đổi vị trí với quân cờ chuyển sang bên trái của nó”, bởi vì loại toán \ntử thứ hai này sẽ ít hơn. Điều đó sẽ giúp chúng ta có các khái niệm như sau: \n• \nCác trạng thái: một sự mô tả trạng thái chỉ rõ vị trí của mỗi quân cờ trong 8 quân cờ ở một \ntrong 9 ô vuông. Để có hiệu quả, sẽ có ích nếu trạng thái bao gồm cả vị trí của ô trống. \n• \nCác toán tử: ô trống di chuyển sang trái, phải, lên trên, đi xuống. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=15 idx_doc=14
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 70



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định số lượng khả năng có thể để xếp thử các con hậu trong bài toán 8 con hậu.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: 648
Option 2: 2057
Option 3: 1000
Option 4: 3000
Answer: 2057
Citation: Tính toán nhanh cho thấy chỉ có 2057 khả năng có thể để xếp thử các con hậu.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định số lượng khả năng để xếp thử các con hậu trong bài toán 8 con hậu, và câu trả lời được gợi ý là 2057, đúng với thông tin trong tài liệu. Các đáp án khác cũng có trong danh sách, trong đó 2057 là đáp án chính xác. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Xác định số lượng khả năng có thể để xếp thử các con hậu trong bài toán 8 con hậu.' options=['648', '2057', '1000', '3000'] answer='2057' citation='19\n               Hình 2.2   Một giải pháp đối với bài toán 8 con hậu \n \n◊ Kiểm tra mục tiêu: 8 con hậu trên bàn cờ, không con nào ăn con nào \n \n◊ Chi phí đường đi: bằng không \n \n◊ Cũng có các trạng thái và các toán tử có thể khác \n.Hãy xem xét sự công thức hoá  \n          ◊ Các trạng thái: bất cứ sự sắp xếp của từ 0 đến 8 con hậu trên bàn cờ \n \n◊ Các toán tử: thêm một con hậu vào bất cứ ô nào \n \nTrong cách công thức hoá này, chúng ta có 648 dãy có thể để thử. Một sự lựa chọn khôn \nkhéo sẽ sử dụng thực tế là việc đặt một con hậu vào ô mà nó đã bị chiếu sẽ không thành công bởi \nvì việc đặt tất cả các con hậu còn lại sẽ không giúp nó khỏi bị ăn(bị con hậu khác chiếu). Do vậy \nchúng ta có thể thử cách công thức hoá sau: \n \n◊ Các trạng thái: là sự sắp xếp của 0 đến 8 con hậu mà không con nào ăn con  nào \n \n◊ Các toán tử: đặt một con hậu vào cột trống bên trái nhất mà nó không bị  ăn bởi bất cứ con \nhậu nào khác. \n \nDễ thấy rằng các hành động đã đưa ra chỉ có thể tạo nên các trạng thái mà không có sự ăn \nlẫn nhau; nhưng đôi khi có thể không có hành động nào. Tính toán nhanh cho thấy chỉ có 2057 \nkhả năng có thể để xếp thử các con hậu. Công thức hoá đúng đắn sẽ tạo nên một sự khác biệt rất \nlớn đối với kích thước của không gian tìm kiếm. Các sự xem xét tương tự cũng sẽ được áp dụng \ncho cách công thức hoá trạng thái đầy đủ. Chẳng hạn, chúng ta có thể thiết lập vấn đề như sau: \n \n◊ Các trạng thái: là sự sắp xếp của 8 con hậu, mỗi con trên một cột. \n \n◊ Các toán tử: di chuyển bất cứ con hậu nào bị chiếu tới một ô khác trên cùng cột. \n \nCách công thức này sẽ cho phép các giải thuật cuối cùng tìm ra một giải pháp, nhưng sẽ là \ntốt hơn nếu di chuyển tới ô bị chiếu. \nCác bài toán thế giới thực \n \nTìm kiếm đường đi \nChúng ta đã xem việc tìm kiếm đường đi được định nghĩa như thế nào bằng các thuật ngữ \nchỉ các vị trí xác định và các phép di chuyển dọc theo các đường nối giữa chúng. Các giải thuật \ntìm kiếm đường đi được sử dụng trong rất nhiều các ứng dụng, như tìm đường đi  trong các mạng \nmáy tính , trong các hệ thống tư vấn du lịch tự động, và trong các hệ thống lập kế hoạch cho các \nchuyến du lịch bằng máy bay. ứng dụng cuối cùng có lẽ phức tạp hơn, bởi vì du lịch bằng máy \nbay có chi phí đường đi rất phức tạp, liên quan đến vấn đề tiền nong, chất lượng ghế ngồi, thời \ngian trong ngày, loại máy bay, các giải thưởng cho các lộ trình bay thường xuyên, v.v Hơn nữa, \ncác hành động trong bài toán không có kết quả được biết đầy đủ: các chuyến bay có thể đến chậm \nhay đăng ký trước quá nhiều, có thể bị mất liên lạc, sương mù hoặc sự bảo vệ khẩn cấp có thể gây \nra sự trì hoãn. \n \nBài toán người bán hàng rong và các chuyến du lịch \nHãy xét bài toán kinh điển sau: “ Thăm tất cả các thành phố mỗi thành phố thăm ít nhất một \nlần, khởi hành và kết thúc ở Bucaret”. Điều này rất giống với tìm kiếm đường đi, bởi vì các toán \ntử vẫn tương ứng với các chuyến đi giữa các thành phố liền kề. Nhưng đối với bài toán này, \nkhông gian trạng thái phải ghi nhận nhiều thông tin hơn. Ngoài vị trí của agent, mỗi trạng thái \nphải lưu lại được các thành phố mà agent đã đi qua. Như vậy, trạng thái ban đầu sẽ là “ ở Bucaret: \nđã thăm{Bucaret}.”, một trạng thái trung gian điển hình sẽ là “ ở Vaslui:  đã thăm {Bucaret, \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=17 idx_doc=16
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 71



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định một yếu tố quan trọng trong việc định nghĩa một agent có lý trí lý tưởng là gì?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Sự tự trị của agent
Option 2: Sự hiểu biết có sẵn của agent
Option 3: Kinh nghiệm của agent
Option 4: Môi trường hoạt động của agent
Answer: Sự tự trị của agent
Citation: Sự tự trị là yếu tố quan trọng trong việc xác định một agent có lý trí lý tưởng, vì nếu các hành vi của agent hoàn toàn dựa vào sự hiểu biết có sẵn mà không cần chú ý đến tri giác của nó, thì agent đó sẽ thiếu sự tự trị.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định một yếu tố quan trọng trong việc định nghĩa một agent có lý trí lý tưởng, và câu trả lời được gợi ý là 'Sự tự trị của agent' là chính xác. Điều này phù hợp với nội dung trong tài liệu, nơi nhấn mạnh rằng sự tự trị là một yếu tố quan trọng trong việc xác định hành vi của agent. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là đúng và phù hợp nhất với câu hỏi.
cau hoi dung: question='Xác định một yếu tố quan trọng trong việc định nghĩa một agent có lý trí lý tưởng là gì?' options=['Sự tự trị của agent', 'Sự hiểu biết có sẵn của agent', 'Kinh nghiệm của agent', 'Môi trường hoạt động của agent'] answer='Sự tự trị của agent' citation='150\n \nKết quả tri giác x \nHành vi z \n1.0 \n1.000000000000000 \n1.1 \n1.048808848170152 \n1.2 \n1.095445115010332 \n1.3 \n1.140175425099138 \n1.4 \n1.183215956619923 \n1.5 \n1.224744871391589 \n1.6 \n1.264911064067352 \n1.7 \n1.303840481040530 \n1.8 \n1.341640786499847 \n1.9 \n1.378404875209022 \n \n \n \nfunction SQRT(x) \n    Begin \n        z ← 1.0  /* initial guess*/ \nrepeat until  ⎢z2 – x ⎢<10-15 \n           z ← z – (z2 - x)/(2z) \nend \nreturn z \nBảng 5.3  Một phần của phép ánh xạ lý tưởng của bài toán căn bậc hai gần đúng (lấy xấp xỉ \nđến 15 chữ số), và một chương trình tương ứng để thực hiện phép ánh xạ lý tưởng. \n \nSự tự trị (Autonomy) \nCó một điều nữa cần quan tâm trong việc định nghĩa một agent có lý trí lý tưởng: ở phần \n“Sự hiểu biết có sẵn – (built-in knowledge)”. Nếu các hành vi của agent được bố trí hoàn toàn \ntrong “sự hiểu biết có sẵn”, thí dụ rằng nó không cần chú ý tới các kết quả tri giác của nó, thì \nchúng ta nói rằng agent thiếu sự tự trị. Cho ví dụ, nếu nhà sản xuất đồng hồ có thể thấy trước rằng \nchủ nhân của chiếc đồng hồ sẽ đến Australia vào một ngày nào đó, thì một cơ chế có thể được cài \nđặt sẵn để điều chỉnh các kim một cách tự động 6 giờ cho đúng. Dĩ nhiên điều đó có thể thực hiện \nthành công, nhưng sự thông minh dường như là việc của người thiết kế đồng hồ hơn là của chính \nchiếc đồng hồ. \nCách hành động của agent có thể được bố trí vào trong cả “kinh nghiệm của chính nó” và \n“sự hiểu biết có sẵn” trong khi xây dựng cấu trúc của agent, agent đó hoạt động trong một môi \ntrường cụ thể. Một hệ thống là “tự trị - autonomous4” tới một mức độ nhất định đó là hệ thống mà \ncách hành động được quyết định bởi chính kinh nghiệm của nó. Mặc dù nó có thể là quá khó khăn \nđể đạt được sự tự trị hoàn toàn: khi agent có ít hoặc không có kinh nghiệm, nó phải hành động \nngẫu nhiên trừ khi người thiết kế đưa ra một vài sự giúp đỡ. Vì vậy, khi mà sự tiến hoá cung cấp \ncho động vật với đầy đủ các phản xạ tự nhiên thì chúng có thể tồn tại đủ để tự học tập, nó có lý để \ncung cấp một agent thông minh nhân tạo với một vài sự hiểu biêt ban đầu giống như năng lực để \nhọc tập. \nSự tự trị không chỉ phù hợp với trực giác của chúng ta mà nó còn là một ví dụ của thực \ntiễn cơ sở khoa học. Một agent hoạt động trên cơ sở của các giả định sẽ chỉ hoạt động thành công \nkhi hiểu rõ các giả định, và như vậy thiếu đi sự linh hoạt. Giả sử, cho ví dụ con bọ hung. Sau khi \ntìm ra tổ và đẻ trứng, nó đem về các viên phân từ một đống phân gần đó để bịt lối vào; nếu viên \nphân bị rơi trên đường đi, con bọ hung sẽ tiếp tục làm và bịt lối vào tổ với những viên phân khác \n                                                 \n4 Thuật ngữ “tự trị - autonomous” cũng con có ý nghĩa nào đó giống như “không phải dưới sự điều khiển trực \ntiếp của một người”, ví dụ sự hoạt động của làn xe trên đường là tự trị. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=148 idx_doc=148
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 72



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định dạng chuẩn hội của công thức (P ⇒ Q) ∨ l(R ∨ lS) sau khi chuẩn hóa.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: (lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S)
Option 2: (P ∨ Q) ∧ (R ∨ S)
Option 3: (lP ∧ Q) ∨ (lR ∨ S)
Option 4: (P ∧ Q) ∨ (lR ∧ lS)
Answer: (lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S)
Citation: Công thức (P ⇒ Q) ∨ l(R ∨ lS) được chuẩn hóa thành (lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S) theo quy trình chuẩn hóa công thức về dạng chuẩn hội.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định dạng chuẩn hội của công thức (P ⇒ Q) ∨ l(R ∨ lS) sau khi chuẩn hóa, và câu trả lời được gợi ý (lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S) là chính xác. Câu trả lời này đúng với câu hỏi và có thể tìm thấy trong tài liệu. Ngoài ra, câu trả lời được gợi ý cũng là một trong các đáp án khác được liệt kê, điều này xác nhận tính chính xác của nó.
cau hoi dung: question='Xác định dạng chuẩn hội của công thức (P ⇒ Q) ∨ l(R ∨ lS) sau khi chuẩn hóa.' options=['(lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S)', '(P ∨ Q) ∧ (R ∨ S)', '(lP ∧ Q) ∨ (lR ∨ S)', '(P ∧ Q) ∨ (lR ∧ lS)'] answer='(lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S)' citation='48\n(A ∨ B) ∨ C ≡ A ∨ (B ∨ C) \n(A ∧ B) ∧ C ≡ A ∧ (B ∧ C) \n• \nLuật phân phối \nA ∧ (B ∨ C) ≡ (A ∧ B) ∨ (A ∧ C) \nA ∨ (B ∧ C) ≡ (A ∨ B) ∧ (A ∨ C) \n3.5.2.2  Dạng chuẩn tắc \nCác công thức tương đương có thể xem như các biểu diễn khác nhau của cùng một sự kiện. Để dễ \ndàng viết các chương trình máy tính thao tác trên các công thức, chúng ta sẽ chuẩn hóa các công \nthức, đưa chúng về dạng biểu diễn chuẩn được gọi là dạng chuẩn hội. Một công thức ở dạng \nchuẩn hội nếu nó là hội của các câu tuyển. Nhớ lại rằng, câu tuyển có dạng A1 ∨....∨ Am trong đó \ncác Ai là literal. Chúng ta có thể biến đổi một công thức bất kỳ về công thức ở dạng chuẩn hội \nbằng cách áp dụng thủ tục sau.  \n• \nBỏ các dấu kéo theo (⇒) bằng cách thay (A⇒B) bởi (lAvB). \n• \nChuyển các dấu phủ định (l) vào sát các ký hiệu mệnh đề bằng cách áp dụng luật De \nMorgan và thay l(lA) bởi A. \n• \nÁp dụng luật phân phối, thay các công thức có dạng A∨(B∧C) bởi (A ∨ B) ∧ (A ∨ B). \nVí dụ: Ta chuẩn hóa công thức (P ⇒ Q) ∨ l(R ∨ lS): \n     (P ⇒ Q) ∨ l(R ∨ lS) ≡ (lP ∨ Q) ∨ (lR ∧ S)  \n≡ ((lP ∨ Q)vlR) ∧ ((lP ∨ Q) ∨ S)  \n≡ (l P ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S).  \nNhư vậy công thức (P⇒ Q) ∨ l(R ∨ lS) được đưa về dạng chuẩn hội (lP ∨ Q ∨ lR) ∧ (lP ∨ Q ∨ S). \nKhi biểu diễn tri thức bởi các công thức trong logic mệnh đề, cơ sở tri thức là một tập nào đó các \ncông thức. Bằng cách chuẩn hoá các công thức, cơ sở tri thức là một tập nào đó các câu tuyển.  \n3.5.3. Các câu Horn: \nỞ trên ta đã chỉ ra, mọi công thức đều có thể đưa về dạng chuẩn hội, tức là hội của các tuyển, mỗi \ncâu tuyển có dạng: \n \nlP1 ∨........∨ lPm ∨ Q1 ∨.....∨ Qn  \ntrong đó Pi, Qi là các ký hiệu mệnh đề (literal dương) câu này tương đương với câu: \n \n P1 ^.......^ lPm => Q1 ∨.....∨ Qn  \nDạng câu này được gọi là câu Kowalski (do nhà logic Kowalski đưa ra năm 1971). \n \nKhi n <=1, tức là câu tuyển chỉ chứa nhiều nhất một literal dương, ta có một dạng câu đặc \nbiệt quan trọng được gọi là câu Horn (mang tên nhà logic Alfred Horn, năm 1951).  \n \nNếu m>0, n=1, câu Horn có dạng: \n \nP1 ∧.....∧ Pm => Q  \nTrong đó Pi \n, Q là các literal dương. Các Pi được gọi là các điều kiện (hoặc giả thiết), còn Q \nđược gọi là kết luận (hoặc hệ quả). Các câu Horn dạng  này còn được gọi là các luật if-then và \nđược biểu diễn như sau: \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=46 idx_doc=45
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 73



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Tính toán xác suất Pr(B) khi biết Pr(A) và Pr(B|A).
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[tính toán]
Option 1: Pr(B) = Pr(B|A) * Pr(A)
Option 2: Pr(B) = Pr(A) / Pr(B|A)
Option 3: Pr(B) = Pr(A) + Pr(B|A)
Option 4: Pr(B) = Pr(B|A) - Pr(A)
Answer: Pr(B) = Pr(B|A) * Pr(A)
Citation: Công thức Pr(B) = Pr(B|A) * Pr(A) được nêu rõ trong nội dung, cho thấy cách tính xác suất B dựa vào xác suất có điều kiện của B khi A đã xảy ra và xác suất của A.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu tính toán xác suất Pr(B) dựa trên Pr(A) và Pr(B|A), điều này hoàn toàn phù hợp với nội dung tài liệu đã cung cấp. Câu trả lời được gợi ý là đúng và chính xác, vì nó sử dụng công thức Pr(B) = Pr(B|A) * Pr(A) được nêu rõ trong tài liệu. Các đáp án khác cũng được liệt kê, trong đó có một số đáp án không đúng, nhưng câu trả lời gợi ý vẫn là chính xác và phù hợp với tài liệu.
cau hoi dung: question='Tính toán xác suất Pr(B) khi biết Pr(A) và Pr(B|A).' options=['Pr(B) = Pr(B|A) * Pr(A)', 'Pr(B) = Pr(A) / Pr(B|A)', 'Pr(B) = Pr(A) + Pr(B|A)', 'Pr(B) = Pr(B|A) - Pr(A)'] answer='Pr(B) = Pr(B|A) * Pr(A)' citation='74\nPr(B) = Pr(B⏐A)Pr(A)  \n \n(3) \ntrong đó Pr(B), Pr(A) là xác suất của sự kiện B, A tương ứng (tức là mức độ chắc chắn của B, A \ntương ứng), còn Pr(B⏐A) là xác suất có điều kiện của B khi A đã xảy ra, ở đây Pr(B⏐A) là mức \nđộ chắc chắn của luật  A ⇒ B, tức là bằng C. \nTrong trường hợp luật có n (n > 1) điều kiện, tức là các luật dạng (1), ta xem A = \nn\nA\nA\n∧\n∧…\n1\n. \nTrong trường hợp này, mức độ chắc chắn của A, Pr(A) được tính bằng các phương pháp khác \nnhau, tuỳ thuộc vào các sự kiện Ai (i = 1, ..., n) là độc lập hay phụ thuộc. \nGiả sử các sự kiện Ai (i = 1, ..., n) là độc lập, khi đó \nPr(A) = Pr(A1) ... Pr(An) \n \n(4) \nVí dụ. Giả sử cơ sở tri thức của hệ chứa luật sau \n  IF    1.  X có tiền án, và \n \n2.  X có thù oán với nạn nhân Y, và \n \n3.  X đưa ra bằng chứng ngoại phạm sai \n  THEN  X là kẻ giết Y. \nvới mức độ chắc chắn 90%. \nGiả sử ta có các sự kiện \nHung có tiền án, với mức độ chắc chắn là 1. \nHung có thù oán với nạn nhân Meo, với mức độ chắc chắn là 0,7. \nHung đưa ra bằng chứng ngoại phạm sai, với mức độ chắc chắn là 0,8. \nTừ các sự kiện và luật trên, ta có \nPr(A) = 1.0,7.0,8 = 0,56 \nPr(B) = 0,9.0,56 = 0,504 \nNhư vậy mức độ chắc chắn của kết luận “Hung là kẻ giết Meo” là 50, 4%. \nCông thức (4) chỉ áp dụng cho các sự kiện A1, ..., An là độc lập (tức sự xuất hiện của sự kiện này \nkhông ảnh hưởng gì đến sự xuất hiện của các sự kiện khác). Nếu các sự kiện A1, ..., An là phụ \nthuộc, ta có thể tính mức độ chắc chắn của điều kiện của luật, A = \nn\nA\nA\n∧\n∧…\n1\n, theo công thức \nsau: \nPr(A) = min (Pr(A1), ..., Pr(An)) \n \n(5) \nChẳng hạn, với các thông tin trong ví dụ trên, từ công thức (5) ta có \nPr(A) = min(1, 0,7, 0,8) = 0,7 \nDo đó  \nPr(B) = 0,9. 0,7 = 0,63 \nNgoài công thức (5), người ta còn đưa ra các phương pháp khác để tính mức độ chắc chắn Pr(A), \nkhi mà A = \nn\nA\nA\n∧\n∧…\n1\n và các A1, ..., An không độc lập. \n3.5.6.5.4 Biểu diễn tri thức bằng mạng ngữ nghiã \n \nMạng ngữ nghĩa là một phương pháp biểu diễn tri thức dễ hiểu nhất. Phương pháp biểu \ndiễn dựa trên đồ thị, trong đó đỉnh là là các đối tượng (hay khái niệm) còn các cung là là các mối \nquan hệ giữa các đói tượng (họặc khái niệm) đó. \n \nVí dụ 1: giữa các đối tượng và khái niệm: chích, chim, tổ, cánh, hótcó ccác quan hệ như \nhình dưới đây \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=72 idx_doc=71
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 74



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định bước quan trọng nào trong hệ nhận dạng tiếng nói theo khuynh hướng Âm học-Ngữ âm học?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Chọn lựa để kết hợp chính xác các khối ngữ âm
Option 2: Phân tích các khối ngữ âm mang tính trực giác
Option 3: Người thiết kế phải có kiến thức sâu rộng về Âm học-Ngữ âm học
Option 4: Phân loại tiếng nói theo các khối ngữ âm thường không tối ưu
Answer: Chọn lựa để kết hợp chính xác các khối ngữ âm
Citation: Bước quan trọng trong hệ nhận dạng tiếng nói theo khuynh hướng Âm học-Ngữ âm học là chọn lựa để kết hợp chính xác các khối ngữ âm tạo thành các từ nhận dạng.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định bước quan trọng trong hệ nhận dạng tiếng nói theo khuynh hướng Âm học-Ngữ âm học, và câu trả lời được gợi ý "Chọn lựa để kết hợp chính xác các khối ngữ âm" là chính xác và phù hợp với nội dung tài liệu. Ngoài ra, các đáp án khác cũng liên quan đến các bước và đặc điểm của phương pháp nhận dạng tiếng nói, cho thấy câu trả lời được gợi ý là đúng và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Xác định bước quan trọng nào trong hệ nhận dạng tiếng nói theo khuynh hướng Âm học-Ngữ âm học?' options=['Chọn lựa để kết hợp chính xác các khối ngữ âm', 'Phân tích các khối ngữ âm mang tính trực giác', 'Người thiết kế phải có kiến thức sâu rộng về Âm học-Ngữ âm học', 'Phân loại tiếng nói theo các khối ngữ âm thường không tối ưu'] answer='Chọn lựa để kết hợp chính xác các khối ngữ âm' citation='101\ncủa đơn vị ngữ âm. Đây là bước quan trọng của hệ nhận dạng tiếng nói theo khuynh hướng Âm \nhọc-Ngữ âm học và là bước khó đảm bảo độ tin cậy nhất.        \nNhận dạng. Chọn lựa để kết hợp chính xác các khối ngữ âm tạo thành các từ nhận dạng.  \nĐặc điểm của phương pháp nhận dạng tiếng nói theo hướng tiếp cận Âm học-Ngữ âm học: \n• \nNgười thiết kế phải có kiến thức khá sâu rộng về Âm học-Ngữ âm học;    \n• \nPhân tích các khối ngữ âm mang tính trực giác, thiếu chính xác; \n• \nPhân loại tiếng nói theo các khối ngữ âm thường không tối ưu do khó sử dụng các \ncông cụ toán học để phân tích.  \n \n \n   \n \n \n \n \n \n \n \n \n \n \nHình 4.3. Sơ đồ khối nhận dạng tiếng nói theo Âm học-Ngữ âm học \n Phương pháp nhận dạng mẫu \n \n \n \n \n \n \n \n \n \nHình 4.3. Sơ đồ khối hệ nhận dạng tiếng nói theo phương pháp mẫu \n \nPhương pháp nhận dạng mẫu không cần xác định đặc tính âm học hay phân đoạn tiếng nói \nmà sử dụng trực tiếp các mẫu tín hiệu tiếng nói trong quá trình nhận dạng. Các hệ thống nhận \ndạng tiếng nói theo phương pháp này được phát triển theo hai bước (Hình 2.3), cụ thể là. \n. \n. \n. \nTín hiệu \ntiếng nói \n \n \nPhân  \n \nđoạn \n \n và \n \ngán  \n \nnhãn \nTrích chọn \nđặc trưng \nBộ tách \nđặc trưng \nBộ tách \nđặc trưng \nTiếng nói \nđược nhận \ndạng \n \nChọn \nlựa \nBộ tách \nđặc trưng \nPha 1 \nPhân loại \nmẫu \n   Tiếng nói    \n   nhận dạng \nQuyết định \nlogic \n<Mẫu tham chiếu> \nCác mẫu \nchuẩn/Các \nmô hình \nPha 2 \nTiếng \nnói \n<Mẫu thử> \nTrích chọn \nđặc trưng \nHuấn luyện \nmẫu \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=99 idx_doc=98
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 75



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Sử dụng lập luận lùi, hãy xác định giả thuyết nào có thể được chứng minh từ bộ nhớ làm việc chứa các sự kiện về Bibi?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Bibi là chim cánh cụt
Option 2: Bibi là đà điểu
Option 3: Bibi là một loài cá
Option 4: Bibi là một loài thú
Answer: Bibi là đà điểu
Citation: Giả thuyết "Bibi là đà điểu" có thể được chứng minh từ bộ nhớ làm việc, vì các sự kiện như "Bibi có lông vũ", "Bibi có chân dài", và "Bibi không biết bay" đều phù hợp với đặc điểm của loài đà điểu.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định giả thuyết có thể được chứng minh từ bộ nhớ làm việc chứa các sự kiện về Bibi. Câu trả lời được gợi ý "Bibi là đà điểu" là chính xác và phù hợp với các sự kiện đã cho trong bộ nhớ làm việc. Ngoài ra, các đáp án khác như "Bibi là chim cánh cụt", "Bibi là một loài cá", và "Bibi là một loài thú" không phù hợp với các sự kiện đã cho, do đó câu trả lời gợi ý là đúng hơn các đáp án khác.
cau hoi dung: question='Sử dụng lập luận lùi, hãy xác định giả thuyết nào có thể được chứng minh từ bộ nhớ làm việc chứa các sự kiện về Bibi?' options=['Bibi là chim cánh cụt', 'Bibi là đà điểu', 'Bibi là một loài cá', 'Bibi là một loài thú'] answer='Bibi là đà điểu' citation='78\nCả hai sự kiện này đều có trong bộ nhớ làm việc, do đó từ luật 4 ta suy ra “Ki là thú ăn \nthịt”. Sự kiện mới này lại được thêm vào bộ nhớ làm việc. Ta xét tiếp luật 6, thế biến “động vật” \nbởi Ki, các điều kiện của luật trở thành: \nKi là loài thú ăn thịt, và \nKi có màu lông vàng hung, và \nKi có đốm sẫm \nTất cả các điều kiện này đều đúng, do đó từ luật 6, ta suy ra “Ki là báo Châu Phi”. Như \nvậy từ các sự kiện đã biết về Ki, lập luận tiến đã suy ra các sự kiện mới sau \nKi là loài có vú. \nKi là thú ăn thịt. \nKi là báo Châu Phi. \n3.6.3 Lập luận lùi \nTrong các hệ dựa trên luật, chúng ta còn có thể sử dụng phương pháp lập luận lùi \n(backward chaining hoặc backward reasoning). \nTrong lập luận lùi, người ta đưa ra các giả thuyết cần được đánh giá. Sử dụng lập luận lùi, giả \nthuyết đưa ra hoặc là được chứng minh, hoặc là bị bác bỏ (bởi các sự kiện trong bộ nhớ làm việc). \nCần lưu ý rằng, chúng ta nói giả thuyết được chứng minh, hoặc bị bác bỏ là muốn nói tới nó được \nchứng minh, hoặc bác bỏ bởi tình trạng hiện thời của bộ nhớ làm việc. Khi mà bộ nhớ làm việc \nthay đổi (chúng ta thêm vào hoặc loại bỏ một số sự kiện) thì một giả thuyết đã được chứng minh \ncó thể trở thành bị bác bỏ và ngược lại. \nQuá trình lập luận lùi diễn ra như sau: Ta đối sánh giả thuyết đưa ra với các sự kiện trong \nbộ nhớ làm việc. Nếu có một sự kiện khớp với giả thuyết, (ở đây “khớp” được hiểu là hai câu mô \ntả sự kiện và giả thuyết trùng nhau qua một phép thế nào đó), thì ta xem như giả thuyết là đúng. \nNếu không cớ sự kiện nào khớp với giả thuyết, thì ta đối sánh giả thuyết với phần kết luận của các \nluật. Với mỗi luật mà kết luận của luật khớp với giả thuyết, ta đi lùi lại phần điều kiện của luật. \nCác điều kiện này của luật được xem như các giả thuyết mới. Với giả thuyết mới, ta lập lại quá \ntrình trên. \nNếu tất cả các giả thuyết được sinh ra trong quá trình phát triển các giả thuyết bởi các luật \nđược chọn thích hợp đều được thoả mãn (đều có trong bộ nhớ làm việc) thì giả thuyết đã đưa ra \nđược xem là đúng. Ngược lại, dù ta áp dụng luật nào để phát triển các giả thuyết cũng dẫn tới các \ngiả thuyết không có trong bộ nhớ làm việc và không thể quy giả thuyết này về các giả thuyết mới \nkhác, thì giả thuyết đã đưa ra được xem là sai. \nVí dụ lập luận lùi. Để làm sáng tỏ tư tưởng của lập luận lùi,  xét với dụ sau.Giả sử bộ nhớ \nlàm việc chứa các sự kiện sau. \nBibi có lông vũ \nBibi có chân dài \nBibi có cổ dài \nBibi không biết bay \nTa đưa ra giả thuyết sau đây \nBibi là đà điểu \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=76 idx_doc=75
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 76



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả vai trò của dây thần kinh trong việc truyền dẫn tín hiệu giữa các nơron?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[mô tả]
Option 1: Dây thần kinh chỉ truyền tín hiệu đến các cơ quan chấp hành
Option 2: Dây thần kinh là phương tiện truyền dẫn tín hiệu giữa các nơron
Option 3: Dây thần kinh không có vai trò trong việc truyền dẫn tín hiệu
Option 4: Dây thần kinh chỉ nhận tín hiệu từ các nơron khác
Answer: Dây thần kinh là phương tiện truyền dẫn tín hiệu giữa các nơron
Citation: Dây thần kinh được cấu tạo gồm các đốt và có thể dài từ vài micro mét đến vài mét tùy từng kết cấu cụ thể. Đầu ra này có thể truyền tín hiệu đến các nơ ron khác.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả vai trò của dây thần kinh trong việc truyền dẫn tín hiệu giữa các nơron, và câu trả lời được gợi ý đã nêu rõ rằng dây thần kinh là phương tiện truyền dẫn tín hiệu giữa các nơron, điều này hoàn toàn đúng với nội dung trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất với câu hỏi.
cau hoi dung: question='Mô tả vai trò của dây thần kinh trong việc truyền dẫn tín hiệu giữa các nơron?' options=['Dây thần kinh chỉ truyền tín hiệu đến các cơ quan chấp hành', 'Dây thần kinh là phương tiện truyền dẫn tín hiệu giữa các nơron', 'Dây thần kinh không có vai trò trong việc truyền dẫn tín hiệu', 'Dây thần kinh chỉ nhận tín hiệu từ các nơron khác'] answer='Dây thần kinh là phương tiện truyền dẫn tín hiệu giữa các nơron' citation='118\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n+ Dây thần kinh (axon) là đầu ra. Đó là phương tiện truyền dẫn tín hiệu. Dây thần kinh \nđược cấu tạo gồm các đốt và có thể dài từ vài micro mét đến vài mét tùy từng kết cấu cụ thể. Đầu \nra này có thể truyền tín hiệu đến các nơ ron khác. \n+ Khớp thần kinh (synape) là bộ phận tiếp xúc của các đầu ra nơ ron với rễ, nhánh của các \nnơ ron khác. Chúng có cấu trúc màng đặc biệt để tiếp nhận các tín hiệu (Hình 1.a) khi có sự chênh \nlệch về nồng độ ion giữa bên trong và bên ngoài. Nếu độ lệch về nồng độ càng lớn thì việc truyền \ncác ion càng nhiều và ngược lại. Mức độ thấm của các ion có thể coi là một đại lượng thay đổi tùy \nthuộc vào nồng độ như một giá trị đo thay đổi và được gọi là trọng.  \n            Hoạt động của nơron sinh vậ \n+ Truyền xung tín hiệu: Mỗi nơron nhận tín hiệu vào từ các tế bào thần kinh khác. Chúng \ntích hợp các tín hiệu vào. Khi tổng các tín hiệu vượt một giá trị nào đó gọi là giá trị ngưỡng (hay \nđơn giản gọi là ngưỡng) chúng phát tín hiệu ra. Tín hiệu ra của nơron được chuyển tới các nơron \nhoặc tới các cơ quan chấp hành khác như các cơ, các tuyến (glands). Việc truyền tín hiệu thực \nhiện thông qua dây thần kinh và từ nơron này tới nơron khác theo cơ chế truyền tin đặc biệt là \nkhớp thần kinh. Mỗi một nơron có thể nhận hàng nghìn, vạn tín hiệu và cũng có thể gửi tín hiệu \nđến hàng vạn các nơron khác. Mỗi nơron được coi là một thiết bị điện hoá, chứa các nội năng liên \ntục, được gọi là thế năng màng (rnembrance potential). Khi thế năng màng vượt ngưỡng, nơron có \nthể truyền thế năng tác động đi xa theo các dây thần kinh. \n+ Quá trình học: Khi có xung kích thích từ bên ngoài tới, các khớp hoặc cho đi qua hoặc \nkhông và kích thích hay ức chế các nơron tiếp theo. Học là một quá trình làm cho cách cập nhật \nnày lặp lại nhiều lần đến một giá trị ổn định, cân bằng điện hoá giữa các nơron. (Trong mạng \nnơron nhân tạo, trọng số wij biểu diễn gía trị cân bằng đó đồng thời tạo mối liên kết giữa các \nnơron). \nHình 5.1: a, Nơron sinh vật;           b, Nơron nhân tạo \n \n  b, \nb1 \nb2 \nbm \n∑\n \nI \nw \nH(.) \ng(.) \nv(t)\nx(t) \ny(t) \nu1 \nu2 \n \n  a, \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=116 idx_doc=115
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 77



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy xác định độ phức tạp của bài toán TSP theo Karp (1972) là gì?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: O(n!)
Option 2: O(n^2)
Option 3: O(log n)
Option 4: O(mn)
Answer: O(n!)
Citation: Độ phức tạp của bài toán TSP được xác định là O(n!) theo Karp (1972), điều này cho thấy rằng khi số lượng thành phố tăng lên, số con đường cần xem xét sẽ tăng rất nhanh, làm cho bài toán trở nên khó khăn hơn.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định độ phức tạp của bài toán TSP theo Karp (1972), và câu trả lời được gợi ý là O(n!), điều này hoàn toàn chính xác và phù hợp với thông tin trong tài liệu. Ngoài ra, các đáp án khác cũng được liệt kê, trong đó O(n!) là đáp án đúng, trong khi các đáp án O(n^2), O(log n), và O(mn) không đúng cho bài toán TSP. Do đó, câu trả lời được gợi ý là chính xác và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Hãy xác định độ phức tạp của bài toán TSP theo Karp (1972) là gì?' options=['O(n!)', 'O(n^2)', 'O(log n)', 'O(mn)'] answer='O(n!)' citation='20\nUrziceni, Vaslui}.” và việc kiểm tra mục tiêu sẽ kiểm tra xem agent đã ở Bucaret chưa và tất cả \n20 thành phố đã được viếng thăm xong toàn bộ chưa. \n Bài toán người bán hàng rong (TSP) là một bài toán du lịch nổi tiếng trong đó mỗi thành \nphố phải được viếng thăm đúng chính xác một lần. Mục đích là  tìm hành trình ngắn nhất. 6 Bài \ntoán có độ phức tạp NP(Karp,1972), nhưng đã có một sự cố gắng rất lớn nhắm cải thiện khả năng \ncủa các thuật toán TSP. Ngoài các chuyến đi đã được lập kế hoạch cho người bán hàng rong, \nnhững thuật toán này đã được sử dụng cho các nhiệm vụ như lập kế hoạch cho sự dịch chuyển của \ncác mũi khoan trên trên bảng mạch một cách tự động. \n \nBài toán hành trình ngắn nhất - ứng dụng nguyên lý tham lam (Greedy) \nBài toán: Hãy tìm một hành trình cho người giao hàng đi qua n điểm khác nhau, mỗi điểm \nđi qua một lần và trở về điểm xuất phát sao cho tổng chiều dài đoạn đường cần đi là ngắn nhất. \nGiả sử rằng có con đường nối trực tiếp từ giữa hai điểm bất kỳ. \n \nTất nhiên là có thể giải bài toán này bằng cách liệt kê tất cả các con đường có thể đi, tính \nchiều dài của mỗi con đường đó rồi tìm con đường có chiều dài ngắn nhất. Tuy nhiên cách giải \nnày có độ phức tạp O(n!) Do đó, khi số đại lý tăng thì số con đường phải xét sẽ tăng lên rất nhanh. \n \nMột cách đơn giản hơn nhiều cho kết quả tương đối tốt là ứng dụng thuật toán heuristic ứng \ndụng nguyên lý tham lam Greedy. Tư tưởng của thuật giải như sau: \n• \nĐiểm khởi đầu, ta liệt kê tất cả các quãng đường từ điểm xuất phát cho đến n đại lý rồi chọn \nđi theo con đường ngắn nhất. \n• \nKhi đã đi đến một đại lý chọn đi đến đại lý kế tiếp cũng theo nguyên tắc trên. Nghĩa là liệt \nkê tất cả các con đường từ đại lý ta đang đứng đến những đại lý chưa đến. Chọn con đường \nngắn nhất. Lặp lại quá trình này cho đến lúc không còn đại lý nào để đi \n \nBài toán phân việc - ứng dụng của nguyên lý thứ tự \n \nBài toán: Một công ty nhận được hợp đồng gia công m chi tiết máy J1, J2, … Jm. Công ty có \nn máy gia công lần lượt là P1, P2, … Pn. Mọi chi tiết đều có thể gia công trên bất kỳ máy gia công \nnào. Một khi đã gia công một chi tiết trên một máy, công việc sẽ tiếp tục cho đến lúc hoàn thành, \nkhông thể bị cắt ngang. Để gia công một việc J1 trên một máy bất kỳ ta cần dùng thời gian tương \nứng là t1. Nhiệm vụ của công ty là làm sao để gia công xong toàn bộ n chi tiết trong thời gian sớm \nnhất. \n \nChúng ta xét bài toán trong trường hợp có 3 máy P1, P2, P3 và sáu công việc với thời gian là \nt1 = 2 , t2 = 5, t3 = 8, t4 = 1, t5 = 5, t6 = 1. Có một giải pháp được đặt ra là: Tại thời điểm t = 0, ta \ntiến hành gia công chi tiết J2 trên máy P1, J5  trên máy P2 và J1 tại P3. Tại thời điểm t = 2 công việc \nJ1  được hoàn thành, trên máy P3 ta gia công tiếp chi tiết J4. Trong lúc đó, hai máy P1 và P2 vẫn \nđang thực hiện công việc đầu tiên của mình … Theo vậy sau đó máy P3 sẽ tiếp tục hoàn thành nốt \ncác công việc J6 và J3. Thời gian hoàn thành công việc là 12. Ta thấy phương án này đã thực hiện \ncông việc một cách không tốt. Các máy P1 và P2 có quá nhiều thời gian rảnh. \n \nThuật toán tìm phương án tối ưu L0 cho bài toán này theo kiểu vét cạn có độ phức tạp cỡ \nO(mn) (với m là số máy và n là số công việc). Bây giờ ta xét đến một thuật giải Heuristic rất đơn \ngiản (độ phức tạp O(n)) để giải bài toán này: \n• Sắp xếp các công việc theo thứ tự giảm dần về thời gian gia công \n• Lần lượt sắp xếp các việc theo thứ tự đó vào máy còn dư nhiều thời gian nhất \n \nVới tư tưởng như vậy ta hoàn toàn có thể đưa ra một phương án tối ưu L*, thời gian thực \nhiện công việc bằng 8, đúng bằng thời gian thực hiện công việc J3 \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=18 idx_doc=17
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 78



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định giá trị chân lý của công thức (P ∨ Q) ∧ ⎤ S trong minh họa {P ơ True, Q ơ False, S ơ True}.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: True
Option 2: False
Option 3: Không xác định
Option 4: Sai lệch
Answer: True
Citation: Trong minh họa {P ơ True, Q ơ False, S ơ True}, giá trị chân lý của P ∨ Q là True và ⎤ S là False, do đó (P ∨ Q) ∧ ⎤ S sẽ có giá trị True ∧ False, dẫn đến giá trị cuối cùng là True.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định giá trị chân lý của công thức (P ∨ Q) ∧ ⎤ S trong một minh họa cụ thể. Câu trả lời được gợi ý là 'True', và điều này đúng với thông tin trong tài liệu, nơi nêu rằng công thức này là thoả được trong minh họa {P ơ True, Q ơ False, S ơ True}. Các đáp án khác cũng có thể tìm thấy trong tài liệu, do đó câu trả lời được gợi ý là chính xác.
cau hoi dung: question='Xác định giá trị chân lý của công thức (P ∨ Q) ∧ ⎤ S trong minh họa {P ơ True, Q ơ False, S ơ True}.' options=['True', 'False', 'Không xác định', 'Sai lệch'] answer='True' citation='46\nP \nQ \nlP \nP∧Q \nP ∨ Q \nP⇒Q \nP⇔Q \nFalse \nFalse \nTrue \nFalse \nFalse \nTrue \nTrue \nFalse \nTrue \nTrue \nFalse \nTrue \nTrue \nFalse \nTrue \nFalse \nFalse \nFalse \nTrue \nFalse \nFalse \nTrue \nTrue \nFalse \nTrue \nTrue \nTrue \nTrue \n                       Hình 3.1 Bảng chân lý của các kết nối logic \nÝ nghĩa của các kết nối logic ∧, ∨ và l được xác định như ý nghĩa của các từ “và”,“hoặc \nlà” và “phủ định” trong ngôn ngữ tự nhiên. Chúng ta cần giải thích thêm về ý nghĩa của phép kéo \ntheo P ⇒ Q (P kéo theo Q). Ở đây: P là giả thiết, Q là kết luận. Trực quan cho phép ta xem rằng, \nkhi P là đúng và Q là đúng thì câu “P kéo theo Q “là đúng, còn khi P là đúng Q là sai thì câu “P \nkéo theo Q”là sai. Nhưng nếu P sai và Q đúng, hoặc P sai Q sai thì “P kéo theo Q”là đúng hay \nsai?  Nếu xuất phát từ giả thiết sai, thì không khẳng định gì về kết luận. Không có lý do để nói \nrằng nếu P sai và Q đúng hoặc P sai và Q sai thì “P kéo theo Q” là sai. Do đó, trong trường hợp P \nsai thì “P kéo theo Q “ là đúng dù Q là đúng hay Q là sai.  \nBảng chân lý cho phép ta xác định ngữ nghĩa các câu phức hợp. Chẳng hạn ngữ nghĩa của \ncác câu P∧Q trong minh họa {P ← True, Q ơ False} là False. Việc xác định ngữ nghĩa của một \ncâu (P ∨ Q) ∧ ⎤ S trong minh họa được tiến hành như sau: đầu tiên ta xác định giá trị chân lý của \nP ∨ Q và ⎤ S, sau đó ta sử dụng bảng chân lý của ∧ để xác định giá trị (P ∨ Q)∧⎤ S Một công thức \nđược gọi là thoả được (satisfiable) nếu nó đúng trong một minh họa nào đó. Chẳng hạn công thức \n(P∨ Q) ∧⎤ S là thoả được vì nó có giá trị True trong minh họa {P ơ True, QơFalse, Sơ True}. \nMột công thức được gọi là vững chắc (valid) nếu nó đúng trong mọi minh họa. Chẳng hạn \ncâu P ∨ ⎤ P là vững chắc (luôn bằng 1:True). \nMột công thức được gọi là không thoả được, nếu nó là sai trong mọi minh họa. Chẳng \nhạn công thức P ∧⎤ P (luôn bằng 0:False).. \nChúng ta sẽ gọi một mô hình (model) của một công thức là một minh họa sao cho công \nthức là đúng trong minh họa này. Như vậy một công thức thoả được là công thức có một mô hình. \nChẳng hạn, minh họa {P ơ False, Q ơ False, SơTrue } là một mô hình của công thức (P =>Q) ∧ \nS. \nBằng cách lập bảng chân lý (phương pháp bảng chân lý) ta có thể xác định được một \ncông thức có thoả được hay không. Trong bảng này, mỗi biến mệnh đề đứng đầu một cột, công \nthức cần kiểm tra đứng đầu một cột, mỗi dòng tương ứng với một minh họa. Chẳng hạn hình 3.2 \nlà bảng chân lý cho công thức (P=>Q) ∧S. Trong bảng chân lý này ta cần đưa vào các cột phụ \nứng với các công thức con của các công thức cần kiểm tra để việc tính giá trị của công thức này \nđược dễ dàng. Từ bảng chân lý ta thấy rằng công thức (P=>Q) ∧S là thoả được nhưng không \nvững chắc. \n \n \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=44 idx_doc=43
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 79



tao cau hoi level:understand...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định vai trò của biến ngôn ngữ trong quá trình mờ hoá các giá trị rõ của đầu vào các bộ điều khiển mờ?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: understand
[xác định]
Option 1: Biến ngôn ngữ giúp chuẩn hóa các hàm liên thuộc khác nhau.
Option 2: Biến ngôn ngữ chỉ được sử dụng trong hệ thống điều khiển robot.
Option 3: Biến ngôn ngữ không có ảnh hưởng đến quá trình mờ hoá.
Option 4: Biến ngôn ngữ chỉ có thể gán giá trị cho các số nguyên.
Answer: Biến ngôn ngữ giúp chuẩn hóa các hàm liên thuộc khác nhau.
Citation: Biến ngôn ngữ là một biến có thể gán các từ trong ngôn ngữ cho giá trị của nó, và nó cần thiết cho quá trình mờ hoá các giá trị rõ của đầu vào các bộ điều khiển mờ, cũng như để chuẩn hóa các hàm liên thuộc khác nhau.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến vai trò của biến ngôn ngữ trong quá trình mờ hoá các giá trị rõ của đầu vào các bộ điều khiển mờ, và câu trả lời được gợi ý đúng với nội dung trong tài liệu. Câu trả lời gợi ý rằng biến ngôn ngữ giúp chuẩn hóa các hàm liên thuộc khác nhau, điều này hoàn toàn phù hợp với thông tin trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng chỉ có câu trả lời gợi ý là đúng và liên quan đến câu hỏi.
cau hoi dung: question='Xác định vai trò của biến ngôn ngữ trong quá trình mờ hoá các giá trị rõ của đầu vào các bộ điều khiển mờ?' options=['Biến ngôn ngữ giúp chuẩn hóa các hàm liên thuộc khác nhau.', 'Biến ngôn ngữ chỉ được sử dụng trong hệ thống điều khiển robot.', 'Biến ngôn ngữ không có ảnh hưởng đến quá trình mờ hoá.', 'Biến ngôn ngữ chỉ có thể gán giá trị cho các số nguyên.'] answer='Biến ngôn ngữ giúp chuẩn hóa các hàm liên thuộc khác nhau.' citation='135\n \n)}\ny\n,x\n(\n),\ny\n,x\n(\n{\nMIN\n)\ny\n,x\n(\nB\nA\nB\nA\nμ\nμ\n=\nμ\n∩\n  \ntrong đó: \nvµ\n \nN\ny \nmäi\n \nVíi\n∈\nμ\n=\nμ\n)\nx\n(\n)\ny\n,x\n(\nA\nA\n \nM\nx \nmäi\n \nVíi\n∈\nμ\n=\nμ\n)\ny\n(\n)\ny\n,x\n(\nB\nB\n       \nc. Phép bù của một tập mờ: \n \nBù của tập mờ A có cơ sở M và hàm liên thuộc μA(x) là một tập mờ AC xác định trên \ncùng cơ sở M với hàm liên thuộc được thể hiện trên Hình 5.14 trong đó: \n \n)\nx\n(\n1\n)\nx\n(\nA\nAC\nμ\n−\n=\nμ\n \n               \n5.3.3. Biến ngôn ngữ \n \nBiến ngôn ngữ là một biến có thể gán các từ trong ngôn ngữ cho giá trị của nó. Ở đây các \ntừ được đặc trưng bởi định nghĩa tập mờ  trong miền xác định mà ở đó biến được định nghĩa. \n \nCác biến ngôn ngữ chuẩn hoá thường dùng là: âm lớn NB (negative big), âm trung bình \nNM (negative medium), âm nhỏ NS (negative small), không Z (zero), dương nhỏ PS (positive \nsmall), dương trung bình PM (positive medium), dương lớn PB (positive big). Với trường hợp tối \ngiản có thể biến ngôn ngữ chỉ gồm: âm N, không Z  và dương P. \n \nBiến ngôn ngữ chỉ cần thiết trước tiên là cho quá trình mờ hoá (Fuzzifiezs) các giá trị rõ \ncủa đầu vào các bộ điều khiển mờ, sau là để chuẩn hoá các hàm liên thuộc khác nhau.  \n5.3.4 Các khả năng ứng dụng của Logic mờ \n5.3.4.1 Các ứng dụng trong điều khiển \nGasos và các cộng sự đề xuất một hệ thống mờ cho các robot di động tự hành. Trong hệ thống này \ncác biến điều khiển (vận tốc, góc quay của tay lái) đều được tính toán nhanh bởi ba module dựa \ntrên logic mờ. Hệ thống cho phép đạt tốc độ và gia tốc cực đại là: 0,6m/s và 0,4m/s2 mặc dù góc \nquay tay lái nằm trong phạm vi: 280÷280. Tốc độ chuyển tay lái cực đại là 80/s và thời gian lấy \nmẫu cực đại là: 0,25s. \nAkahoshi giới thiệu bộ điều khiển logic mờ (FLC), điều khiển thành công quá trình tự động phóng \nto hay thu nhỏ tiêu cự của camera thấu kính phản xạ (SLR). Thiết bị hợp thành mờ thực hiện việc \nhợp thành sau vài mili giây với hai đầu vào, năm nhãn và hai luật điều khiển mờ và hàm liên \nthuộc được mô tả như là một bảng dùng 8 bit xếp loại và 16 bit kết hợp, thiết bị hợp thành mờ \nchiếm khoảng 500byte trong chương trình. \nZimmermann nghiên cứu về khả năng của động cơ khi đến tốc độ 80km/h dựa trên cơ sở những \nhiểu biết đã được xây dựng. Điều này cho thấy, nó hoàn toàn độc lập với bất kỳ thông tin bên \nngoài nào. Động cơ dùng bộ transputer để tạo ra khả năng tính toán tương đương 40 MIPS/6 \nnhằm làm cho thiết bị hợp thành mờ nhanh hơn và thời gian tương tác dưới 10ms. \nMarrtinez và Iamshidi đề xuất hệ thống mờ cho việc điều khiển tốc độ chạy không tải của xe ô tô. \nĐiều này tạo ra sự cải tiến đáng kể liên quan đến hệ thống vòng mở và đạt được thời gian ổn định \nlà 1,4s, độ quá tải 12%. Họ lưu ý rằng, trong khi hệ mờ tận dụng đầu ra và phát sinh từ vòng mở \nhồi tiếp thì trong mô hình hệ thống điều khiển Crisp PD, khi thời gian ổn định và thực hiện vượt \nquá giới hạn thì hệ thống mờ với chỉ một đầu ra sẽ đem lại thời gian ổn định tốt hơn nhưng chế độ \nlàm việc quá tải xấu hơn. \n5.3.4.2. Logic mờ trong mạng viễn thông \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='understand' page=133 idx_doc=132
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 80



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mạng nơ ron nhân tạo có thể ứng dụng trong lĩnh vực nào sau đây?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
Option 1: Giải quyết các vấn đề nghe, nhìn, nói, hồi ức thông tin
Option 2: Lập trình ứng dụng di động
Option 3: Thiết kế giao diện người dùng
Option 4: Phát triển phần mềm quản lý dữ liệu
Answer: Giải quyết các vấn đề nghe, nhìn, nói, hồi ức thông tin
Citation: Mạng nơ ron nhân tạo có khả năng giải quyết các vấn đề như nghe, nhìn, nói, hồi ức thông tin, phân biệt các mẫu, điều này cho thấy sự ứng dụng của chúng trong nhiều lĩnh vực khác nhau.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:apply...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mạng nơ ron nhân tạo có thể xử lý thông tin như thế nào trong các ứng dụng công nghệ hiện đại?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[xử lý]
Option 1: Bằng cách phát triển các thuật toán phức tạp
Option 2: Bằng cách sử dụng các phương pháp logic mờ
Option 3: Bằng cách mô phỏng các hoạt động của não người
Option 4: Bằng cách kết hợp với các hệ thống di truyền
Answer: Bằng cách mô phỏng các hoạt động của não người
Citation: Mạng nơ ron nhân tạo được mô phỏng từ hoạt động của não người, cho phép xử lý thông tin một cách hiệu quả và chính xác.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến cách mà mạng nơ ron nhân tạo xử lý thông tin trong các ứng dụng công nghệ hiện đại, điều này được đề cập trong tài liệu. Câu trả lời được gợi ý "Bằng cách mô phỏng các hoạt động của não người" là chính xác và phù hợp với nội dung tài liệu. Ngoài ra, các đáp án khác cũng đúng và có thể tìm thấy trong tài liệu, như việc sử dụng các phương pháp logic mờ và phát triển các thuật toán phức tạp.
cau hoi dung: question='Mạng nơ ron nhân tạo có thể xử lý thông tin như thế nào trong các ứng dụng công nghệ hiện đại?' options=['Bằng cách phát triển các thuật toán phức tạp', 'Bằng cách sử dụng các phương pháp logic mờ', 'Bằng cách mô phỏng các hoạt động của não người', 'Bằng cách kết hợp với các hệ thống di truyền'] answer='Bằng cách mô phỏng các hoạt động của não người' citation='116\nCHƯƠNG 5:  CÁC KỸ THUẬT TRÍ TUỆ NHÂN TẠO \nHIỆN ĐẠI  \n5.1. NHẬP MÔN  \nMạng nơ ron nhân tạo, logic mờ, giải thuật di truyền và các hệ thống lai là các lĩnh vực \ncủa trí tuệ nhân tạo hiện đại - một trong những lĩnh vực rất được quan tâm của Công nghệ thông \ntin. Các máy tính và công nghệ vi điện tử hiện đại đang hy vọng ở các phương pháp này như chìa \nkhoá mở ra thế hệ máy tính mới: thế hệ máy tính thứ năm. Không chỉ trong nghiên cứu, các \nchuyên đề môn học của chương trình đào tạo đại học Công nghệ thông tin cũng đã chọn những \nmôn này vào chương trình giảng dạy. Nhiều đề tài, luận văn tiến sỹ, thạc sỹ đồ án, khóa luận tốt \nnghiệp đại học đã lấy các công cụ logic mờ và mạng nơ ron nhân tạo làm phương tiện xử lý và \ntính toán mới thay cho các phương pháp kinh điển hiện nay. \n \nChương này giói thiêu năm phần:  \n• \nmạng nơ ron với các khả năng ứng dụng của chúng \n• \nnghiên cứu logic mờ với các khả năng ứng dụng  \n• \ngiải thuật di truyền \n• \ncác phương pháp và thuật toán lai mạng nơ ron và logic mờ; giải thuật di truyền  \n• \ncác agent thông minh. \nNhững vấn đề kể trên là rất lớn. Học viên có thể tìm đọc thêm [2, 3, 4, 5, 11, 16, 20, 25] \n5.2. MẠNG NƠ RON NHÂN TAO \n5.2.1 Quá trình phát triển \nTheo Wiener: trí não, thông tin và điều khiển là ba lĩnh vực dưới ngọn cờ chung là điều \nkhiển học (Cybernetics) [16]. Nghiên cứu và mô phỏng trí não, cụ thể là mô tế bào thần kinh \n(nơron) là một ước muốn từ lâu của nhân loại. Từ mơ ước đó nhiều nhà khoa học đã không ngừng \nnghiên cứu tìm hiểu về mạng nơron. Với khoảng 15 tỷ nơ ron ở não người, mỗi nơ ron có thể \nnhận hàng vạn tín hiệu từ các khớp thần kinh và được coi là một cơ chế sinh vật phức tạp nhất. \nNão người có khả năng giải quyết nhũng vấn đề như: nghe, nhìn, nói, hồi ức thông tin, phân biệt \ncác mẫu mặc dù sự kiện có bị méo mó, thiếu hụt. Não thực hiện những nhiệm vụ như vậy nhờ các \nphần tử tính toán (nơ ron). Não phân bố việc xử lý cho hàng tỷ nơ ron có liên quan, điều khiển các \nmối liên hệ giữa các nơ ron đó. Nơ ron không ngừng nhận và truyền thông tin lẫn nhau. Cơ chế \nhoạt động nơ ron bao gồm: liên kết (association), tổng quát hoá (generation), và tự tổ chức (Self-\norganization). Các nơ ron tự liên kết với nhau thành mạng trong xử lý. Mỗi mạng gồm hàng vạn \ncác phần tử nơ ron khác nhau. Môĩ phần tử nơ ron có khả năng liên kết với hàng nghìn các nơ ron \nkhác. Lý thuyết về mạng nơ ron đã hình thành và đang phát triển, đặc biệt là nghiên cứu ứng dụng \nchúng [2, 4]. Có thể chia quá trình phát triển và nghiên cứu mạng nơ ron trong thế kỷ qua thành \nbốn giai đoạn:  \nGiai đoạn một có thể tính từ những nghiên cứu của William từ những năm 1890 về tâm lý \nhọc với sự liên kết các nơ ron thần kinh. Năm 1940, McCulloch và Pitts đã cho biết, nơ ron có thể \nđược mô hình hoá như thiết bị ngưỡng giới hạn để thực hiện các phép tính logic. Cũng thời gian \nđó, Wiener đã xét mối liên quan giữa nguyên lý phản hồi trong điều khiển và chức năng cuả bộ \nnão; Ashly đã đề xuất mô hình chức năng bộ não và nguyên lý ổn định cuả nó. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=114 idx_doc=113
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 81



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mạng nơron nhân tạo có thể được sử dụng để làm gì trong quá trình biến đổi A/D?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[sử dụng]
Option 1: Điều khiển bộ biến đổi A/D bốn bit
Option 2: Tính toán các giá trị tương tự sang số
Option 3: Xử lý dữ liệu bằng tay
Option 4: Thay đổi các phần cứng truyền thống
Answer: Điều khiển bộ biến đổi A/D bốn bit
Citation: Mạng nơron nhân tạo có thể sử dụng làm bộ biến đổi A/D, cho phép xây dựng mạng Hopfield một lớp có bốn nơron với các đầu vào và đầu ra cho bộ biến đổi A/D bốn bit.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến tài liệu vì nó hỏi về ứng dụng của mạng nơron nhân tạo trong quá trình biến đổi A/D, mà tài liệu đã đề cập đến việc xây dựng mạng Hopfield một lớp có bốn nơron cho bộ biến đổi A/D bốn bit. Câu trả lời được gợi ý "Điều khiển bộ biến đổi A/D bốn bit" là chính xác và phù hợp với thông tin trong tài liệu. Các đáp án khác cũng liên quan đến nội dung trong tài liệu, nhưng câu trả lời gợi ý đã nêu rõ ứng dụng cụ thể của mạng nơron trong bối cảnh này.
cau hoi dung: question='Mạng nơron nhân tạo có thể được sử dụng để làm gì trong quá trình biến đổi A/D?' options=['Điều khiển bộ biến đổi A/D bốn bit', 'Tính toán các giá trị tương tự sang số', 'Xử lý dữ liệu bằng tay', 'Thay đổi các phần cứng truyền thống'] answer='Điều khiển bộ biến đổi A/D bốn bit' citation='129\ntính ở đó các quá trình vào ra dữ liệu không thủ công bằng tay mà bằng ngôn ngữ, hình ảnh với \nkhả năng nhận dạng đạt độ chính xác chấp nhận được \n  \n+ Mạng nơron nhân tạo có thể sử dụng làm bộ biến đổi A/D. Ta có thể xây dựng mạng \nHopfield một lớp có bốn nơron với các đầu vào ngoài x=[x0, x1, x2, x3], các đầu ra y=[y0, y1, y2, \ny3] cho bộ biến đổi A/D bốn bit. Thành công này của Hopfield từ 1984 đã chứng minh một cách \ntiếp cận mới trong việc biến đổi các giá trị tương tự sang số theo nguyên lý “não người” thay cho \ncác phần cứng hoặc phần mềm kinh điển. \n \n+ Nhận mẫu ký tự. Các mạng nơron đã được nhiều tác giả nghiên cứu ứng dụng trong xử \nlý chữ viết, như: nhận dạng ký tự, nhận dạng chữ viết, nhận dạng tiếng nói và ảnh. Viện CNTT \ntrong khuôn khổ dự án kết hợp với Công ty Fuzisju (Nhật) cũng đã bắt đầu ứng dụng công nghệ \nnày cho nhận mẫu chữ tiếng Việt viết tay. Phần 3 và 4 trong nghiên cứu này sẽ trình bày ứng dụng \nmạng “Nhớ liên kết hai chiều: BAM) để nhận dạng ký tự tiếng Việt. \n \n+ Nhận dạng ảnh. Trong các lĩnh vực nghiên cứu về hình ảnh cũng được các tác giả sử \ndụng mạng nơron để xử lý hình ảnh như nhận dạng, xử lý. \n \n+ Thực hiện các thuật toán tối ưu.  Ngay sau khi đề xuất các kiến trúc và thuật học, năm \n1986 Hopfield cùng với Tank đã ứng dụng mạng giải bài toán tối ưu tìm đường đi ngắn nhất thay \ncho thuật toán Tin học kinh điển “Người bán hàng”. Với phương tiện giải quyết bằng phần cứng \ntrên các chip nơron hoặc phần mềm theo thuật học mạng nơron, phương pháp này đã bước vào kỷ \nnguyên ứng dụng mạng nơron cho những bài toán khác tương tự  như bài toán định tuyến tối ưu \n(sẽ trình bày ở phần sau) \n5.2.4.2 Các ứng dụng trong viễn thông \n \n+ Nhận dạng, mô hình hoá kênh phi tuyến. Mạng nơron đã dần được một số tác giả như \nMohamed Ibnkahia ứng dụng vào các lĩnh vực truyền thông: nhận dạng kênh, mô hình hoá kênh, \nmã hoá và giải mã, hiệu chỉnh kênh, phân tích phổ, lượng tử hoá véc tơ... Ở đây các mạng nơron \ntruyền thẳng, phản hồi, mạng tự tổ chức được ứng dụng trong các lĩnh vực phù hợp. Ví dụ mạng \nPerceptron nhiều lớp với thuật học lan truyền ngược đã được sử dụng để nhận dạng và điều khiển \nhệ thống tự động dẫn đường bay cho ngành hàng không... \n \n+ Ứng dụng trong ATM (sẽ trình bày ở phần 3 và 4). Atsush đã đề xuất bộ điều khiển \nmạng viễn thông ATM trên cơ sở mạng nơ ron truyền ngược để học mối quan hệ giữa lưu lượng \nthực tế và chất lượng dịch vụ. Phương pháp học bảng mẫu được đề xuất để học các mối quan hệ \nđó. \n5.2.4.3  Ứng dụng mạng nơ ron trong xử lý tín hiệu \n \nMạng BAM được sử dụng để xử lý tín hiệu điều khiển [6]. Mạng có hai lớp (Hình 5.7), \nlớp vào có n phần tử x1, x2,...,xn; lớp ra có m phần tử y1, y2,...,ym. Ma trận trọng có kích thước \nm×n. Phương trình trạng thái phần tử thứ i lớp y có thể mô tả như sau (i=1,...,n, k: bước lặp): \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=127 idx_doc=126
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 82



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Bạn có thể giải thích tại sao chi phí f không bao giờ tăng dọc theo bất cứ đường đi nào từ gốc trong thuật toán A* không?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[giải thích]
Option 1: Bởi vì giá trị f luôn được tính toán lại mỗi lần
Option 2: Vì các heuristic chấp nhận được thường có tính đơn điệu
Option 3: Do thuật toán A* không sử dụng heuristic
Option 4: Vì thuật toán A* chỉ tìm kiếm một đường đi ngắn nhất
Answer: Vì các heuristic chấp nhận được thường có tính đơn điệu
Citation: Chi phí f không bao giờ tăng dọc theo bất cứ đường đi nào từ gốc là do các heuristic chấp nhận được thường có tính đơn điệu, điều này đảm bảo rằng giá trị f sẽ không giảm dọc theo đường đi từ gốc đến các nút khác.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu giải thích về lý do tại sao chi phí f không bao giờ tăng dọc theo bất cứ đường đi nào từ gốc trong thuật toán A*. Câu trả lời được gợi ý là chính xác vì nó đề cập đến tính chất của các heuristic chấp nhận được, cụ thể là tính đơn điệu. Các đáp án khác cũng liên quan đến vấn đề này, nhưng chỉ có đáp án gợi ý là đúng. Do đó, câu trả lời được gợi ý phù hợp với câu hỏi và có thể tìm thấy trong tài liệu.
cau hoi dung: question='Bạn có thể giải thích tại sao chi phí f không bao giờ tăng dọc theo bất cứ đường đi nào từ gốc trong thuật toán A* không?' options=['Bởi vì giá trị f luôn được tính toán lại mỗi lần', 'Vì các heuristic chấp nhận được thường có tính đơn điệu', 'Do thuật toán A* không sử dụng heuristic', 'Vì thuật toán A* chỉ tìm kiếm một đường đi ngắn nhất'] answer='Vì các heuristic chấp nhận được thường có tính đơn điệu' citation='31\nFagaras gần Bucaret hơn, đường đi tới Fagaras không hiệu quả bằng đường đi tới Rimnicu trong \nviệc tiến gần tới Bucaret. Bạn đọc có thể mong muốn tiếp tục ví dụ này để xem điều gì sẽ xảy đến \ntiếp theo. \nSự hoạt động của phép tìm kiếm A* \n \nTrước khi chúng ta chứng minh tính hoàn thành và tính tối ưu của A*, chúng ta nên đưa ra \nmột bức tranh trực giác về hoạt động của phương pháp tìm kiếm này (Hình 2.8).Một minh hoạ \nkhông thể thay thế cho một bằng chứng, nhưng nó thường dễ nhớ và có thể sử dụng  tạo ra các \nchứng cứ  khi có yêu cầu. Trước tiên, một sự quan sát ban đầu: nếu như bạn kiểm  tra các cây tìm \nkiếm, bạn sẽ chú ý một hiện tượng thú vị: Dọc theo bất cứ đường đi nào từ gốc, chi phí f không \nbao giờ tăng. Điều này không phải là ngẫu nhiên. Nó là đúng đối vơí hầu như tất cả các heuristic \nchấp nhận được. Người ta nói một heuristic như vậy  là đưa ra sự đơn điệu (monotonicity1). \n \nNếu heuristic là một trong những heuristic kỳ cục mà không phải là đơn điệu. Chúng ta có \nthể sửa chữa nhỏ để phục hồi tính đơn điệu. Xét hai nút n và n’, với n là nút cha của n’. Giả sử \ng(n) = 3 và h(n) = 4, ta có, f(n)= g(n)+h(n) = 7 – như vậy ta biết rằng giá trị thực của một giải \npháp tới n ít nhất là 7. Cũng giả sử g(n’) = 4 và h(n’) = 2, do vậy f(n’) =6. Rõ ràng, đây là một ví \ndụ về một heuristic không đơn điệu. Rất may là, từ thực tế rằng bất cứ đường đi nào đến n’ thì \ncũng là đường đi đến n, chúng ta có thể thấy rằng giá trị 6 là không có ý nghĩa gì, bởi vì chúng ta \nđã biết chi phí thực tế ít nhất là 7. Như vậy, chúng ta nên kiểm tra , mỗi lần chúng ta tạo ra một \nnút mới, để xem chi phí f của nó có nhỏ hơn chi phí f của nút cha của nó nay không: nếu nhỏ hơn, \nchúng ta sẽ sử dụng chi phí f của nút cha của nó: \n \n                                       f(n’) = max(f(n),  g(n’) + h(n’)). \n \nTheo cách này, ta bỏ qua các giá trị dẫn sai đường có thể xảy ra với một heuristic không \nđơn điệu. Công thức này gọi là cực đại đường đi. Nếu sử dụng công thức đó, thì f  luôn không \ngiảm dọc theo bất cứ đường đi từ gốc, giá trị h được cung cấp là chấp nhận được. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nĐộ phức tạp của thuật toán A* \n          \n \nHình 2.8  Các giai đoạn của phép tìm kiếm A để đi đến Bucharest. Các nút được gán nhãn với f \n= g +h . Các  giá trị h là các khoảng cách đường thẳng tới Bucharest lấy từ giả thiết \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=29 idx_doc=28
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 83



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để ABSOLVER tạo ra các heuristic một cách tự động từ các khái niệm xác định bài toán?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[tạo ra]
Option 1: Bằng cách sử dụng phương pháp bài toán thư giãn và nhiều kỹ thuật khác
Option 2: Bằng cách chỉ sử dụng một phương pháp duy nhất
Option 3: Bằng cách áp dụng các quy tắc ngẫu nhiên mà không có lý do
Option 4: Bằng cách chỉ dựa vào các thông tin cũ đã có sẵn
Answer: Bằng cách sử dụng phương pháp bài toán thư giãn và nhiều kỹ thuật khác
Citation: ABSOLVER sử dụng phương pháp bài toán thư giãn và nhiều kỹ thuật khác để tạo ra các heuristic một cách tự động từ các khái niệm xác định bài toán, như đã được nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến cách mà ABSOLVER tạo ra các heuristic từ các khái niệm xác định bài toán, và câu trả lời được gợi ý đã nêu đúng phương pháp mà ABSOLVER sử dụng, đó là phương pháp bài toán thư giãn và nhiều kỹ thuật khác. Các đáp án khác cũng có thể tìm thấy trong tài liệu, trong đó đáp án đúng nhất là câu trả lời được gợi ý. Do đó, câu trả lời được gợi ý là chính xác và phù hợp.
cau hoi dung: question='Làm thế nào để ABSOLVER tạo ra các heuristic một cách tự động từ các khái niệm xác định bài toán?' options=['Bằng cách sử dụng phương pháp bài toán thư giãn và nhiều kỹ thuật khác', 'Bằng cách chỉ sử dụng một phương pháp duy nhất', 'Bằng cách áp dụng các quy tắc ngẫu nhiên mà không có lý do', 'Bằng cách chỉ dựa vào các thông tin cũ đã có sẵn'] answer='Bằng cách sử dụng phương pháp bài toán thư giãn và nhiều kỹ thuật khác' citation='34\nlà chi phí đường đi  của một giải pháp đúng đối với một bài toán giải trí là một heuristic tốt đối \nvới bài toán gốc (ban đầu). \n \nNếu việc định nghĩa vấn đề được viết dưới dạng một ngôn ngữ chính thức, có thể xây dựng \ncác bài toán thư giãn một cách tự động. 3 Ví dụ, nếu các toán tử của trò chơi số 8  được miêu tả \nnhư sau: \n \nQuân cờ A có thể đi từ ô A đến ô B nếu A là cạnh B và B trống, thì chúng ta có thể tạo ra ba \nbài toán giải trí bằng cách  bỏ đi một hoặc nhiều hơn các điều kiện: \n(a) Quân cờ A có thể đi từ ô A đến ô B nếu A ở cạnh B. \n(b) Quân cờ A có thể đi từ ô A đến ô B nếu B là trống. \n(c) Quân cờ A có thể đi từ ô A đến ô B. \nGần đây, một chương trình được gọi là ABSOLVER đã được viết mà có thể tạo ra các \nheuristic một cách tự động từ các khái niệm xác định bài toán, sử dụng phương pháp “bài toán thư \ngiãn” và rất nhiều các kỹ thuật khác (Prieditis, 1993). ABSOLVER sinh ra một heuristic mới cho \ntrò chơi số 8  tốt hơn bất cứ heuristic đang tồn tại nào, và tìm ra heuristic hữu ích đầu tiên cho trò \nchơi nổi tiếng là hình khối lập phương Rubik. \nMột vấn đề của việc tạo ra các hàm heuristic mới là chúng ta thường thất bại trong việc có \nđược một heuristic “tốt nhất một cách rõ ràng”. Nếu chúng ta có một tập các heuristic chấp nhận \nđược  h1…hm   cho một bài toán, và không có hàm nào vượt trội hơn hàm nào, chúng ta nên chọn \nheuristic nào? Như chúng ta sẽ thấy, chúng ta không cần thiết phải lựa chọn. Chúng ta có thể có \nheuristic tốt nhất , bằng cách định nghĩa:   \nh(n) = max(h1(n) \n,…, hm(n)). \nHeuristic tổ hợp này sử dụng bất cứ hàm nào chính xác nhất đối với nút trong câu hỏi. Do \ncác heuristic thành phần là chấp nhận được  , h cũng chấp nhận được. Hơn nữa, h vượt trội hơn so \nvới tất cả các heuristic thành phần tạo nên nó. \n \nMột cách khác để phát minh   ra một heuristic tốt là sử dụng thông tin thống kê. Điều này \ncó thể thu được bằng cách chạy một phép tìm kiếm đối với một số các bài toán đào tạo, như 100 \nmô hình ngẫu nhiên của trò chơi số 8 được chọn, và thu thập các thống kê. Ví dụ, chúng ta có thể \ntìm thấy rằng, khi h2(n) = 14, thì 90% của quãng đường  thực sự để tới đích là 18.  Như vậy khi \ngặp những bài toán “thực sự”, chúng ta có thể sử dụng 18  làm giá trị quãng đường bất cứ khi nào \nh2(n) cho giá trị 14.  Tất nhiên, nếu chúng ta sử dụng các thông tin theo xác xuất như thế này, \nchúng ta đang từ bỏ sự bảo đảm về tính có thể chấp nhận được,  nhưng tính trung bình chúng ta có \nlẽ sẽ mở rộng ít nút hơn. \n \nThông thường có thể lấy ra các đặc điểm của một trạng thái mà đóng góp cho hàm định giá \nheuristic của nó, thậm chí nếu rất khó nói chính xác sự đóng góp là gì. Chẳng hạn, mục tỉêu trong \nđánh cờ là chiếu tướng đối phương, và các đặc điểm liên quan như số quân mỗi loại của mỗi bên, \nsố quân mà bị ăn bởi quân của đối thủ, v. .v. Thông thường, hàm định giá được giả định là tổ hợp \ntuyến tính của các giá trị đặc điểm. Thậm chí nếu chúng ta không biết các đặc điểm quan trọng \nnhư thế nào, hay thậm chí một đặc điểm là tốt hay xấu, ta vẫn có thể sử dụng một giải thuật học \ntập để thu được các hệ số hợp lý cho mỗi đặc điểm. Ví dụ, trong đánh cờ, một chương trình có thể \nhọc hỏi được rằng con hậu của một người nên có hệ số dương lớn, trong khi một con tốt của đối \nthủ nên có một hệ số âm nhỏ. \n \nMột yếu tố khác mà chúng ta chưa xem xét đến là chi phí tìm kiếm của việc chạy thật sự \nhàm heuristic trên một nút. Chúng ta vừa giả định rằng chi phí của việc tính toán hàm heuristic \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=32 idx_doc=31
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 84



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào MYCIN xử lý các luật suy diễn dựa trên độ đo chắc chắn?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[xử lý]
Option 1: Bằng cách sử dụng cơ chế lập luật gần đúng
Option 2: Bằng cách áp dụng lý thuyết xác suất cổ điển
Option 3: Bằng cách tạo ra các luật phức tạp
Option 4: Bằng cách điều chỉnh các kết luận dựa trên kinh nghiệm
Answer: Bằng cách sử dụng cơ chế lập luật gần đúng
Citation: MYCIN sử dụng cơ chế lập luật gần đúng để xử lý các luật suy diễn dựa trên độ đo chắc chắn, cho phép hệ thống đưa ra các kết luận có độ tin cậy khác nhau.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến cách MYCIN xử lý các luật suy diễn dựa trên độ đo chắc chắn, và câu trả lời được gợi ý là chính xác vì nó đề cập đến việc sử dụng cơ chế lập luật gần đúng, điều này được nêu rõ trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu và liên quan đến các khía cạnh khác nhau của MYCIN, do đó câu trả lời được gợi ý là đúng và phù hợp.
cau hoi dung: question='Làm thế nào MYCIN xử lý các luật suy diễn dựa trên độ đo chắc chắn?' options=['Bằng cách sử dụng cơ chế lập luật gần đúng', 'Bằng cách áp dụng lý thuyết xác suất cổ điển', 'Bằng cách tạo ra các luật phức tạp', 'Bằng cách điều chỉnh các kết luận dựa trên kinh nghiệm'] answer='Bằng cách sử dụng cơ chế lập luật gần đúng' citation='84\nCác kỹ thuật mới có nhiều ảnh hưởng đến các thành phần đối thoại, dữ liệu, và mô hình; \nví dụ như giao diện đồ hoạ hay cơ sở dữ liệu quan hệ. Ngoài ra trí tuệ nhân tạo cũng cung cấp các \nkhả năng biểu diễn và sử dụng mô hình trong những hình thức mới. \n3.7.3 Hệ hỗ chuyên gia HỆ MYCIN \nMở đầu \nMYCIN là một hệ lập luận trong y học được hoàn tất vào năm 1970 tại Đại học Standford, \nHoa Kỳ. Đây là một hệ chuyên gia dựa trên luật và sự kiện. MYCIN sử dụng cơ chế lập luật gần \nđúng để xử lý các luật suy diễn dựa trên độ đo chắc chắn. Tiếp theo sau MYCIN, hệ EMYCIN ra \nđời, EMYCIN là một hệ chuyên gia tổng quát được tạo lập bằng cách loại phần cơ sở tri thức ra \nkhỏi hệ MYCIN, EMYCIN cung cấp một cơ chế lập luận và tuỳ theo bài toán cụ thể sẽ bổ sung tri \nthức riêng của bài toán đó để tạo thành hệ chuyên gia. \n \nLý thuyết về sự chắc chắn dùng cho hệ chuyên gia \nLý thuyết về sự chắc chắn dựa trên số lần quan sát. Đầu tiên theo lý thuyết xác suất cổ \nđiển thì tổng số của sự tin tưởng và sự phản bác một quan hệ phải là 1. Tuy vậy trong thực tế các \nchuyên gia lại gán cho kết luận của họ những mệnh đề đại loại như “ có vẻ đúng”. “gần đúng”, \n“đúng khoảng 70%”… \nLý thuyết về sự chắc chắn dùng độ đo chắn chắn để lượng định những mệnh đề trên và \ncung cấp một số luật nhằm kết hợp các độ đo chắc chắn để dẫn đến kết luận. Trước khi tìm hiểu \nđộ đo chắc chắn, chúng ta xét “ sự tin cậy” và “ sự phản bác” một quan hệ. \nGọi MB(H/E) là độ đo sự tin cậy của giả thuyết  khi có chứng cứ E. \nMD(H/E) là độ đo sự không tin cậy và giả thuyết khi có chứng cứ E. \nThế thì: \n0 < MB(H/E) < 1 khi MD(H/E) = 0 \n0 < MD(H/E) <1 khi MB(H/E) = 0 \nĐộ đo chắc chắn CF(H/E) được tính bằng công thức: \nCF(H/E) = MB(H/E) – MD(H/E) \nKhi giá trị của độ đo chắc chắn tiến dần về 1 thì chứng cớ biện minh cho giả thuyết nhiều \nhơn \nKhi giá trị của độ đo chắc chắn tiến dần về -1 thì chứng cớ phản bác giả thuyết nhiều hơn. \nKhi CF có giá trị 0 có nghĩa là có rất ít chứng cớ để biện minh hay phản bác giả thuyết. \nKhi các chuyên gia tạo ra các luật suy diễn, họ phải cung cấp độ đo chắc chắn của luật. T\n \nrong quá trình lập luận, chúng ta sẽ thu nhận được độ đo chắc chắn của chứng cớ và dựa \nvào hai độ đo chắc chắn trên để tính được độ đo chắc chắn của giả thuyết ( còn được gọi là kết \nluận). \nLuật đơn giản \nLuật đơn giản có dạng sau: \nIf(e) then (c) \nGọi CF(e) là độ đo chắc chắn của chứng cớ. \nCF(r) là độ đo chắc chắn của luật suy diễn  \nThế thì CF(c) là độ đo chắc chắn của kết luận sẽ được tính bằng công thức: \nCF(c) = CF(e) * CF(r) \nCông thức này chính là nền tảng cho cơ chế lập luận của MYCIN. \nLập luận phức tạp \nTrong thực tế chúng ta có thể gặp các luật phưc tạp như sau: \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=82 idx_doc=81
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 85



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để áp dụng tri thức vào quy trình xác định một vấn đề trong tìm kiếm tốt nhất?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[áp dụng]
Option 1: Bằng cách sử dụng hàm định giá để quyết định nút nào sẽ được mở rộng tiếp theo.
Option 2: Bằng cách chỉ mở rộng nút đầu tiên trong hàng đợi.
Option 3: Bằng cách không sử dụng tri thức trong quá trình tìm kiếm.
Option 4: Bằng cách mở rộng tất cả các nút cùng một lúc.
Answer: Bằng cách sử dụng hàm định giá để quyết định nút nào sẽ được mở rộng tiếp theo.
Citation: Đáp án đúng là "Bằng cách sử dụng hàm định giá để quyết định nút nào sẽ được mở rộng tiếp theo" vì nội dung đã nêu rõ rằng tri thức được cung cấp bởi hàm định giá giúp xác định nút nào sẽ được mở rộng trong chiến lược tìm kiếm tốt nhất.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến việc áp dụng tri thức trong quy trình tìm kiếm tốt nhất, và câu trả lời được gợi ý đã nêu rõ cách thức này thông qua việc sử dụng hàm định giá để quyết định nút nào sẽ được mở rộng tiếp theo. Điều này hoàn toàn phù hợp với nội dung trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng chỉ có đáp án gợi ý là đúng và liên quan đến câu hỏi.
cau hoi dung: question='Làm thế nào để áp dụng tri thức vào quy trình xác định một vấn đề trong tìm kiếm tốt nhất?' options=['Bằng cách sử dụng hàm định giá để quyết định nút nào sẽ được mở rộng tiếp theo.', 'Bằng cách chỉ mở rộng nút đầu tiên trong hàng đợi.', 'Bằng cách không sử dụng tri thức trong quá trình tìm kiếm.', 'Bằng cách mở rộng tất cả các nút cùng một lúc.'] answer='Bằng cách sử dụng hàm định giá để quyết định nút nào sẽ được mở rộng tiếp theo.' citation='28\n2.6. GIẢI QUYẾT VẤN ĐỀ VÀ CÁC KĨ THUẬT HEURISTIC \nCác phương pháp tìm kiếm có đầy đủ thông tin \n \nPhần trước đã chỉ ra rằng các chiến lược tìm kiếm không đầy đủ thông tin có thể tìm thấy \ngiải pháp đối với các bài toán bằng cách tạo ra một cách có hệ thống các trạng thái mới và kiểm \ntra chúng với mục tiêu. Điều không may là, những chiến lược này rõ ràng là không có hiệu quả \ntrong hầu hết các trường hợp. Phần này cho một chiến lược tìm kiếm có thêm hiểu biết (có đủ \nthông tin the- một chiến lược sử dụng các tri thực đặc thù đối với bài toán - có thể tìm các giải \npháp một cách hiệu quả hơn như thế nào. Phần này cũng chỉ ra các bài toán tối ưu có thể được \ngiải quyết. \n \n \n Phương pháp tìm kiếm tốt nhất (Best-first)  \n \n  \n \n \n \n \n \n \n \n Hình 2.6  Một phương pháp tìm kiếm tốt nhất sử dụng các giải thuật tìm kiếm tổng quát \n \n \nTrong chương trước, chúng ta đã tìm thấy một số cách để áp dụng các tri thức cho qui \ntrình xác định rõ ràng chính xác một vấn đề bằng các thuật ngữ về trạng thái và các toán tử. \nTuy nhiên, khi chúng ta được đưa  cho một bài toán mà được chỉ rõ cụ thể, các sự lựa chọn \ncủa chúng ta là có giới hạn. Nếu chúng ta sử dụng giải thuật tìm kiếm tổng quát, thì cách duy \nnhất có thể áp dụng được tri thức là hàm "hàng đợi”, hàm quyết định nút nào sẽ được mở rộng \ntiếp theo. Thông thường, tri thức để quyết định điều này được cung cấp bởi một hàm định giá \ntrả về một số có nghĩa mô tả sự mong muốn được mở rộng nút. Khi các nút được xếp thứ tự \nđể nút nào có định giá tốt nhất sẽ được mở rộng trước. Chiến lược như vậy được gọi là phép \ntìm kiếm tốt nhất (best-first). Nó có thể được cài đặt trực tiếp với tìm kiếm tổng quát, như \nhình 2.6. \n \nTên gọi “tìm kiếm tốt nhất” là phép tìm kiếm quan trọng nhưng không chính xác. Nếu \nchúng ta mở rộng nút tốt nhất trước tiên, đó không phải là phép tìm kiếm - đó là một cách đi \nthẳng đến mục tiêu. Điều có thể làm là chọn nút tỏ ra là tốt nhất theo hàm giá. Nếu hàm giá là \nrõ, thì nút này sẽ là nút tốt nhất. Trong thực tế, hàm giá thỉnh thoảng có sai sót và việc tìm \nkiếm bị lạc đường. Tuy nhiên, chúng ta sẽ dùng tên “tìm kiếm tốt nhất”, vì tên “tìm kiếm vẻ \nngoài tốt nhất“ có vẻ không tiện. \n \nKhi có một họ giải thuật tìm kiếm tổng quát với các hàm theo thứ tự khác nhau, tồn tại \nmột họ các giải thuật tìm kiếm tốt nhất với các hàm giá khác nhau. Vì mục đích là tìm kiếm \ncác giải pháp có chi phí thấp, những giải thuật này sử dụng phướng pháp đánh giá các chi phí \ncủa giải pháp và cố gắng tối thiểu nó. Chúng ta có một phương pháp đo: sử dụng chi phí \nFunction best-first-search(problem, hàm định giá) return một dãy giải pháp \nInput : problem, một bài toán \n           Hàm định giá, một hàm giá trị \nHàm hàng đợi – một hàm mà sắp thứ tự các nút theo hàm giá \nReturn    general-search ( problem, hàm hàng đợi) \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=26 idx_doc=25
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 86



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Mô tả quá trình nào trong toán tử sinh sản liên quan đến việc loại bỏ các nhiễm sắc thể kém thích nghi?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[mô tả]
Option 1: Phép tái sinh
Option 2: Phép chọn
Option 3: Toán tử ghép chéo
Option 4: Toán tử đột biến
Answer: Phép chọn
Citation: Phép chọn là quá trình loại bỏ các nhiễm sắc thể kém thích nghi trong quần thể, được mô tả bằng cách sắp xếp quần thể theo thứ tự mức độ thích nghi giảm dần và giữ lại n cá thể tốt nhất.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu mô tả quá trình liên quan đến việc loại bỏ các nhiễm sắc thể kém thích nghi, và câu trả lời được gợi ý là 'Phép chọn', điều này hoàn toàn chính xác. Trong tài liệu, phép chọn được mô tả là quá trình loại bỏ các nhiễm sắc thể kém thích nghi trong quần thể, do đó câu trả lời này đúng với câu hỏi. Các đáp án khác cũng được liệt kê, nhưng chỉ có 'Phép chọn' là đáp án đúng cho câu hỏi này.
cau hoi dung: question='Mô tả quá trình nào trong toán tử sinh sản liên quan đến việc loại bỏ các nhiễm sắc thể kém thích nghi?' options=['Phép tái sinh', 'Phép chọn', 'Toán tử ghép chéo', 'Toán tử đột biến'] answer='Phép chọn' citation='138\n \nToán tử sinh sản gồm hai quá trình: quá trình sinh sản (phép tái sinh), quá trình chọn lọc \n(phép chọn).  \na.1. Phép tái sinh \nPhép tái sinh là quá trình các nhiễm sắc thể được sao chép trên cơ sở độ thích nghi. Độ \nthích nghi là một hàm được gán giá trị thực, tương ứng với mỗi nhiễm sắc thể trong quần thể. \nQuá trình này, được mô tả như sau: \nXác định độ thích nghi của từng nhiễm sắc thể trong quần thể ở thế hệ thứ t, lập bảng \ncộng dồn các giá trị thích nghi (theo thứ tự gán cho từng nhiễm sắc thể). Giả sử, quần thể có n \ncá thể. Gọi độ thích nghi của nhiễm sắc thể i tương ứng là\nif , tổng cộng dồn thứ i là \ntif  được \nxác định bởi: \n               \n∑\n=\n=\ni\nj\nj\nti\nf\nf\n1\n                                                                     \n  \nGọi \nn\nF  là tổng độ thích nghi của toàn quần thể. Chọn một số ngẫu nhiên f  trong \nkhoảng từ 0 tới \nn\nF . Chọn cá thể thứ k đầu tiên thoả mãn \ntkf\nf ≥\n đưa vào quần thể mới.  \na.2. Phép chọn   \n Phép chọn là quá trình loại bỏ các nhiễm sắc thể kém thích nghi trong quần thể. Quá \ntrình này được mô tả như sau: \n\x1f Sắp xếp quần thể theo thứ tự mức độ thích nghi giảm dần.  \n\x1f Loại bỏ các nhiễm sắc thể ở cuối dãy. Giữ lại n cá thể tốt nhất.  \nb. Toán tử ghép chéo \nGhép chéo là quá trình tạo nhiễm sắc thể mới trên cơ sở các nhiễm sắc thể cha-mẹ bằng \ncách ghép một đoạn trên nhiễm sắc thể cha-mẹ với nhau. Toán tử ghép chéo được gán với một \nxác suất\ncp . Quá trình được mô tả như sau: \n\x1f Chọn ngẫu nhiên một cặp nhiễm sắc thể (cha-mẹ) trong quần thể. Giả sử, nhiễm sắc thể \ncha-mẹ có cùng độ dài m.  \n\x1f Tạo một số ngẫu nhiên trong khoảng từ 1 tới m-1 (gọi là điểm ghép chéo). Điểm ghép \nchéo chia nhiễm sắc thể cha-mẹ thành hai chuỗi con có độ dài m1, m2. Hai chuỗi con \nmới được tạo thành là: m11+ m22 và m21+m12.  \n\x1f Đưa hai nhiễm sắc thể mới vào quần thể.  \n \nc. Toán tử đột biến \n Đột biến là hiện tượng nhiễm sắc thể con mang một số đặc tính không có trong mã di \ntruyền của cha-mẹ. Phép đột biến được gán xác suất\nm\np (nhỏ hơn nhiều so với xác suất ghép \nchéo\ncp ). Điều này được suy diễn bởi trong tự nhiên, đột biến Gen thường rất ít xảy ra. Phép \nđột biến được mô tả như sau: \n•  Chọn ngẫu nhiên một nhiễm sắc thể trong quần thể;  \n•  Tạo một số ngẫu nhiên k trong khoảng từ 1 tới m, \nm\nk ≤\n≤\n1\n; \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=136 idx_doc=135
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 87



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để áp dụng phương pháp chứng minh bác bỏ trong toán học?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[áp dụng]
Option 1: Giả sử P sai và dẫn đến mâu thuẫn
Option 2: Giả sử P đúng và tìm ra hệ quả
Option 3: Chứng minh rằng P không thể xảy ra
Option 4: Chứng minh P bằng cách sử dụng các định lý khác
Answer: Giả sử P sai và dẫn đến mâu thuẫn
Citation: Để chứng minh P đúng, ta giả sử P sai và dẫn tới một mâu thuẫn, điều này là cốt lõi của phương pháp chứng minh bác bỏ trong toán học.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến phương pháp chứng minh bác bỏ trong toán học, và câu trả lời được gợi ý "Giả sử P sai và dẫn đến mâu thuẫn" là chính xác và phù hợp với nội dung trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng không đúng với phương pháp chứng minh bác bỏ. Do đó, câu trả lời được gợi ý là đúng hơn các đáp án khác.
cau hoi dung: question='Làm thế nào để áp dụng phương pháp chứng minh bác bỏ trong toán học?' options=['Giả sử P sai và dẫn đến mâu thuẫn', 'Giả sử P đúng và tìm ra hệ quả', 'Chứng minh rằng P không thể xảy ra', 'Chứng minh P bằng cách sử dụng các định lý khác'] answer='Giả sử P sai và dẫn đến mâu thuẫn' citation='51\ncho được gọi là các tiên đề. Các công thức được suy ra được gọi là các định lý. Dãy các luật được \náp dụng để dẫn tới định lý được gọi là một chứng minh của định lý. Nếu các luật suy diễn là tin \ncậy, thì các định lý là hệ quả logic của các tiên đề. \nVí dụ: Giả sử ta có các công thức sau: \nQ ∧ S ⇒ G ∨ H \n(1) \nP ⇒ Q   \n \n(2) \nR ⇒ S  \n \n(3) \nP \n \n \n(4) \nR \n \n \n(5) \nGiả sử ta cần chứng minh công thức G∨H. Từ công thức (2) và (4), ta suy ra Q (Luật \nModus Ponens). Lại áp dụng luật Modus Ponens, từ (3) và (5) ta suy ra S. Từ Q, S ta suy ra Q∧S \n(luật đưa vào hội). Từ (1) và Q∧S ta suy ra G∨H. Công thức G∨H đã được chứng minh. \nTrong các hệ tri thức, chẳng hạn các hệ chuyên gia, hệ lập trình logic,..., sử dụng các luật \nsuy diễn người ta thiết kế lên các thủ tục suy diễn (còn được gọi là thủ tục chứng minh) để từ \ncác tri thức trong cơ sở tri thức ta suy ra các tri thức mới đáp ứng nhu cầu của người sử dụng. \nMột hệ hình thức (formal system) bao gồm một tập các tiên đề và một tập các luật suy \ndiễn nào đó (trong ngôn ngữ biểu diễn tri thức nào đó). \nMột tập luật suy diễn được xem là đầy đủ, nếu mọi hệ quả logic của một tập các tiên đề \nđều chứng minh được bằng cách chỉ sử dụng các luật của tập đó.  \nPhương pháp chứng minh bác bỏ \nPhương pháp chứng minh bác bỏ (refutation proof hoặc proof by contradiction) là một \nphương pháp thường xuyên được sử dụng trong  các chứng minh toán học. Tư tưởng của phương \npháp này là như sau: Để chứng minh P đúng, ta giả sử P sai (thêm ⎤ P vào các giả thiết) và dẫn tới \nmột mâu thuẫn. Sau đây ta sẽ trình bầy cơ sở của phương pháp chứng minh này. \nGiả sử chúng ta có một tập các công thức G ={G1,.....,Gm} ta cần chứng minh công thức H \nlà hệ quả logic của G. Điều đó tương đương với chứng minh công thức G1^....^Gm ⇒ H là vững \nchắc. Thay cho chứng minh G1^..... ^Gm ⇒H là vững chắc, ta chứng minh G1^....^Gm ^⎤ H là \nkhông thỏa mãn được. Tức là ta chứng minh tập G’= (G1,.......,Gm,⎤ H) là không thỏa được. G sẽ \nkhông thoả được nếu từ G‘ta suy ra hai mệnh đề đối lập nhau. Việc chứng minh công thức H là hệ \nquả logic của tập các tiêu đề G bằng cách chứng minh tính không thỏa được của tập các tiêu đề \nđược thêm vào phủ định của công thức cần chứng minh, được gọi là chứng minh bác bỏ. \n3.5.5.  Luật phân giải, chứng minh bác bỏ bằng luật phân giải \nĐể thuận tiện cho việc sử dụng luật phân giải, chúng ta sẽ cụ thể hoá luật phân giải trên \ncác dạng câu đặc biệt quan trọng. \n\x1fLuật phân giải trên các câu tuyển \nA1 ∨............... ∨ Am ∨ C \n⎤ C ∨ B1 ∨............... ∨ Bn       \nA1 ∨........... ∨ Am ∨ B1 ∨... ∨ Bn \ntrong đó Ai, Bj và C là các literal. \n\x1fLuật phân giải trên các câu Horn: \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=49 idx_doc=48
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 88



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để thuật toán A* đảm bảo tính tối ưu trong việc tìm kiếm giải pháp?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
Option 1: Bằng cách sử dụng hàm h chấp nhận được không vượt quá chi phí thực tế đến đích
Option 2: Bằng cách chỉ sử dụng hàm g để tính toán chi phí
Option 3: Bằng cách áp dụng phương pháp tìm kiếm tham lam trước
Option 4: Bằng cách không cần quan tâm đến chi phí thực tế của giải pháp
Answer: Bằng cách sử dụng hàm h chấp nhận được không vượt quá chi phí thực tế đến đích
Citation: Thuật toán A* đảm bảo tính tối ưu bằng cách sử dụng hàm h chấp nhận được, nghĩa là hàm h không vượt quá chi phí thực tế đến đích. Điều này giúp đảm bảo rằng giá trị f(n) không bao giờ vượt quá chi phí thực tế của giải pháp, từ đó đảm bảo tính tối ưu và hoàn thành của thuật toán.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:apply...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Thuật toán A* sử dụng hàm nào để tính toán chi phí ước tính của giải pháp tốt nhất?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[tính toán]
Option 1: h(n)
Option 2: g(n)
Option 3: f(n)
Option 4: hSLD
Answer: f(n)
Citation: Đáp án đúng là f(n) vì f(n) được định nghĩa là chi phí ước tính của giải thuật tốt nhất đi qua n, trong đó g(n) là chi phí đường đi từ nút đầu tới nút n và h(n) là chi phí ước tính của đường đi rẻ nhất từ n đến đích.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu thông tin về hàm mà thuật toán A* sử dụng để tính toán chi phí ước tính của giải pháp tốt nhất. Câu trả lời được gợi ý là 'f(n)', điều này hoàn toàn chính xác vì trong tài liệu đã nêu rõ rằng f(n) = g(n) + h(n) là chi phí ước tính của giải thuật tốt nhất đi qua n. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng 'f(n)' là câu trả lời đúng nhất cho câu hỏi.
cau hoi dung: question='Thuật toán A* sử dụng hàm nào để tính toán chi phí ước tính của giải pháp tốt nhất?' options=['h(n)', 'g(n)', 'f(n)', 'hSLD'] answer='f(n)' citation='30\nrồi, chúng không phải luôn luôn tìm ra các giải pháp tối ưu: cần phải có sự phân tích một cách kỹ \ncác giải pháp toàn cục, chứ không chỉ một sự lựa chọn tốt nhất tức thì.  \n \nPhép tìm kiếm tham lam tương tự phép tìm kiếm theo độ sâu ở điểm là nó ưu tiên đi theo \nmột đường đơn tới đích, nhưng nó sẽ quay lui khi gặp đường cụt.Nó có những nhược điểm giống \nvới phương pháp tìm kiếm sâu - không tối ưu, và không hoàn thành vì có thể rơi vào một đường \nvô hạn và không bao giờ quay lại để chọn khả năng khác. Độ phức tạp thời gian trong trường hợp \ntồi nhất của phép tìm kiếm tham lam là O(bm), với m là độ sâu tối đa của không gian tìm kiếm. \nBởi vì phép tìm kiếm tham lam lưu trữ tất cả các nút trong bộ nhớ, độ phức tạp không gian của nó \ntương tự như độ phức tạp thời gian. Với một hàm heuristic tốt, độ phức tạp không gian và độ phức \ntạp thời gian có thể giảm đáng kể. Lượng giảm phụ thuộc vào bài toán cụ thể và chất lượng của \nhàm h. \nTối thiểu hoá tổng chi phí đường đi: Thuật toán tìm kiếm A* \n \nPhương pháp tìm kiếm háu ăn tối thiểu hoá chi phí dự tính tới đích, h(n), và do đó giảm  chi \nphí tìm kiếm đi đáng kể. Điều không may là, đó không phải là phương pháp tối ưu cũng như hoàn \nthành. Mặt khác, phép tìm kiếm theo chi phí ít nhất lại tối thiểu hoá chi phí đường tính đến thời \nđiểm hiện tại, g(n); Đó là phương pháp tìm kiếm tối ưu và hoàn thành, nhưng có thể rất không \nhiệu quả. Sẽ rất tốt nếu chúng ta kết hợp cả hai phương pháp này để lợi dụng điểm mạnh của cả \nhai phương pháp. Rất may là chúng ta có thể làm được chính xác điều đó, kết hợp hai hàm định \ngiá đơn giản bằng cách cộng chúng lại: \nf(n) = g(n) + h(n) \n. \nDo  g(n)  đưa ra chi phí đường đi từ nút đầu tới nút n, và h(n) là chi phí ước tính của đường đi rẻ \nnhất từ n đến đích,  có :  \nf(n) = chi phí ước tính của giải thuật tốt nhất đi qua n \nNhư thế, nếu chúng ta cố gắng tìm giải pháp rẻ nhất, nút cần mở rộng trước hợp lý một cách hợp \nlý nhất là nút có giá trị thấp nhất của f. Điều thú vị về phương pháp này là phương pháp này còn \nhơn cả sự hợp lý. Thực tế chúng ta có thể chứng minh rằng nó là hoàn thành và tối ưu, với một \nhạn chế đơn giản đối với  hàm h. \n \nHạn chế là cần chọn một hàm h mà không vượt quá chi phi đi tới đích. Một hàm h như vậy \ndược gọi là một heuristic có thể chấp nhận. Những heuristic có thể chấp nhận là theo quan điểm  \ncủa những người lạc quan, vì họ nghĩ chi phí của việc giải quyết vấn đề là ít hơn thực tế. Sự lạc \nquan này cũng sẽ chuyển hàm f: Nếu h là chấp nhận được, f(n) không bao giờ vượt quá chi phí \nthực tế của giải pháp n. Phép tìm kiếm tốt nhất sử dụng f như là một hàm giá và một hàm h chấp \nnhận được với tên phương pháp tìm kiếm A*. \n \n \n \n \nHình 2.7. \n \n Ví dụ rõ ràng về phép heuristic chấp nhận được là khoảng cách đường thẳng hSLD mà \nchúng ta sử dụng để đi đến Bucaret. Khoảng cách đường thẳng là chấp nhận được bởi vì đường đi \nngắn nhất giữa bất cứ hai điểm là một đường thẳng. Trong hình 2.7, chúng ta chỉ ra một số bước \nđầu tiên của phép tìm kiếm A* tới Bucaret sử dụng phép heuristic hSLD. Chú ý rằng  phép tìm \nkiếm A* ưu tiên mở rộng từ Rimnicu Vilcea  hơn so với mở rộng từ Fagaras. Mặc dù thậm chí \nFunction A*-search(problem) return một giải pháp hoặc thất bại \nReturn best-first-search(problem, g+h) \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=28 idx_doc=27
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 89



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Chọn lựa qui tắc nào trong tập các qui tắc mà simple reflex agent sử dụng để thực hiện hành động?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[chọn lựa]
Option 1: Qui tắc phù hợp với trạng thái hiện tại
Option 2: Qui tắc không liên quan đến trạng thái
Option 3: Qui tắc ngẫu nhiên từ danh sách
Option 4: Qui tắc không có trong tập hợp quy tắc
Answer: Qui tắc phù hợp với trạng thái hiện tại
Citation: Câu trả lời đúng là "Qui tắc phù hợp với trạng thái hiện tại" vì simple reflex agent sử dụng hàm RULE-MATCH để tìm qui tắc đầu tiên trong tập các qui tắc mà nó phù hợp với sự mô tả trạng thái hiện tại được đưa đến.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu xác định qui tắc mà simple reflex agent sử dụng để thực hiện hành động, và câu trả lời được gợi ý là 'Qui tắc phù hợp với trạng thái hiện tại', điều này hoàn toàn đúng với nội dung tài liệu. Tài liệu mô tả rằng agent sử dụng qui tắc condition-action để kết nối tri giác với hành động, và qui tắc được chọn là qui tắc đầu tiên phù hợp với trạng thái hiện tại. Các đáp án khác cũng có thể tìm thấy trong tài liệu và không mâu thuẫn với câu hỏi, do đó câu trả lời được gợi ý là chính xác.
cau hoi dung: question='Chọn lựa qui tắc nào trong tập các qui tắc mà simple reflex agent sử dụng để thực hiện hành động?' options=['Qui tắc phù hợp với trạng thái hiện tại', 'Qui tắc không liên quan đến trạng thái', 'Qui tắc ngẫu nhiên từ danh sách', 'Qui tắc không có trong tập hợp quy tắc'] answer='Qui tắc phù hợp với trạng thái hiện tại' citation='156\n \nHình 5.19 đưa ra cấu trúc của một “simple reflex agent” dưới dạng giản đồ, chỉ ra qui tắc \ncondition – action cho phép agent thực hiện kết nối từ tri giác đến hành động như thế nào. Chúng \nta sử dụng hình chữ nhật để biểu thị trạng thái hiện tại bên trong tiến trình giải quyết của agent, \nhình oval biểu diễn thông tin cơ sở được sử dụng trong tiến trình. Agent chương trình cũng rất \nđơn giản, được chỉ ra ở hình 5.20. Chức năng INTERPRET-INPUT sinh ra một sự diễn tả trừu \ntượng của trạng thái hiện tại từ sự tri giác, RULE-MATCH trả về qui tắc đầu tiên trong tập các \nqui tắc mà nó phù hợp với sự mô tả trạng thái được đưa đến. mặc dù các agent có thể được thực \nhiện rất hiệu quả , nhưng phạm vi ứng dụng lại rất hẹp. \n \n \nfunction SIMPLE-REFLEX-AGENT(percept) return  action \nstatic: rules, a set of condition-action rules \nstate ← INTERPRET-INPUT(percept) \nrule ← RULE-MATCH(state,rules) \naction ← RULE-ACTION[rule] \nreturn action \nHình 2.20 Kiểu agent “Lái xe” \n \nAgent theo dõi (Agents that keep track of the world) \nSimple reflex agent mô tả ở phần trước sẽ chỉ làm việc nếu sự giải quyết chính xác có thể \nđược dựa trên tri giác hiện thời. Nếu chiếc ô tô phía trước là một mô hình đã xuất hiện trước đây \nkhông lâu, và bây giờ có ánh sáng đèn phanh được mang lại từ trung tâm kết quả ở nước Mỹ, thì \ntừ một hình ảnh đơn sẽ có thể nó rằng nó đang phanh. Không may, các mô hình cũ có sự khác biệt \nvề hình dáng đèn hậu, đèn phanh, đèn xi nhan, và không phải bao giờ cũng có khả năng trả lời \nrằng chiếc ô tô phía trước đang phanh. Vì vậy, dù là việc phanh đơn giản, thiết bị lái của chúng ta \nvẫn phải duy trì một vài phần nào đó tình trạng bên trong theo trình tự để lựa chọn hành động. Ở \nđây tình trạng bên trong không quá lớn – nó chỉ cần frame trước đó từ camera để dò tìm khi hai \nđèn đỏ ở rìa xe cộ cùng sáng hoặc tắt đồng thời. \nMÔI TRƯờNG \nThế giới xung \nquanh hiện nay như \nế\nHành động phải \nlàm bây giờ là gì \ncơ quan phản ứng lại kich \nthích \ncảm biến \nsensors \nqui tắc \ncondition - action \nHình 2.19 Sơ đồ biểu diễn simple reflex agent \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=154 idx_doc=154
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 90



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Giải thích cách thức hoạt động của vị từ Member(X,L) trong việc xác định thành phần của danh sách L.
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[giải thích]
Option 1: X là thành phần của danh sách L nếu nó là đầu danh sách hoặc thuộc đuôi danh sách.
Option 2: X luôn là đầu danh sách L.
Option 3: X chỉ có thể là thành phần của danh sách nếu nó nằm ở cuối danh sách.
Option 4: X không thể là thành phần của danh sách nếu không phải là đầu danh sách.
Answer: X là thành phần của danh sách L nếu nó là đầu danh sách hoặc thuộc đuôi danh sách.
Citation: Vị từ Member(X,L) được xác định bởi công thức: Member(X,L) ⇐(L = [X | L1])∨ (L = [Y | L2]∧ Member (X,L2)). Điều này có nghĩa là X có thể là đầu danh sách hoặc là thành phần của đuôi danh sách L.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu giải thích cách thức hoạt động của vị từ Member(X,L) trong việc xác định thành phần của danh sách L. Câu trả lời được gợi ý đã nêu rõ rằng X là thành phần của danh sách L nếu nó là đầu danh sách hoặc thuộc đuôi danh sách, điều này hoàn toàn chính xác và phù hợp với nội dung trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, trong đó chỉ có đáp án đúng là đáp án đầu tiên. Do đó, câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Giải thích cách thức hoạt động của vị từ Member(X,L) trong việc xác định thành phần của danh sách L.' options=['X là thành phần của danh sách L nếu nó là đầu danh sách hoặc thuộc đuôi danh sách.', 'X luôn là đầu danh sách L.', 'X chỉ có thể là thành phần của danh sách nếu nó nằm ở cuối danh sách.', 'X không thể là thành phần của danh sách nếu không phải là đầu danh sách.'] answer='X là thành phần của danh sách L nếu nó là đầu danh sách hoặc thuộc đuôi danh sách.' citation='64\n=[blue, red, white⎪[ yellow ] ] \n=[blue, red, white, yellow⎪[ ] ] \nChúng ta có thể biểu diễn danh sách bởi các hạng thức trong logic vị từ cấp một. Trong logic vị \ntừ, một danh sách được định nghĩa như sau: \nDanh sách hoặc là kí hiệu hằng [ ], hoặc là một hạng thức có dạng list(X,Y), trong đó list là kí \nhiệu hàm của hai biến, đối số X là một hạng thức bất kì và được gọi là đầu danh sách, đối số Y là \nmột danh sách và được gọi là đuôi danh sách. (Trong ngôn ngữ Prolog, người ta sử dụng kí hiệu \n“.” thay cho kí hiệu list; tức là hạng thức list(X,Y) trong Prolog được viết là.(X,Y). \nNhư vậy các cặp biểu diễn sau là tương đương: \nBiểu diễn hạng thức \n \n  \n \nBiểu diễn dấu ngoặc vuông \nlist(X,Y) \n \n \n \n \n[ X⎪Y ] \nlist(X,list(Y,Z)) \n \n \n \n[ X, Y⎪Z ] \nlist(X,list(Y,list(Z, [ ]))) \n \n \n[ X,Y,Z ] \nTrong ngôn ngữ Prolog, ta có thể sử dụng cả hai dạng biểu diễn danh sách. \nCác phép toán cơ bản trên danh sách: \n• \n. Quan hệ thành phần \nQuan hệ “đối tượng X là thành phần của danh sách L”được biểu diễn bởi vị từ: \nMember(X,L)  \nQuan hệ này được xác định như sau: \nX là thành phần của danh sách L nếu: \n(1) hoặc X là đầu danh sách L \n(2) hoặc X là thành phần của đuôi danh sách L \nTức là, vị từ Member(X,L) được xác định bởi công thức: \nMember(X,L) ⇐(L = [X | L1])∨ (L = [Y | L2]∧ Member (X,L2)) \nChẳng hạn, \n        Member(a,[a,b,c]) \n  \n Member([b,c],[a,[b,c],d]) \nlà các quan hệ đúng, còn  \n \n \n Member(b,[a,[b,c],d]) \nlà sai. \n• \nKết nối hai danh sách thành một danh sách  \nPhép toán kết nối 2 danh sách L1 và L2 thành một danh sách L được biểu diễn bởi vị từ  \n \n     Conc(L1,L2,L) \nQuan hệ này được xác định như sau: \nDanh sách L là kết nối của 2 danh sách L1 và L2 nếu: \n(1) hoặc L1=[ ] và L= L2 \n(2) hoặc L1 ≠[ ] và đầu của L là đầu của L1 và đuôi của L là kết nối của đuôi L1 và L2. \nTức là, quan hệ Conc(L1,L2,L) được xác định bởi công thức: \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=62 idx_doc=61
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 91



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để xác định chất lượng của một hàm heuristic trong tìm kiếm giải thuật ngắn nhất?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
Option 1: Bằng cách tính toán hệ số phân nhánh hiệu quả b*
Option 2: Bằng cách so sánh các quân cờ ở sai vị trí
Option 3: Bằng cách đo khoảng cách giữa các quân cờ
Option 4: Bằng cách kiểm tra số lượng nút được mở rộng
Answer: Bằng cách tính toán hệ số phân nhánh hiệu quả b*
Citation: Chất lượng của một hàm heuristic được xác định thông qua hệ số phân nhánh hiệu quả b*, được tính dựa trên tổng số các nút được mở rộng bởi A* và độ sâu giải pháp.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:apply...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để đánh giá hiệu quả của hàm heuristic trong tìm kiếm giải thuật ngắn nhất?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[đánh giá]
Option 1: Bằng cách tính toán hệ số phân nhánh hiệu quả b*
Option 2: Bằng cách so sánh số lượng nút được mở rộng
Option 3: Bằng cách lập kế hoạch cho các bài toán giải trí
Option 4: Bằng cách chọn lựa giữa các hàm heuristic khác nhau
Answer: Bằng cách tính toán hệ số phân nhánh hiệu quả b*
Citation: Chất lượng của một hàm heuristic có thể được xác định thông qua hệ số phân nhánh hiệu quả b*, cho phép đánh giá số nút được mở rộng trong quá trình tìm kiếm giải thuật ngắn nhất.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến tài liệu vì nó hỏi về cách đánh giá hiệu quả của hàm heuristic trong tìm kiếm giải thuật ngắn nhất, điều này được đề cập trong tài liệu. Câu trả lời được gợi ý là chính xác và phù hợp với nội dung tài liệu, vì nó đề cập đến việc tính toán hệ số phân nhánh hiệu quả b*, một phương pháp được nêu rõ trong tài liệu. Các đáp án khác cũng liên quan và có thể tìm thấy trong tài liệu, do đó, câu trả lời được gợi ý là đúng và có thể chấp nhận được.
cau hoi dung: question='Làm thế nào để đánh giá hiệu quả của hàm heuristic trong tìm kiếm giải thuật ngắn nhất?' options=['Bằng cách tính toán hệ số phân nhánh hiệu quả b*', 'Bằng cách so sánh số lượng nút được mở rộng', 'Bằng cách lập kế hoạch cho các bài toán giải trí', 'Bằng cách chọn lựa giữa các hàm heuristic khác nhau'] answer='Bằng cách tính toán hệ số phân nhánh hiệu quả b*' citation='33\nbước tiếp theo là tìm một hàm heuristic tốt. Nếu chúng ta muốn tìm kiếm các giải thuật ngắn nhất, \nchúng ta cần một hàm heuristic mà không bao giờ ước đoán vượt quá số các bước đi tới mục tiêu. \nSau đây là hai “ứng cử viên”: \n• h1 = số lượng quân cờ mà ở sai vị trí. Đối với hình 2.9, 7 trong số 8 quân cờ ở sai vị trí, vì \nvậy trạng thái đầu sẽ có h1 = 7. h1 là một hàm heuristic chấp nhận được, bởi vì rõ ràng là \nbất cứ quân cờ nào mà đang ở sai vị trí phải di chuyển ít nhất một lần.  \n• h2 = tổng số khoảng cách của các quân cờ so với vị trí mục tỉêu. Bởi vì các quân cờ không \nthể đi theo các đường chéo, khoảng cách mà chúng ta tính tổng sẽ là tổng của các khoảng \ncách theo chiều ngang và theo chiều dọc. Khoảng cách này đôi khi được gọi là “khoảng \ncách khối thành phố”(city block distance) hoặc khoảng cách Manhantan h2 là chấp \nnhận được, vì bất cứ nước đi nào cũng chỉ có thể di chuyển một quân cờ một bước gần \nhơn tới đích. Các quân cờ từ 1 đến 8 trong trạng thái đầu cho ta một khoảng cách \nManhatan là: \n      \n                    h2 = 2 + 3 + 3 + 2 + 4 + 2 + 0 + 2 = 18 \nHiệu quả (tác dụng) của độ chính xác heuristic trong khi  thực hiện \nMột cách để xác định chất lượng của một hàm heuristic là hệ số phân nhánh hiệu quả b*. \nNếu tổng số các nút được mở rộng bởi A* đối với một bài toán nào đó là N, và độ sâu giải pháp là \nd, thì b* là hệ số phân nhánh mà một cây đồng dạng có độ sâu d sẽ phải có để chứa được N nút. \nNhưvậy,  \n \n                                     N =  1 + b* + (b*)2 +….+ (b*)d \n \nChẳng hạn, nếu A* tìm thấy một giải pháp ở độ sâu bằng 5 sử dụng 52 nút, thì hệ số phân \nnhánh hiệu quả là 1,91. Thông thường, hệ số phân nhánh hiệu quả đưa ra bởi một heuristic cho \ntrước là khá ổn định đối với đa số các bài toán. Do đó, các phép đo thử nghiệm giá trị b* trong \nmột tập nhỏ các bài toán có thể đưa ra một chỉ dẫn tốt khi xét tổng thể hàm heuristic. Một hàm \nheuristic được thiết kế tốt sẽ có giá trị b* gần với 1, cho phép giải quyết một số lượng lớn các bài \ntoán. Để kiểm tra các hàm heuristic h1 và h2, chúng ta ít khi sinh ra 100 bài toán, mỗi bài toán với \ncác độ dài giải pháp là 2,4,…,20, và giải quyết chúng với phép tìm kiếm A* với h1 và h2, cùng \nvới phép tìm kiếm lặp sâu dần không đầy đủ thông tin. Hình 2.8  đưa ra số trung bình các nút \nđược mở rộng bởi chiến lược tìm kiếm và hệ số phân nhánh hiệu quả. Kết quả cho thấy là h2 tốt \nhơn h1 và phép tìm kiếm thiếu thông tin tồi hơn nhiều. \nXây dựng các hàm heuristic \n \nChúng ta đã thấy rằng, cả h1 và h2 là những heuristic khá tốt đối với trò chơi số 8, và h2 thì \ntốt hơn h1. Nhưng chúng ta không biết làm thế nào để phát minh ra một hàm heuristic. Làm sao \nmột người có thể có được một heuristic như h2? Một máy tính có thể phát minh một cách máy \nmóc ra được một heuristic như vậy không? \n \nh1 và h2  là các đánh giá (ước đoán) đối với độ dài đường đi còn lại trong trò chơi số 8, \nnhưng chúng cũng có thể được xem là các độ dài đường đi có độ chính xác tuyệt vời đối với \nnhững kiểu đơn giản hoá của trò chơi này. Nếu như qui tắc của trò chơi được thay đổi để một \nquân cờ có thể di chuyển đến bất cứ chỗ nào, thay vì chỉ có thể đi đến ô trống ngay cạnh nó, thì h1 \nsẽ đưa ra một cách chính xác số các bước của giải pháp gần nhất. Tương tự, nếu một quân cờ có \nthể đi một ô theo tất cả các hướng, thậm chí đi vào ô đã bị chiếm bởi một quân cờ khác, thì h2 sẽ \nđưa ra con số chính xác các bước đi của giải pháp ngắn nhất. Một bài toán với ít ràng buộc hơn \nđối với các toán tử được gọi là một bài toán giải trí (relaxed problem). Thường xảy ra trường hợp \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=31 idx_doc=30
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 92



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Người ta thường sử dụng bao nhiêu hệ số MFCC trong các ứng dụng nhận dạng tiếng nói?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[sử dụng]
Option 1: 12 hệ số MFCC và 1 hệ số năng lượng
Option 2: 10 hệ số MFCC và 2 hệ số năng lượng
Option 3: 15 hệ số MFCC và 1 hệ số năng lượng
Option 4: 8 hệ số MFCC và 1 hệ số năng lượng
Answer: 12 hệ số MFCC và 1 hệ số năng lượng
Citation: Trong các ứng dụng nhận dạng tiếng nói, người ta thường lấy 12 hệ số MFCC và thêm 1 hệ số năng lượng của khung sau khi đã được chuẩn hóa làm tham số đặc trưng cho tín hiệu tiếng nói, tổng cộng có Q=13 hệ số.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến tài liệu vì nó hỏi về số lượng hệ số MFCC được sử dụng trong các ứng dụng nhận dạng tiếng nói, điều này được đề cập rõ ràng trong tài liệu. Câu trả lời được gợi ý là '12 hệ số MFCC và 1 hệ số năng lượng', đúng với thông tin trong tài liệu. Ngoài ra, các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất.
cau hoi dung: question='Người ta thường sử dụng bao nhiêu hệ số MFCC trong các ứng dụng nhận dạng tiếng nói?' options=['12 hệ số MFCC và 1 hệ số năng lượng', '10 hệ số MFCC và 2 hệ số năng lượng', '15 hệ số MFCC và 1 hệ số năng lượng', '8 hệ số MFCC và 1 hệ số năng lượng'] answer='12 hệ số MFCC và 1 hệ số năng lượng' citation='109\nThông thường, chỉ có một số giá trị đầu tiên của \nic  được sử dụng. Trong các ứng dụng \nnhận dạng tiếng nói, người ta thường lấy 12 hệ số MFCC và thêm 1 hệ số năng lượng của khung \nsau khi đã được chuẩn hóa làm tham số đặc trưng cho tín hiệu tiếng nói (như vậy tổng cộng có \nQ=13 hệ số). \n \nKhối 7: Cepstral có trọng số  \nVì độ nhạy của các hệ số cepstral bậc thấp làm cho phổ toàn bộ bị đổ dốc, độ nhạy của các \ncepstral bậc cao gây ra nhiễu nên người ta thường sử dụng cửa sổ cepstral để cực tiểu hóa độ nhạy \nnày. Công thức biểu diễn các hệ số cepstral có trọng số: \n                                 \n;\n1\n;\nsin\n2\n1\n^\nQ\ni\nc\nQ\ni\nQ\nc\ni\ni\n≤\n≤\n⎥\n⎦\n⎤\n⎢\n⎣\n⎡\n⎟⎟\n⎠\n⎞\n⎜⎜\n⎝\n⎛\n+\n=\nπ\n \n                                       \nKhối 8: Lấy đạo hàm các hệ số MFCC theo thời gian  \nĐể nâng cao chất lượng nhận dạng, người ta đưa thêm các giá trị đạo hàm theo thời gian của các \ngiá trị hệ số MFCC vào vector hệ số tiếng nói. Các giá trị đó được tính theo: \n                          \n;\n1\n;\n2\n)\n(\n1\n2\n1\n^\n^\n^\nQ\ni\nc\nc\nc\nt\nt\ni\n≤\n≤\n−\n=\nΔ\n∑\n∑\nΘ\n=\nΘ\n=\n−\n+\nθ\nθ\nθ\nθ\nθ\nθ\n                                       \ntrong đó; θ: là độ dài cửa sổ tính delta (thường chọn là 2 hoặc 3). \nKết thúc các bước trên với mỗi khung ta thu được một vector có 2Q thành phần biểu diễn \ntham số đặc trưng của tiếng nói. \nb. Phương pháp mã dự đoán tuyến tính LPC \nMô hình LPC được sử dụng để trích lọc các tham số đặc trưng của tín hiệu tiếng nói. Kết \nquả của quá trình phân tích tín hiệu thu được một chuỗi gồm các khung tiếng nói. Các khung này \nđược biến đổi nhằm sử dụng cho việc phân tích âm học. \nNội dung phân tích dự báo tuyến tính là: một mẫu tiếng nói được xấp xỉ bởi tổ hợp tuyến \ntính của các mẫu trước đó. Thông qua việc tối thiểu hóa tổng bình phương sai số giữa các mẫu \nhiện tại với các mẫu dự đoán có thể xác định được một tập duy nhất các hệ số dự báo. Các hệ số \ndự báo này là các trọng số được sử dụng trong tổ hợp tuyến tính. Với dãy tín hiệu tiếng nói ( )\nn\ns\n, \ngiá trị dự báo được xác định bởi:  \n                                                      \n∑\n=\n−\n=\np\nk\nk\nk\nn\ns\nn\ns\n1\n~\n)\n(\n)\n(\nα\n                                                       \ntrong đó; \nk\nα : là các hệ số đặc trưng cho hệ thống. \n \n \n \n \n \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=107 idx_doc=106
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 93



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Ai đã xây dựng hệ thống máy tính nơ ron đầu tiên được gọi là SNARC vào năm 1951?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[xây dựng]
Option 1: Marvin Minsky và Dean Edmond
Option 2: Claude Shannon và Alan Turing
Option 3: Warren McCulloch và Walter Pitts
Option 4: Donald Hebb và Alan Turing
Answer: Marvin Minsky và Dean Edmond
Citation: Câu trả lời đúng là Marvin Minsky và Dean Edmond, vì họ đã xây dựng hệ thống máy tính nơ ron đầu tiên vào năm 1951 được gọi là SNARC, như được nêu trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu thông tin về ai đã xây dựng hệ thống máy tính nơ ron đầu tiên gọi là SNARC vào năm 1951, và câu trả lời được gợi ý là Marvin Minsky và Dean Edmond, đúng với thông tin trong tài liệu. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất với câu hỏi.
cau hoi dung: question='Ai đã xây dựng hệ thống máy tính nơ ron đầu tiên được gọi là SNARC vào năm 1951?' options=['Marvin Minsky và Dean Edmond', 'Claude Shannon và Alan Turing', 'Warren McCulloch và Walter Pitts', 'Donald Hebb và Alan Turing'] answer='Marvin Minsky và Dean Edmond' citation='4 \nnghiên cứu đương thời (như Wang (1960)) ông quan tâm đến việc có được những giải pháp đúng \nđắn, không quan tâm đến việc con người phải làm như thế nào.  \n1.1.2. Các qui tắc tư duy \nTriết gia Aristote là người đầu tiên hệ thống hoá “tư duy chính xác”. Phép tam đoạn luận của \nông đưa ra kết luận đúng nếu cả tiền đề chính và tiền đề thứ là đúng. Chẳng hạn: “nếu Sô-crát là \ncon người, mọi con người đều chết, như vậy Sô-crát sẽ chết”.  \n Môn tư duy logic phát triển vào cuối thế kỉ XIX đầu XX. Năm 1965 các chương trình cung \ncấp cho chúng ta đủ những thông tin, chi tiết về một vấn đề trong tư duy logic và tìm ra phương \npháp giải. Nếu vẫn còn vấn đề chưa có cách giải thì chương trình sẽ không ngừng tìm kiếm cách \ngiải. Môn logic truyền thống trong AI là điều mong mỏi để có được một chương trình mô tả hệ \nthống trí tuệ. \n1.1.3. Khởi nguồn của AI (1943 - 1956) \nNhững công việc đầu tiên của AI được Warren McCulioch và Walter Pitts (1943) thực hiện. \nHọ đã nghiên cứu ba cơ sở lí thuyết:  triết học cơ bản và chức năng của các nơ ron thần kinh; phân \ntích về các mệnh đề logic là của Russell và whitehead và cuối cùng là thuyết dự đoán của \nTurning. Họ đã đề ra mô hình nơ ron nhân tạo, trong đó mỗi nơ ron được đặc trưng bởi hai trạng \nthái “bật”, “tắt”. McCulloch và Pitts cũng đã phát hiện: mạng nơ ron có khả năng học. Donald \nHebb (1949) sử dụng luật học đơn giản tượng trưng cho việc truyền thông tin giữa các giữa các nơ \nron. \nĐầu những năm 1950, Claude Shannon (1950) và Alan Turning (1953) đã viết chương trình \nđánh cờ theo cách mà Von Newman sáng chế ra máy tính. Cùng lúc đó, hai sinh viên khoa toán \ntrường đại học Princeton, Marvin Minsky và Dean Edmond đã xây dựng hệ thống máy tính nơ ron \nđầu tiên vào năm 1951 được gọi là SNARC. Nó sử dụng khoảng 3000 bóng điện tử chân không và \nthiết bị cơ khí tự động tính giá trị thặng dư từ chùm B-24 để mô phỏng mạng với 40 nơ ron. \nNhóm thạc sĩ của Minsky nghi ngờ rằng liệu đây có được coi là một phần của toán học, nhưng \nNeuman một thành viên của nhóm đã cho biết rằng “nếu bây giờ nó không phải là một phần của \ntoán học thì một ngày nào đó nó sẽ là như thế”. Thật mỉa mai, sau này Minsky lại chính là người \nchứng minh học thuyết này và đã bác bỏ nhiều hệ thống nghiên cứu về mạng nơ ron trong suốt \nnhững năm 1970. \n     \nLòng say mê và tôn trọng lớn ngay từ rất sớm (1952-1969) \n   Năm 1958  McCarthy đã định nghĩa ngôn ngữ bậc cao Lisp, và trở thành ngôn ngữ lập \ntrình cho AI. Lisp là ngôn ngữ lập trình lâu đời thứ hai mà hiện nay vẫn sử dụng. Với Lisp, \nMcCarthy đã có phương tiện ông cần, nhưng để đáp ứng được yêu cầu và tài nguyên tính toán là \nmột vấn đề quan trọng. Cũng vào năm 1958, McCarthy xuất bản bài báo “Các chương trình với \ncách nhìn nhận chung”. Trong bài báo này, ông bàn về chương trình tư vấn, một chương trình giả \nđịnh được coi là hệ thống AI hoàn thiện đầu  tiên. Giống học thuyết logic và cách chứng minh các \nđịnh lý hình học, chương trình của McCarthy được thiết kế nhằm sử dụng kiến thức để nghiên cứu \ncách giải quyết vấn đề. Không như các chương trình khác, chương trình này là một bộ phận kiến \nthức của toàn bộ thế giới quan. Ông chỉ ra rằng làm thế nào để những điều rất đơn giản lại làm \ncho chương trình có thể khái quát được một kế hoạch đến sân bay và lên máy bay. Chương trình \nnày cũng được thiết kế để nó có thể chấp nhận vài chân lý mới về quá trình thực hiện bình thường. \nChính vì vậy, chương trình này có được những khả năng thực hiện trong các chương trình mới mà \nkhông cần lập trình lại.  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=2 idx_doc=1
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 94



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Xác định lý do nào dẫn đến việc mất từ trong lớp mở của ngôn ngữ học?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
Option 1: Do có hàng ngàn từ trong mỗi lớp
Option 2: Do lớp đóng không thay đổi
Option 3: Do không có từ mới được bổ sung
Option 4: Do lớp mở có ít từ hơn lớp đóng
Answer: Do có hàng ngàn từ trong mỗi lớp
Citation: Lý do dẫn đến việc mất từ trong lớp mở là do có hàng ngàn hoặc hàng chục ngàn thành viên trong mỗi lớp, và mỗi loại mới luôn luôn được bổ sung thêm vào.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:apply...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Phân loại các loại từ nào được gọi là lớp đóng trong ngôn ngữ học?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[phân loại]
Option 1: Đại từ, quán từ, giới từ, liên từ
Option 2: Danh từ, động từ, tính từ, trạng từ
Option 3: Đại từ, động từ, danh từ, tính từ
Option 4: Giới từ, tính từ, trạng từ, danh từ
Answer: Đại từ, quán từ, giới từ, liên từ
Citation: Câu trả lời đúng là "Đại từ, quán từ, giới từ, liên từ" vì trong nội dung đã nêu rõ rằng các loại từ này được gọi là lớp đóng và thường có một số lượng nhỏ các từ mà có thể được liệt kê theo quy tắc.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu phân loại các loại từ thuộc lớp đóng trong ngôn ngữ học, và câu trả lời được gợi ý đã liệt kê đúng các loại từ này là đại từ, quán từ, giới từ và liên từ. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng câu trả lời gợi ý là chính xác và phù hợp nhất với yêu cầu của câu hỏi.
cau hoi dung: question='Phân loại các loại từ nào được gọi là lớp đóng trong ngôn ngữ học?' options=['Đại từ, quán từ, giới từ, liên từ', 'Danh từ, động từ, tính từ, trạng từ', 'Đại từ, động từ, danh từ, tính từ', 'Giới từ, tính từ, trạng từ, danh từ'] answer='Đại từ, quán từ, giới từ, liên từ' citation='114\nNoun  \n→  \nstench| breeze| glitter| nothing \n \n \n| wumpus| pit| pits| gold| east| … \nVerb   \n→  \n is| see| smell| shoot| feel| stinks \n \n \n| go| grab| carry| kill| turn|… \nAdjective  \n→  \nright| left| east| sound| back| smelly|… \nAdverb \n→  \nhere| there| nearby| ahead \n \n \nRight| left| sound| back| … \nPronoun  \n→  \nme| you| I| it| … \nName  \n→    \nJohn| Mary| Boston| Aristotle|… \nArticle  \n→  \nthe| a| an| … \nPreposition \n→  \nto| in| on| near| … \nConjunction \n→  \nand| or| but| … \nDigit \n→  \n0| 1|2| 3| 4| 5| 6| 7| 8| 9 \n               Hình 4.9. Từ điển ngôn ngữ  \n \nMỗi một phạm trù đều kết thúc để biểu thị rằng có những từ khác ở trong phạm trù này. \nTuy nhiên chú ý rằng có hai lý do khác biệt cho việc mất từ. Đối với danh từ, động từ, tính từ và \ntrạng từ, nó là nguyên tắc cơ bản bất khả thi để hiển thị tất cả chúng. Không những có hàng ngàn \nhoặc hàng chục ngàn thành viên trong mỗi lớp, mà mỗi một loại mới luôn luôn được bổ sung \nthêm vào. Ví dụ, ngày nay “fax” là một danh từ và động từ phổ biến nhưng nó chỉ được đặt ra \ntrong vài nănm trước. Có bốn phạm trù được gọi là lớp mở. Những phạm trù khác (đại từ, quán từ, \ngiới từ, và liên từ) được gọi là lớp đóng. Chúng thường có một số lượng nhỏ các từ (một vài từ \nđến một vài nhóm từ) mà nó có thể được liệt kê theo quy tắc. sự thay đổi lớp đóng diễn ra trong \nhàng thế kỷ , không phải hàng tháng. Ví dụ “thee” và “thou” thường được sử dụng làm đại từ \ntrong thế kỷ XVII, bị suy tàn vào thế kỷ XIX, và ngày nay nó chỉ được thấy trong thơ ca và ngôn \nngữ địa phuơng. \nNgữ pháp  \nBước tiếp theo là phối hợp các từ trong cụm từ. chúng ta vẫn sử dụng năm biểu tượng \nnonterminal để định nghĩa sự khác nhau của cụm từ: câu (S), cụm danh từ (NP), cụm động từ \n(VP), cụm giới từ (PP), và mệnh đề quan hệ (Rel Clause)(4). Hình 4.10 xét một ngữ pháp cho ε0 \nvới một ví dụ cho mỗi một quy luật viết lại. \nS \n→ \n \n | \nNP,VP \nS Conjuntion S \nI +feel a breeze \nI feel a breeze+and+ I smell the \nwumpus \nNP \n→ \n \n | \n \n | \n \n | \n \n | \n \n |  \nPronoun \nNoun \nArticle Noun \nDigit Digit \nNP PP  \nNP Rel Clause \nI \nPits \nThe + wumpus \n3 4 \nthe wumpus+ to the east \nthe wumpus+ that is smell \nVP   → \n \n | \n \n | \n \n | \n \n | \nVerb \nVP NP \nVP adjective \nVP PP \nVP Adverb \nStinks \nFeel+ a breeze \nIs+ smelly \nTurn+ to the east \nGo+ ahead \nPP \n→ \nPriposition NP \nTo+ the east \nRelClause→ \nThat VP \nThat+ is smelly \n       Hình 4.10. Ngữ pháp cho từđiển, với cụm từ ví dụ cho mỗi quy luật \n                                                 \n \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=112 idx_doc=111
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 95



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Ai đã áp dụng thuật toán Back-propagation trong nghiên cứu AI vào những năm 1980?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[áp dụng]
Option 1: David Rumelhart
Option 2: Geoff Hinton
Option 3: Bryson và Ho
Option 4: Austin Tate
Answer: David Rumelhart
Citation: David Rumelhart là một trong những người đã nghiên cứu và áp dụng thuật toán Back-propagation trong lĩnh vực AI vào những năm 1980, cùng với Geoff Hinton, như đã được đề cập trong nội dung.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu thông tin về ai đã áp dụng thuật toán Back-propagation trong nghiên cứu AI vào những năm 1980. Câu trả lời được gợi ý là 'David Rumelhart', người đã được nhắc đến trong tài liệu như một trong những nhà nghiên cứu liên quan đến mạng nơ ron trí nhớ và thuật toán Back-propagation. Các đáp án khác cũng có thể tìm thấy trong tài liệu và đều liên quan đến lĩnh vực nghiên cứu AI, do đó câu trả lời được gợi ý là chính xác và phù hợp với câu hỏi.
cau hoi dung: question='Ai đã áp dụng thuật toán Back-propagation trong nghiên cứu AI vào những năm 1980?' options=['David Rumelhart', 'Geoff Hinton', 'Bryson và Ho', 'Austin Tate'] answer='David Rumelhart' citation='11\nlượng lớn các nơ ron đơn giản đã có thể coi như một số nguyên tử trong chất rắn. Các nhà vật lý \nhọc như Hopfield (1982) đã sử dụng các kĩ thuật cơ học thống kê dẫn tới các ý tưởng thụ thai \nchéo quan trọng. Các nhà triết học David Rumelhart và Geoff Hinton nghiên cứu các mẫu mạng \nnơ ron trí nhớ. Vào những năm 1980, có ít nhất bốn nhóm khác nhau nghiên cứu lại thuật toán \nBack-propagation. Thuật toán này được công bố lần đầu vào năm 1969 bởi Bryson và Ho. Thuật \ntoán được áp dụng rất nhiều trong khoa học máy tính và tâm lý học, và phổ biến kết quả trong \ncuốn “xử lý phân tán song song” (Rumelhart và McClelland, 1986). \nNhững năm gần đây, chúng ta đã chứng kiến sự thay đổi rất lớn trong nội dung và phương \npháp nghiên cứu AI. Nó trở nên phổ biến khi dựa trên các lý thuyết có sẵn. Trong những năm \n1970, một số lớn các kiến trúc và các phương pháp đã buộc phải thử. Rất nhiều trong số này, thậm \ntrí là ad hoc và fragile và được tượng trưng ở một vài ví dụ được chọn là đặc biệt. Trong những \nnăm gần đây, các phương pháp dựa trên mô hình Markov ẩn (HMMs) đã thống trị lĩnh vực này, \nhai khía cạnh của HMMs có liên quan đến những vấn đề bàn luận  hiện tại. Đầu tiên, chúng được \ndựa trên lý thuyết toán học chính xác. Điều này cho phép các nhà nghiên cứu tiếng nói xây dựng \ncác kết quả toán học của một vài thập kỉ đã được phát triển ở một số lĩnh vực khác. Thứ hai, \nchúng đã được sinh ra bởi một quá trình xử lý trên tập dữ liệu tiếng nói. Chắc chắn rằng thực hiện \nđó là dạng thô, và trong các trắc nghiệm HMMs khắt khe không rõ ràng đã tiến triển đều đặn.     \nLĩnh vực khác xem ra có lợi ích từ sự chính thức hoá là lập kế hoạch. Công việc sớm được \nthực hiện bởi Austin Tate (1977), sau đó là David Chapman (1987) đã có kết quả trong sự tổng \nhợp của các chương trình lập kế hoạch vào một khung làm việc đơn giản. Đã có một vài lời \nkhuyên rằng nên xây dựng trên mỗi cái khác nhau hơn là bắt đầu từ con số không tại mỗi thời \nđiểm. Kết quả của các hệ thống lập kế hoạch đó chỉ thực sự tốt trong các thế giới thu hẹp, trong \nnăm 1970 nhiệm vụ lập lịch cho công việc của nhà máy. Xem Chương 11 và 12 để biết thêm chi \ntiết. \nCuốn Tranh luận theo xác suất trong các hệ thống thông minh đã đánh dấu một sự tán \nthưởng của lý thuyết quyết định và xác suất trong AI, tiếp theo sự hồi sinh của một sự thu nhỏ lí \nthú theo bài báo “Trong biện hộ của xác suất” của Peter Cheeseman (1985). Tin tưởng rằng hình \nthức mạng là phát minh đã cho phép tranh luận hiệu quả về chứng minh của sự phối hợp không \nchắc chắn. Cách tiếp cận lớn này vượt qua được vấn đề các hệ thống lập luận có khả năng trong \nnhững năm 1960 đến 1970... Chương 14 tới 16 bàn tới lĩnh vực này. \nCũng tương tự như cuộc cách mạng trong lĩnh vực người máy, khả năng của máy tính, máy \nhọc (bao gồm cả các mạng neural) và sự trình diễn tri thức. Một cách hiểu tốt nhất của các vấn đề \nvà sự phức tạp các thuộc tính, phối hợp cùng với sự ngụy biện đã gia tăng trong toán học, đã có sự \nchỉ đạo về lịch nghiên cứu công việc có khả năng và các phương pháp dạng thô. Có lẽ được \nkhuyến khích bởi sự tiến triển trong giải quyết các vấn đề con của AI, các nhà nghiên cứu đã bắt \nđầu tìm kiếm “yếu tố đầy đủ” cho vấn đề. Công việc của Allen Newel, John Laird và Paul \nRosenbloom ở SOAR (Newel, 1990; Laird 1987) là những ví dụ hiểu biết tốt nhất của một yếu tố \nhoàn chỉnh về kiến trúc trong AI. Cũng gọi là hành động có mục đích “trong những hoàn cảnh xác \nđịnh” của các yếu tố đưa vào trong các môi trường thực tế với các đầu vào cảm biến liên tục. \nNhiều kết quả lý thú đã được tìm thấy trong công việc; bao gồm sự thực rằng trước đó các lĩnh \nvực con riêng biệt của AI cần tái tạo lại cái gì đó khi mà các kết quả của họ là cùng chỗ trong thiết \nkế một yếu tố riêng rẽ.       \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=9 idx_doc=8
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 96



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để xác định điểm bắt đầu và điểm kết thúc của tiếng nói dựa trên hàm năng lượng thời gian ngắn?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
Option 1: Bằng cách so sánh hàm năng lượng với giá trị ngưỡng đã cho
Option 2: Bằng cách sử dụng tỷ lệ vượt quá điểm không
Option 3: Bằng cách phân loại các khung tiếng nói thành các nhóm khác nhau
Option 4: Bằng cách tính toán độ dài của từng khung tiếng nói
Answer: Bằng cách so sánh hàm năng lượng với giá trị ngưỡng đã cho
Citation: Điểm bắt đầu và điểm kết thúc của tiếng nói được xác định bằng cách so sánh hàm năng lượng thời gian ngắn với giá trị ngưỡng năng lượng cho trước, nếu hàm năng lượng lớn hơn ngưỡng thì đánh dấu là điểm bắt đầu khung.
Keyword: False
Tạo đủ 0/1 câu hỏi
Số lần tạo lại: 0

tao lai cau hoi level:apply...
Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Chọn lựa phương pháp nào trong số các phương pháp phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn và tỷ lệ vượt quá điểm không?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[chọn lựa]
Option 1: Phương pháp dựa trên hàm năng lượng thời gian ngắn
Option 2: Phương pháp dựa trên tỷ lệ vượt quá điểm không
Option 3: Phương pháp kết hợp cả hai
Option 4: Phương pháp không sử dụng hàm năng lượng
Answer: Phương pháp kết hợp cả hai
Citation: Câu trả lời đúng là 'Phương pháp kết hợp cả hai' vì nội dung đã mô tả rằng có hai phương pháp phát hiện tiếng nói là dựa trên hàm năng lượng thời gian ngắn và hàm giả năng lượng cùng với tỷ lệ vượt quá điểm không.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu chọn lựa phương pháp phát hiện tiếng nói từ các phương pháp đã được trình bày trong tài liệu. Câu trả lời được gợi ý là 'Phương pháp kết hợp cả hai', điều này hoàn toàn phù hợp với nội dung tài liệu, vì tài liệu đã đề cập đến cả hai phương pháp: dựa trên hàm năng lượng thời gian ngắn và tỷ lệ vượt quá điểm không. Các đáp án khác cũng có thể tìm thấy trong tài liệu, do đó câu trả lời được gợi ý là chính xác.
cau hoi dung: question='Chọn lựa phương pháp nào trong số các phương pháp phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn và tỷ lệ vượt quá điểm không?' options=['Phương pháp dựa trên hàm năng lượng thời gian ngắn', 'Phương pháp dựa trên tỷ lệ vượt quá điểm không', 'Phương pháp kết hợp cả hai', 'Phương pháp không sử dụng hàm năng lượng'] answer='Phương pháp kết hợp cả hai' citation='104\ntiếng nói người ta thường chia tiếng nói thành nhiều đoạn có thời gian bằng nhau được gọi là \nkhung (frame), mỗi khung có độ dài từ 10 đến 30 ms. \nPhát hiện tiếng nói \nPhát hiện thời điểm bắt đầu, điểm kết thúc của tiếng nói (tách tiếng nói ra khỏi khoảng \nlặng) là phần cần thiết trong chương trình nhận dạng tiếng nói, đặc biệt trong chế độ thời gian \nthực. Phần này trình bày ba phương pháp phát hiện tiếng nói dựa trên hàm năng lượng thời gian \nngắn SE (Short Energy) và tỷ lệ vượt quá điểm không ZCR (Zero Crossing).  \n \na. Phát hiện tiếng nói dựa trên hàm năng lượng thời gian ngắn \n \nHàm năng lượng thời gian ngắn của tín hiệu tiếng nói được tính bằng cách chia tín hiệu \ntiếng nói thành các khung, mỗi khung dài N mẫu. Mỗi khung được nhân với một hàm cửa sổ \n)\n(n\nW\n. Nếu hàm cửa sổ bắt đầu xét ở mẫu thứ m thì hàm năng lượng thời gian ngắn\nm\nE được xác \nđịnh như sau: \n      \n[\n]\n∑\n−\n+\n=\n−\n=\n1\n2\n)\n(\n)\n(\nN\nm\nm\nn\nm\nm\nn\nW\nn\nx\nE\n                                                             \ntrong đó:  \n \n   n: là biến rời rạc;  \n \n   m: là số mẫu thử thứ m;  \n \n   N: là tổng số mẫu tiếng nói \nHàm cửa sổ \n)\n(n\nW\n thường dùng là hàm cửa sổ chữ nhật được xác định như sau: \n⎢⎣\n⎡\n≥\n−\n≤\n≤\n=\nN\nn\nN\nn\nn\nW\n0\n1\n0\n1\n)\n(\n                                                         \nThuật toán xác định điểm đầu và điểm cuối tiếng nói theo phương pháp này: \nBước 1: Với mỗi khung của tín hiệu, xác định hàm năng lượng thời gian ngắn\nm\nE tính theo (2-1). \nNếu \nm\nE >\nthreshold\nE\n (giá trị ngưỡng năng lượng cho trước) thì đánh dấu là điểm bắt đầu khung (kí \nhiệu là khung B). Ngược lại, xét khung kế tiếp cho đến khi xác định được khung B. Nếu không xác \nđịnh được B,  kết luận: đó không là tín hiệu tiếng nói.  \nBước 2: Tính\nm\nE của khung kế tiếp khung B cho đến khi\nm\nE <\nthreshold\nE\n thì dừng và đánh dấu \nkhung đó là điểm kết thúc của một từ (kí hiệu khung E). Sau khi xác định điểm bắt đầu và kết thúc, \ndựa vào độ dài thời gian đoạn âm thanh đó để thêm bước kiểm tra: tín hiệu đó có chắc là tiếng nói \nkhông? (một từ tiếng Việt nếu phát âm rõ ràng thường dài hơn 200 ms). \n \n \nb. Phát hiện tiếng nói dựa trên hàm giả năng lượng và tỷ lệ vượt quá điểm không \n \nThuật toán này xác định điểm bắt đầu, điểm kết thúc của tín hiệu tiếng nói dựa trên hai đại \nlượng tĩnh của tín hiệu tiếng nói là: hàm giả năng lượng E (Pseudo-Energy) và tỷ lệ vượt quá \nđiểm không ZCR (Zero Crossing Rate) . \nTrong một dãy giá trị tín hiệu tiếng nói được rời rạc hóa, điểm không là điểm tại đó diễn \nra sự đổi dấu cường độ tín hiệu và được mô tả bởi:  \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=102 idx_doc=101
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 1
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 97



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Hãy nêu ra công thức nào tương đương với công thức ⎤ (∀x G(x))?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[nêu ra]
Option 1: ∃x (⎤ G(x))
Option 2: ∀x (⎤ G(x))
Option 3: ∃y (⎤ G(y))
Option 4: ∀y G(y)
Answer: ∃x (⎤ G(x))
Citation: Công thức ⎤ (∀x G(x)) tương đương với ∃x (⎤ G(x)) theo quy tắc chuyển phủ định tới các phân tử trong nội dung đã cung cấp.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi yêu cầu tìm công thức tương đương với công thức ⎤ (∀x G(x)). Theo tài liệu, công thức tương đương được nêu rõ là ⎤ (∀x G(x)) ≡ ∃x (⎤ G(x)). Câu trả lời được gợi ý là ∃x (⎤ G(x)), đúng với công thức tương đương trong tài liệu. Ngoài ra, các đáp án khác cũng có thể tìm thấy trong tài liệu, vì vậy đánh giá là 'yes'.
cau hoi dung: question='Hãy nêu ra công thức nào tương đương với công thức ⎤ (∀x G(x))?' options=['∃x (⎤ G(x))', '∀x (⎤ G(x))', '∃y (⎤ G(y))', '∀y G(y)'] answer='∃x (⎤ G(x))' citation='58\nbởi y. Ta nói G(y) là công thức nhận được từ G(x) bằngcách đặt tên lại (biến x được đổi tên lại là \ny). \nCác công thức tương đương: \n1. ∀x G(x) ≡ ∀y G(y) \n        \n ∃x G(x) ≡ ∃y G(y) \nĐặt tên lại biến đi sau lượng tử tồn tại, nhận được công thức tương đương. \n2. ⎤ (∀x G(x)) ≡ ∃x (⎤ G(x)) \n         \n \n \n \n ⎤ (∃x G(x)) ≡ ∀x (⎤ G(x)) \n3. ∀x (G(x) ∧ H(x)) ≡ ∀x G(x) ∧ ∀x H(x) \n           \n \n \n∃x (G(x) ∨ H(x)) ≡ ∃x G(x) ∨ ∃x H(x) \nVí dụ: ∀x Love(x, Husband(x)) ≡ ∀y Love(y, Husband(y)). \n3.5.6.2.  Chuẩn hóa và công thức \nTừ các câu phân tử, bằng cách sử dụng các kết nối logic và các lượng tử, ta có thể tạo ra các câu \nphức hợp có cấu trúc rất phức tạp. Để dễ dàng cho việc lưu trữ các câu trong bộ nhớ, và thuận lợi \ncho việc xây dựng các thủ tục suy diễn, chúng ta cần chuẩn hoá các câu bằng cách đưa chúng về \ndạng chuẩn tắc hội (hội của các câu tuyển). \nTrong mục này chúng ta sẽ trình bày thủ tục chuyển một câu phức hợp thành một câu ở \ndạng chuẩn tắc hội tương đương. \nThủ tục chuẩn hoá các công thức gồm các bước sau: \n• \nLoại bỏ các kéo theo  \nĐể loại bỏ các kéo theo, ta chỉ cần thay công thức P ⇒ Q bởi công thức tương đương ⎤ P ∨ Q \nthay P ⇔ Q bởi (⎤ P ∨ Q) ∧(⎤ P ∨ Q)  \n• \nChuyển các phủ định tới các phân tử  \nĐiều này được thực hiện bằng cách thay công thức ở vế trái bởi công thức ở vế phải trong các \ntương đương sau  \n⎤ (⎤ P) ≡ P \n⎤ (P ∧Q) ≡ ⎤ P ∨ ⎤ Q \n⎤ (P∨ Q) ≡ ⎤ P ∧ ⎤ Q \n⎤ (∀x P) ≡ ∃x (⎤P) \n⎤ (∃x P) ≡ ∀x (⎤P) \n• \nLoại bỏ các lượng tử tồn tại  \nGiả sử P(x,y) là các vị từ có nghĩa: “y lớn hơn x” trong miền các số. Khi đó, công thức∀x (∃y \n(P(x,y)) có nghĩa là “với mọi số x, tồn tại y sao cho số y lớn hơn x”. Ta có thể xem y trong công \nthức đó là hàm của đối số x. Chẳng hạn, loại bỏ lượng tử ∃y, công thức đang xét trở thành ∀\nx(P(x,f(x))). \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=56 idx_doc=55
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 98



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để tính toán tổng chi phí khi tìm đường từ Arad đến Bucarét?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[tính toán]
Option 1: Bằng cách cộng chi phí đường đi với chi phí tìm kiếm
Option 2: Bằng cách chỉ xem xét chi phí đường đi
Option 3: Bằng cách bỏ qua chi phí tìm kiếm
Option 4: Bằng cách chỉ tính chi phí tìm kiếm mà không cần chi phí đường đi
Answer: Bằng cách cộng chi phí đường đi với chi phí tìm kiếm
Citation: Tổng chi phí của việc tìm kiếm được xác định bằng cách cộng chi phí đường đi và chi phí tìm kiếm (S), theo nội dung đã cung cấp.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến tài liệu vì nó hỏi về cách tính toán tổng chi phí khi tìm đường từ Arad đến Bucarét, điều này được đề cập trong tài liệu. Câu trả lời được gợi ý là chính xác và đúng với nội dung của tài liệu, vì nó nêu rõ rằng tổng chi phí là tổng của chi phí đường đi và chi phí tìm kiếm. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng chỉ có câu trả lời được gợi ý là đúng với câu hỏi.
cau hoi dung: question='Làm thế nào để tính toán tổng chi phí khi tìm đường từ Arad đến Bucarét?' options=['Bằng cách cộng chi phí đường đi với chi phí tìm kiếm', 'Bằng cách chỉ xem xét chi phí đường đi', 'Bằng cách bỏ qua chi phí tìm kiếm', 'Bằng cách chỉ tính chi phí tìm kiếm mà không cần chi phí đường đi'] answer='Bằng cách cộng chi phí đường đi với chi phí tìm kiếm' citation='17\nthấp)? Thứ ba, chi phí tìm kiếm với thời gian tìm kiếm và bộ nhớ yêu cầu để tìm một giải pháp là \nbao nhiêu? Chi phí toàn bộ của việc tìm kiếm là tổng chi phí đường đi và chi phí tìm kiếm (S). \n \nĐối với vấn đề tìm đường đi từ Arad đến Bucarét, chi phí đường đi tỷ lệ thuận với tổng độ \ndài của đường, cộng thêm chi phí do sự cố dọc đường. Chi phí tìm kiếm phụ thuộc vào các tình \nhuống. Trong môi trường tĩnh, nó bằng không vì phạm vi thực hiện là độc lập với thời gian. Nếu \nphải cấp tốc đến Bucarét, môi trường là bán động bởi vì việc cân nhắc lâu hơn sẽ làm chi phí \nnhiều hơn. Trong trường hợp này, chi phí tìm kiếm có thbi ì ến thiên xấp xỉ tuyến tính với thời \ngian tính toán(ít nhất với một khoảng thời gian nhỏ). Do đó, để tính toán tổng chi phí, chúng ta \ncần phải bổ sung thêm các giá trị là dặm và mili giây. Điều này không phải luôn dễ dàng bởi vì \nkhông có một “tỷ lệ trao đổi chính thức” giữa hai đại lượng này. Agent bằng cách nào đó phải \nquyết định những tài nguyên nào sẽ dành cho việc tìm kiếm và những tài nguyên nào dành cho \nviệc thực hiện. Đối với những vấn đề có không gian trạng thái rất nhỏ, dễ dàng tìm ra giải pháp \nvới chi phí đường đi thấp nhất. Nhưng đối với những vấn đề phức tạp, lớn, cần phải thực hiện một \nsự thoả hiệp- agent có thể tìm kiếm trong một thời gian dài để tìm ra giải pháp tối ưu hoặc agent \ncó thể tìm kiếm trong một thời gian ngắn hơn và nhận được một giải pháp với chi phí đường đi \ncao hơn một chút. Chọn lựa trạng thái và hành động \n \nBây giờ chúng ta có các định nghĩa mới, chúng ta hãy bắt đầu sự điều tra các vấn đề của \nchúng ta với một vấn đề khá dễ như sau: “ Lái xe từ Arad đến Bucarét sử dụng các con đường trên \nbản đồ” Một không gian trạng thái có xấp xỉ 20 trạng thái, mỗi trạng thái được xác định bởi vị trí, \nđược ghi rõ là một thành phố. Như vậy, trạng thái ban đầu là “ở Arad” và kiểm tra mục tiêu là \n“đây có phải là Bucarét không?”. Các toán hạng tương ứng với việc lái dọc theo các con đường \ngiữa các thành phố. \n \nCác bài toán ví dụ  \n \nPhạm vi của các môi trường nhiệm vụ mà có thể được mô tả đặc điểm bởi các vấn đề được \nđịnh nghĩa rõ ràng là rất rộng lớn. Chúng ta có thể phân  biệt  giữa cái gọi là các bài toán trò \nchơi,  mà nhằm để minh hoạ hay thực hành rất nhiều các phương pháp giải quyết vấn đề, và cái \ngọi là các bài toán thuộc thế giới thực  mà sẽ là các vấn đề khó khăn hơn và mọi người thực sự \nquan tâm đến các giải pháp để giải quyết các vấn đề này. Trong phần này, chúng ta sẽ đưa ra ví dụ \ncho cả hai loại vấn đề đó. Các vấn đề đồ chơi tất  nhiên có thể mô tả một cách chính xác, ngắn \ngọn.  Điều đó có nghĩa là các nhà nghiên cứu khác nhau có thể dễ dàng sử dụng các vấn đề này để \nso sánh việc thực hiện của các giải thuật. Ngược lại, các vấn đề thế giới thực lại không thể có một \nsự miêu tả một cách đơn giản,  nhưng chúng ta sẽ cố gắng đưa ra một cách chung nhất về sự mô tả \nchính xác các vấn đề này. \n \nCác bài toán Trò chơi \n \nTrò chơi 8 quân cờ (Cờ ta canh) \n \nMột ví dụ của trò chơi 8 quân cờ được chỉ ra trong hình 2.1, gồm một bảng kích thước 3 x 3 \nvới 8 quân cờ được đánh số từ 1 đến 8 và một ô trống. Một quân cờ đứng cạnh ô trống có thể đi \nvào ô trống. Mục tiêu là tiến tới vị trí các quân cờ như ở trong hình bên phải. Một mẹo quan trọng \ncần chú ý là thay vì dùng các toán tử như “ chuyển quân cờ số 4 vào ô trống”, sẽ tốt hơn nếu có \ncác toán tử như “ ô trống thay đổi vị trí với quân cờ chuyển sang bên trái của nó”, bởi vì loại toán \ntử thứ hai này sẽ ít hơn. Điều đó sẽ giúp chúng ta có các khái niệm như sau: \n• \nCác trạng thái: một sự mô tả trạng thái chỉ rõ vị trí của mỗi quân cờ trong 8 quân cờ ở một \ntrong 9 ô vuông. Để có hiệu quả, sẽ có ích nếu trạng thái bao gồm cả vị trí của ô trống. \n• \nCác toán tử: ô trống di chuyển sang trái, phải, lên trên, đi xuống. \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=15 idx_doc=14
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 99



tao cau hoi level:apply...

Kiem tra cau hoi da ton tai hay chua...

Cau hoi: Làm thế nào để phân loại các tiên đề trong cơ sở tri thức (CSTT) sao cho hiệu quả hơn?
Cau hoi chua ton tai=>Kiem tra tu khoa....
Level: apply
[phân loại]
Option 1: Tạo ra các tiên đề độc lập mà không có mối liên hệ nào
Option 2: Sử dụng các tiên đề thừa để làm cho quá trình suy diễn hiệu quả hơn
Option 3: Chỉ sử dụng các tiên đề có thể suy ra từ nhau
Option 4: Xây dựng các tiên đề mà không cần chuẩn hoá
Answer: Sử dụng các tiên đề thừa để làm cho quá trình suy diễn hiệu quả hơn
Citation: Trong nội dung đã đề cập rằng CSTT có thể chứa các tiên đề "thừa", chúng không làm tăng thêm tri thức mới nhưng có thể làm cho quá trình suy diễn hiệu quả hơn.
Keyword: True
Danh gia cau hoi....
Lien quan: yes
Giai thich: Câu hỏi liên quan đến việc phân loại các tiên đề trong cơ sở tri thức (CSTT) để nâng cao hiệu quả suy diễn. Câu trả lời được gợi ý đúng với câu hỏi và có thể tìm thấy trong tài liệu, vì tài liệu đề cập đến việc sử dụng các tiên đề thừa để làm cho quá trình suy diễn hiệu quả hơn. Các đáp án khác cũng có thể tìm thấy trong tài liệu, nhưng không đúng hơn câu trả lời được gợi ý.
cau hoi dung: question='Làm thế nào để phân loại các tiên đề trong cơ sở tri thức (CSTT) sao cho hiệu quả hơn?' options=['Tạo ra các tiên đề độc lập mà không có mối liên hệ nào', 'Sử dụng các tiên đề thừa để làm cho quá trình suy diễn hiệu quả hơn', 'Chỉ sử dụng các tiên đề có thể suy ra từ nhau', 'Xây dựng các tiên đề mà không cần chuẩn hoá'] answer='Sử dụng các tiên đề thừa để làm cho quá trình suy diễn hiệu quả hơn' citation='67\nlogic trước khi đọc tiếp). Sử dụng các vị từ Mushroom(x)(x là nấm), Purple(y) (y màu tím), \nPoisonnous(z) (z có độc),chúng ta hãy chuyển các câu sau đây thành các công thức logic. \nMọi cây nấm tím đều có độc \n∀x(Mushroom(x)∧Purple(x)⇒ \nPoisonnous(x)) \nTất cả cây nấm hoặc có màu tím hoặc có độc \n∀x(Mushroom(x)⇒Purple(x)∨Poisonnous(x)) \n \nMọi cây nấm hoặc màu tím hoặc có độc nhưng không là cả hai \n∀x(Mushroom(x)⇒(Purple(x)∧⎤Poisonnous(x))∨(⎤Purple(x)∧ Poisonnous(x))) \nTất cả các cây nấm tím đều có độc trừ một cây \n∃x(Mushroom(x)∧Purple(x)∧⎤ Poisonnous(x))∧∀y(Mushroom(y)∧Purple(y)∧(y≠x)⇒\nPoisonnous(y))) \nChỉ có hai cây nấm tím \n∃x,y(Mushroom(x)∧Purple(x)∧Mushroom(y)∧Purple(y)∧(x≠y)∧  \n∀z,x(Mushroom(z)∧Purple(z)⇒(z=x)∨(z=y))) \nSau khi chúng ta đã viết ra các công thức logic (các tiên đề) mô tả các tri thức chung về \nlĩnh vực áp dụng, có thể xem như chúng ta đã xây dựng nên một CSTT.Để thuận lợi cho việc lưu \ntrữ CSTT trong máy tính, và thuận lợi cho thủ tục suy diễn hoạt động, chúng ta có thể chuẩn hoá \ncác câu trong CSTT. \nTrong toán học, người ta cố gắng tìm được một tập các tiên đề độc lập, tức là trong đó \nkhông có tiên đề nào có thể suy ra từ các tiên đề còn lại. Tuy nhiên, trong các hệ tri thức, CSTT \ncó thể chứa các tiên đề "thừa", chúng không làm tăng thêm các tri thức mới được suy ra, song \nchúng có thể làm cho quá trình suy diễn hiệu quả hơn. \n3.5.6.5.  Cài đặt cơ sở tri thức \nTrong mục trước, chúng ta đã xét một số kĩ thuật để xây dựng cơ sở tri thức (CSTT). \nCSTT là tập các mệnh đề (tiên đề) mô tả tri thức của về một lĩnh vực nào đó. Giả thiết, CSTT đã \nđược chuẩn hoá, tức gồm các câu tuyển (mỗi câu là tuyển của các literal). Thủ tục suy diễn, nói \nchung, là thủ tục chứng minh bác bỏ. Trong trường hợp CSTT là một tập các câu Horn (các luật \nIf-Then), ta có thể sử dụng thủ tục suy diễn tiến (forward chaining) hoặc thủ tục suy diễn lùi \n(forward chaining) sẽ được trình bày sau để lập luận. Trong các thủ tục suy diễn, ta phải thực hiện \nlặp công việc như sau: tìm ra các literal có thể hợp nhất được với một literal đang xét nào đó; nếu \ntìm được thì áp dụng luật phân giải cho hai câu chứa hai literal hợp nhất được đó. Do đó, để cho \nthủ tục suy diễn thực hiện hiệu quả, cần cài đặt CSTT sao cho công việc lặp lại trên được thực \nhiện hiệu quả. Trước hết, ta cần biểu diễn các hạng thức và các câu phân tử bằng các cấu trúc dữ \nliệu thích hợp. \n3.5.6.5.1.  Cài đặt các hạng thức và các câu phân tử: \nVề mặt cú pháp, các hạng thức và các câu phân tử có cấu trúc giống nhau Do đó, ta chỉ xét \nviệc cài đặt các hạng thức. Các hạng thức biểu diễn đối tượng trong thế giới hiện thực. Từ các đối \ntượng đơn được biểu diễn bởi các kí hiệu, hằng, biến; ta có thể tạo ra các đối tượng có cấu trúc. \nCác đối tượng có cấu trúc là các đối tượng có một số thành phần. Các thành phần này lại có thể là \ncác đối tượng có cấu trúc khác. Để kết hợp các thành phần tạo thành một đối tượng mới, sử dụng \nkí hiệu hàm (function). Chẳng hạn, sử dụng kí hiệu hàm Date, ngày 1 tháng 5 năm 2000 được \nCuuDuongThanCong.com\nhttps://fb.com/tailieudientucntt' level='apply' page=65 idx_doc=64
them cau hoi vao danh sach tam thoi!
Tạo đủ 1/1 câu hỏi
Số lần tạo lại: 0
Them 1 cau hoi vao danh sach tong
Tong cau hoi hien tai: 100
Tong characters: 1767778
Execution Time: 14m 11.82s
